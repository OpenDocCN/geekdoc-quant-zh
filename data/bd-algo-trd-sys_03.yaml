- en: PART III
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分
- en: DEVELOPING A STRATEGY
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 制定策略
- en: CHAPTER 9
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章
- en: Strategy Development–Goals and Objectives
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 策略开发–目标与任务
- en: When you go on a long trip in your car, do you have a map or global positioning
    system to guide you? Or do you just “wing it” and hope to find your destination
    by reading signs and going on instinct? Most people, of course, would have a map.
    It makes the journey so much easier. And it is the same with developing a trading
    system. You should know where you want to end up before you even start. It all
    starts with goals.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开车进行一次长途旅行时，你是否有地图或全球定位系统来引导你？还是仅凭直觉和路标希望找到目的地？当然，大多数人会带上地图。这让旅程变得更容易。在开发交易系统时也是如此。你应该在开始之前就知道自己想要达到什么。这一切都始于目标。
- en: 'You’ve probably heard it a million times during your life: if you want to accomplish
    something, you must have goals. Unfortunately, after hearing it so many times,
    many people just list goals to say they did it, or list vague goals that have
    no way of being measured or realized.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能一辈子听过无数次：如果你想要实现某件事，必须有目标。不幸的是，听过这么多次后，许多人只是列出目标以表明他们做到了，或者列出无法测量或实现的模糊目标。
- en: 'To develop a good trading system, you absolutely need goals. To do that, I
    employ the SMART technique ([Figure 9.1](#figure9-1)). SMART is a little mnemonic
    trick to assist in remembering all the important parts of a goal. Here is how
    I apply it to trading:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 要开发一个好的交易系统，你绝对需要目标。为此，我采用SMART技巧（[图9.1](#figure9-1)）。SMART是一个小记忆技巧，帮助记住目标的重要部分。以下是我在交易中应用的方法：
- en: '![images](images/c09f001.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c09f001.jpg)'
- en: '[**FIGURE 9.1**](#figureanchor9-1) SMART Goals'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图9.1**](#figureanchor9-1) SMART目标'
- en: '*Specific.* The goal must be specific, not vague. For example, it is not enough
    to say, “I want a trading system that makes me a lot of money” or “I want a trading
    system that has no risk.” Such vague goals, besides being unrealistic, are just
    too general. How will you even know when you reach such a nebulous goal? The simple
    fact is that you won’t know if you ever reach it.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*具体性。* 目标必须具体，而不是模糊。例如，仅仅说“我想要一个能让我赚钱的交易系统”或“我想要一个没有风险的交易系统”是不够的。这种模糊的目标不仅不现实，而且过于宽泛。你怎么能知道何时达成如此模糊的目标呢？简单的事实是，你根本不知道自己是否达到了这个目标。'
- en: '*Measurable.* How will you know you’ve created a trading system that meets
    your goals unless the goal can be measured? That is the second key to a solid
    goal. At the end of the development process, you want to have a trading system
    with certain performance metrics, and compare them to the goals you set at the
    outset. It is a very simple concept, but you’d be amazed how many people develop
    goals that aren’t measurable, such as “I want to create a trading system that
    makes my family proud.” An admirable quality in a trading system, to be sure,
    but how do you measure this? Maybe if your teenage kids walk alongside you in
    a public place, rather than 10 feet in front or behind you, you’ll know they are
    proud of you. But what if you don’t have teenagers?'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可测量性。* 如果目标无法测量，你怎么知道自己是否创建了一个符合目标的交易系统呢？这是一个坚实目标的第二个关键。在开发过程结束时，你希望拥有一个具有特定性能指标的交易系统，并将其与最初设定的目标进行比较。这是一个非常简单的概念，但你会惊讶于有多少人制定了无法测量的目标，例如“我想创建一个让我的家人骄傲的交易系统”。这无疑是一个值得赞赏的质量，但你怎么衡量这个呢？也许如果你的青少年孩子在公共场合与你并肩走，而不是在你前面或后面10英尺的地方，你就会知道他们为你感到骄傲。但是如果你没有青少年呢？'
- en: '*Attainable.* The “A” in SMART stands for attainable. There is absolutely no
    sense in saying, “I need to develop a trading system that will provide 500 percent
    annual return with less than 2 percent maximum drawdown.” That is not reality.
    You need to strive for a goal that is attainable. Otherwise, you will just become
    disappointed over and over, since you will be unable to create a trading system
    that meets such lofty goals. In the end, most people with unrealistic goals end
    up cutting corners by cheating in order to reach their goal. They’ll produce an
    ultra-optimized back test, curve fit to the extreme, that shows them reaching
    their unrealistic goals. But as I’ve said before, “If it seems too good to be
    true, it probably is.”'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可实现性。* SMART中的“A”代表可实现性。说“我需要开发一个能提供500%年回报且最大回撤低于2%的交易系统”是完全没有意义的。这不符合现实。你需要追求一个可实现的目标。否则，你只会一次又一次地感到失望，因为你无法创建出符合如此高目标的交易系统。最终，大多数有不切实际目标的人最终会通过作弊来达成目标。他们会生成一个超优化的回测，极度曲线拟合，显示他们达到了不现实的目标。但正如我之前所说，“如果听起来好得令人难以置信，那很可能就是不可信的。”'
- en: '*Relevant.* If you set goals for developing a trading system that aren’t relevant
    to the topic at hand, the whole goal exercise will be a waste of time. For example,
    let’s say you hate creating trading systems and hate the whole development process.
    Is it even worthwhile for you to pursue creating trading systems? Meaning, is
    the whole process even worthwhile to you? If not, you should probably just quit
    right now. To be successful in this field, your heart and mind must be fully committed.
    Trust me, there are thousands of professional traders committed to the cause.
    In a fight between committed traders and noncommitted traders, who do you think
    will win?'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*相关性。* 如果你设定的交易系统开发目标与当前主题无关，那么整个目标设定过程都是浪费时间。例如，假设你讨厌创建交易系统并厌恶整个开发过程。追求创建交易系统对你来说真的有价值吗？换句话说，整个过程对你来说值得吗？如果不值得，你可能现在就该放弃。要在这个领域取得成功，你的心和脑必须完全投入。相信我，有成千上万的专业交易者致力于这个事业。在投入与不投入的交易者之间的竞争中，你觉得谁会赢？'
- en: '*Time bound.* Creating a trading system takes time and consumes your free and
    working time, so having a time-based aspect to the goal is a great idea. It might
    be a certain amount of time you give yourself to create a strategy or a time limit
    for how long you’ll spend evaluating a single idea. The idea will be to keep the
    process moving at all times. As you’ll find out, it gets really difficult to find
    time and motivation to test new strategy ideas, especially when the last 100 ideas
    all failed.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*时间限制。* 创建交易系统需要时间，占用你的自由和工作时间，因此将时间作为目标的一个方面是个好主意。你可能会给自己设定一个创建策略的时间，或者设定评估单个想法的时间限制。这个想法是始终保持过程的推进。正如你将发现的那样，找到时间和动力来测试新的策略想法真的很难，特别是当之前的100个想法都失败时。'
- en: 'Now that we have the framework for a goal, let’s look at some examples:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了目标的框架，让我们看看一些例子：
- en: '*“I will create a trading system that meets my performance objectives.”*'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*“我将创建一个满足我绩效目标的交易系统。”*'
- en: Specific? No. Measurable? Not as written. Attainable? Possibly. Relevant? Yes.
    Time bound? No. This kind of goal needs a lot of work.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具体吗？不。可衡量吗？按现有写法不行。可达成吗？可能。相关吗？是的。时间有限吗？不。这种目标需要很多工作。
- en: '*“I will create a trading system in six months that meets my performance objectives.”*'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*“我将在六个月内创建一个满足我绩效目标的交易系统。”*'
- en: Is this a SMART goal? Yes and no. The first part is specific and measurable
    (“create a trading system in six months”), but the phrase “meets performance objectives”
    is too vague. It can’t be measured either. The beginning of the goal is very attainable—six
    months of hard work should yield a decent trading system, with subsequent systems
    developed even more quickly. It is also relevant and time bound. All in all it
    is a good goal, except for the last few words. Let’s try to improve it.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个SMART目标吗？是的和不是。第一部分具体且可衡量（“在六个月内创建一个交易系统”），但“满足绩效目标”这一短语过于模糊，无法衡量。目标的开头是非常可达成的——六个月的努力应该能产生一个不错的交易系统，后续系统的开发会更快。这也是相关且有时间限制的。总的来说这是一个好目标，除了最后几句话。让我们试着改进一下。
- en: '*“I will create a trading system in six months, one that trades the euro currency,
    returns an average of 50 percent per year, with a maximum drawdown of 30 percent,
    a winning percentage of 45 percent or higher, and follows all the steps in a well-defined
    development process.”*'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*“我将在六个月内创建一个交易系统，该系统交易欧元货币，年均回报率为50%，最大回撤为30%，胜率为45%或更高，并遵循明确定义的开发过程中的所有步骤。”*'
- en: Bingo! That goal meets all the requirements of a SMART goal. You can easily
    compare any system you create to those goals.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 太好了！这个目标符合SMART目标的所有要求。你可以轻松地将你创建的任何系统与这些目标进行比较。
- en: Once you have a SMART goal, and after you attempt to develop a few trading systems,
    you might find that what you felt were attainable goals are not that attainable.
    This usually hits people when they have annual returns and maximum drawdown listed
    in the goal. Sure, 100 percent annual returns is indeed possible (I am living
    proof!), but such returns are unrealistic if you also want a 10 percent maximum
    drawdown. Sometimes it is easy to see in advance that a goal is not attainable,
    but other times you’ll learn this only by running through the development process.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了SMART目标，并尝试开发几个交易系统，你可能会发现你认为可达成的目标其实并不那么可达成。通常，当人们在目标中列出年回报率和最大回撤时，便会意识到这一点。确实，100%的年回报是可能的（我就是活生生的例证！），但如果你还想要10%的最大回撤，这样的回报就不切实际。有时很容易提前看到一个目标不可达成，但其他时候你只有通过开发过程才能发现这一点。
- en: In such cases, you’ll want to turn your SMART goals into SMARTER goals. All
    that means is that after you try to reach the goal, if need be, you EVALUATE and
    REEVALUATE your goals. You adapt them to the situation at hand. This might seem
    to some like giving up—if your goal can’t be reached, just lower the goal—but
    it can also improve your chances of succeeding and finding a good trading system.
    If you find yourself in a situation where your goals can never be met, you can
    either walk away from the process and find a new hobby or career, or you can evaluate
    and adjust your goals to something more relevant and attainable.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你会希望将SMART目标转化为SMARTER目标。这意味着在你尝试实现目标之后，如有必要，你需要评估和重新评估你的目标。你要根据当下的情况调整它们。这对某些人来说可能看起来像是放弃——如果你的目标无法实现，那就降低目标——但这也可以提高你成功和找到良好交易系统的机会。如果你发现自己处于一个永远无法满足目标的情况中，你可以选择离开这个过程，寻找新的爱好或职业，或者评估并调整你的目标，使其更相关和可实现。
- en: Your goal in developing a trading system should be only one or two sentences,
    enough to be SMART. But what about some of your wants and desires for a trading
    system? How do you handle them? They might not easily fit into your goal, but
    they are important nonetheless. Examples of this could be the market you trade,
    the time of day you trade, or any other feature you deem important.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 开发交易系统的目标应该只有一两句话，足够SMART。但是对于你对交易系统的一些期望和愿望呢？你该如何处理它们？它们可能不容易融入你的目标，但无论如何它们仍然重要。这方面的例子可能是你交易的市场、你交易的时间，或任何其他你认为重要的特征。
- en: To accommodate characteristics and traits I want in a trading system, but that
    are not important enough to include in the SMART goal, I create what I call a
    “wish list.” It is as simple as it sounds; it is a checklist of features I want
    in my trading system.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了适应我在交易系统中想要的特征和特性，但这些特征并不足以包含在SMART目标中，我创建了一个我称之为“愿望清单”的东西。这就像它听起来那么简单；它是我希望在交易系统中具备的功能清单。
- en: What kinds of items can be in a wish list? [Figure 9.2](#figure9-2) gives an
    example of a checklist I once created. This was for a mini S&P futures (symbol
    ES) strategy I was trying to develop. They say that the strategy must fit your
    personality, and that is what I was attempting to do here. By detailing my likes
    and dislikes, and having them written down, it was easy for me to sketch out what
    my trading system should look like.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 愿望清单中可以包含哪些项目？[图 9.2](#figure9-2)展示了我曾经创建的一个清单示例。这是我尝试开发的迷你标准普尔期货（符号 ES）策略。人们说策略必须符合你的个性，而这正是我在这里努力的方向。通过详细列出我的喜好和厌恶，并将其记录下来，我可以轻松勾画出我的交易系统应该是什么样子。
- en: '![images](images/c09f002.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c09f002.jpg)'
- en: '[**FIGURE 9.2**](#figureanchor9-2) Sample Trading System “Wish List”'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 9.2**](#figureanchor9-2) 示例交易系统“愿望清单”'
- en: Of course, the longer the list of wishes, the tougher it will be to create a
    trading system. It will be very likely that you will not be able to satisfy all
    your wishes. That’s okay, though—just like everything in life is a compromise,
    so it is in trading development. Compromising on your wish list forces you to
    determine what is really important, and then just keep those items. Things you
    thought were important maybe are not all that important. In the end, though, the
    more wishes you can meet with your strategy, the more likely you will trade it
    with confidence and resolution. This confidence and resolve, sooner or later,
    will really be of value to you.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，愿望清单越长，创建交易系统就越困难。你很可能无法满足所有的愿望。不过没关系——就像生活中的一切都是妥协，交易开发也是如此。对愿望清单的妥协迫使你确定什么是真正重要的，然后只保留那些项目。你认为重要的东西可能并不真的那么重要。不过，最终，你能满足的愿望越多，你就越有可能以信心和决心进行交易。这种信心和决心，迟早会对你有价值。
- en: CHAPTER 10
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章
- en: Trading Idea
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 交易想法
- en: 'Once you have firmly established goals, you are ready to start developing a
    trading system. At the end of the process, you’ll have a trading system ready
    to test. To get to that point, however, you first have to address the following
    topics:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你明确设定了目标，就可以开始开发交易系统。在整个过程中，你将拥有一个准备测试的交易系统。然而，要达到这一点，你首先必须解决以下主题：
- en: Entry rules
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进入规则
- en: Exit rules
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 退出规则
- en: Market selection
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 市场选择
- en: Time frame/bar size
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间框架/条形图大小
- en: Programming
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程
- en: Data considerations
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据考虑
- en: The important points in each of these areas are discussed in the next two chapters.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 每个领域的重要点将在接下来的两章中讨论。
- en: '![images](images/gbox.jpg) How Will You Enter a Market?'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 你将如何进入市场？'
- en: Entry rules are the easiest part of designing a trading system for most people.
    Think of all the trading articles, advertisements, and information you have seen
    recently. What is usually the focus? “80 percent winning signals!” “Unique neural
    network entry techniques!” “Never-fail indicators!” “A former rocket scientist
    develops a foolproof technique for finding winning stocks!” The list goes on and
    on. Most traders are obsessed with getting the proper entry. Solve that problem,
    and everything else is a piece of cake, or so they think. The entry lovers love
    to point to the stock market and say, “Look what would have happened if you had
    bought Microsoft way back when.” These folks tend to ignore the drawdowns during
    the trade, as long as the entry was correct.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数人来说，入场规则是设计交易系统中最简单的部分。想想您最近看到的所有交易文章、广告和信息。通常的重点是什么？“80%的获胜信号！”“独特的神经网络入场技术！”“绝对不失败的指标！”“一位前火箭科学家开发出无懈可击的寻找盈利股票的技术！”这类的例子不胜枚举。大多数交易者痴迷于获得正确的入场。解决了这个问题，其他一切就简单了，或者他们这么认为。入场爱好者喜欢指着股市说：“看看如果您在那时买入微软会发生什么。”这些人往往忽视了交易中的回撤，只要入场是正确的。
- en: There is an even more fundamental reason, I believe, for entries being the focus
    of most traders. The time before entry is really the only time you feel in complete
    control. You tell the market, “Mr. Market, you must do this, that, and the other
    before I place a trade to enter. If you do not follow my rules, Mr. Market, I
    will not enter a trade. I am in charge here.” That feels nice, as opposed to the
    time spent in a trade, where many times you hope and pray the market roller coaster
    will go your way!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为，入场成为大多数交易者关注焦点的原因还有一个更根本的因素。在入场前的时间真的是您感到完全掌控的唯一时刻。您对市场说：“市场先生，在我下单之前，您必须做这个、那个和其他事情。如果您不遵循我的规则，市场先生，我就不会下单。我掌控这里。”这感觉很好，相比于交易期间，您常常希望并祈祷市场的过山车会朝您的方向发展！
- en: Entries, of course, are just one piece of the trading strategy puzzle. For ages,
    people have argued that entries were the most important aspect of a system, or
    that entries were the least important part. Dr. Van Tharp did a study years ago
    with random entries, and created successful trading systems by carefully designing
    the exits. However, I’m sure some people have also created good systems with random
    exits.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，入场只是交易策略拼图中的一部分。多年来，人们争论入场是系统中最重要的方面，或者说入场是最不重要的部分。范·萨普博士多年前做了一项随机入场的研究，通过仔细设计退出策略创建了成功的交易系统。然而，我相信也有人通过随机退出创造了良好的系统。
- en: In my experience, the importance of the entry is directly related to the time
    you spend in a trade. If you are a long-term swing trader, with trades lasting
    weeks to months, you don’t need pinpoint accuracy on the entry. An entry a few
    days early or a few days late will probably not ruin the profitability of your
    strategy. If you are scalping, however, then entry becomes very important. An
    entry off by a tick or two could turn a winning system into a piece of garbage.
    Keep that in mind when you design your system. Know how exact your entry needs
    to be before you develop it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我的经验，入场的重要性与您在交易中花费的时间直接相关。如果您是长期波段交易者，交易持续数周到数月，您并不需要精确的入场时机。提前或延迟几天的入场可能不会破坏您策略的盈利能力。然而，如果您是日内交易者，那么入场就显得非常重要。偏差一两个点的入场可能会将一个盈利系统变成一堆废物。在设计系统时，请牢记这一点。在开发之前，了解您的入场需要多么精确。
- en: Many people have trouble developing entry ideas, and that is a shame because
    entry ideas are all around us. I have a very good trader friend who uses magazine
    covers as part of his decision process. When he sees a few magazine covers talking
    about the upcoming drought or the shortage of physical gold, for example, he knows
    this might be a great time to enter the impacted markets—in the opposite direction,
    of course!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人在开发入场想法上遇到困难，这实在可惜，因为入场的想法无处不在。我有一个很好的交易朋友，他在决策过程中使用杂志封面。例如，当他看到几本杂志封面讨论即将到来的干旱或实物黄金短缺时，他知道这可能是进入受影响市场的好时机——当然是朝相反的方向！
- en: I provided some sources for entries in an earlier chapter, and I suggest you
    keep the list handy when you run out of inspiration. The key, once you have this
    list of ideas, is to turn them into solid entries that can be back tested. This
    is where discretion has no place. An algorithmic strategy, by definition, consists
    of an algorithm, a set of rules that define behavior. If your entry rules cannot
    be defined rigidly, then creating an algorithmic system is not appropriate.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我在早期的章节中提供了一些入场的来源，建议你在灵感枯竭时随时查阅这份清单。一旦你有了这个创意清单，关键在于将它们转化为可以进行回测的可靠入场。这是判断力没有立足之地的地方。算法策略的定义是由算法组成，即定义行为的一组规则。如果你的入场规则无法被严格定义，那么创建一个算法系统就不合适。
- en: 'Once you have your entry idea, you need to convert it to computer language.
    If you do not know how to program in your trading back-test software, you will
    likely have to hire someone to do the work for you. Before you do that, it is
    best to put the rule into what is called *pseudo code.* This is simply the entry
    instruction, given in plain English. Here is an example:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了入场想法，你需要将其转换为计算机语言。如果你不知道如何在交易回测软件中编程，你可能需要雇人来为你完成这项工作。在你这样做之前，最好将规则写成所谓的*伪代码*。这只是用简单英语给出的入场指令。这里有一个例子：
- en: If close this bar is the highest close of last X bars, then buy next bar at
    market.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果本条的收盘价是过去X条中的最高收盘价，则在下条以市场价买入。
- en: 'Converting to a language such as TradeStation’s Easy Language would yield the
    following:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为像TradeStation的Easy Language这样的语言会得到以下内容：
- en: If close = highest (close, X) then buy next bar at market.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果收盘价 = 最高（收盘价，X），则在下条以市场价买入。
- en: Creating pseudo code is a really important step, since it will help you clarify
    your entry rule, and help you identify any important variables that you want to
    optimize (“X” in the preceding example).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 创建伪代码是一个非常重要的步骤，因为它将帮助你理清入场规则，并帮助你识别出你想要优化的任何重要变量（前面的例子中的“X”）。
- en: 'A few pointers on creating a good entry:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 创建良好入场的一些提示：
- en: '*Keep it simple.* If you cannot explain the rule in plain English, you will
    have a tough time converting it to computer code, and chances are that what you
    program may not be what you really want.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*保持简单。* 如果你无法用简单的英语解释规则，你在将其转换为计算机代码时将会很困难，且你所编写的代码可能并不是你真正想要的。'
- en: '*Limit the number of input parameters.* If you have two or three conditions
    to your entry, it is easy to have 5, 10, or even more parameters you feel should
    be optimized. Remember, though, that for every parameter you optimize, the more
    you run the risk of overfitting your model. Keep it simple. I personally like
    to use only 1 or 2 optimizable parameters for my entries.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*限制输入参数的数量。* 如果你的入场有两个或三个条件，容易导致你觉得应该优化5、10甚至更多的参数。然而，请记住，对于每个你优化的参数，你就越有可能使模型过拟合。保持简单。我个人喜欢为我的入场使用1或2个可优化的参数。'
- en: '*Try to think differently.* Moving average crossovers have been tested ad nauseum
    by professionals and amateurs alike. Try to develop an entry unlike any you’ve
    ever seen—one that very few others might have tried.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*尝试不同的思维方式。* 移动平均交叉已被专业人士和业余爱好者反复测试。尝试开发一个与你见过的任何入场都不同的入场——一个很少有人尝试过的。'
- en: '*Use a single rule at first.* If you want an entry with multiple conditions,
    first start out with just one condition. Then, slowly add new conditions only
    if they significantly improve performance. You will likely find that many entry
    conditions you thought were important really were not.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*初始时使用单一规则。* 如果你想要一个有多个条件的入场，首先只从一个条件开始。然后，只有在这些条件显著改善性能时，才慢慢添加新的条件。你可能会发现，许多你认为重要的入场条件其实并不重要。'
- en: '![images](images/gbox.jpg) How Will You Exit a Market?'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 你将如何退出市场？'
- en: Compared to entries, exits are the red-headed stepchildren of trading strategies.
    Most people, myself included from time to time, pay very little attention to exits.
    I suppose it has to do with the lack of control mentioned earlier, since during
    a trade Mr. Market is in control. It can also be uneasy for many people to think
    of different ways to escape a losing trade, since the whole point of trading is
    to have money making trades, right?
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 与入场相比，退出在交易策略中就像红发继子一样。大多数人，包括我自己，有时对退出几乎不予关注。我想这与之前提到的控制缺乏有关，因为在交易中，市场先生掌控着局面。对于许多人来说，想到不同的方式来逃离亏损交易可能也会让人感到不安，因为交易的全部意义就是赚钱的交易，对吧？
- en: 'Exits, simply put, have a huge impact on overall profitability, and a trader
    really needs to spend a great deal of time preparing proper exits. Just as with
    entries, there are many different ways to exit. The most common ways are listed
    below:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，退出对整体盈利能力有巨大的影响，交易者确实需要花费大量时间准备适当的退出方式。与进场一样，退出的方式也有很多种。最常见的方式列举如下：
- en: '*Stop and reverse.* Your entry signal for a new position also becomes your
    exit signal for your existing position. Many people like to be in the market at
    all times, and this method accomplishes just that.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*停止并反转。* 你进入新仓位的信号也成为你现有仓位的退出信号。许多人喜欢随时参与市场，这种方法正好实现了这一点。'
- en: '*Technical-based exits.* Support/resistance lines, moving averages, candlestick
    patterns, and the like can all be formed into viable exit rules. The key with
    using such rules is to make sure they coordinate with the entry rules. Otherwise,
    exits could trigger immediately after entries triggered.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*基于技术的退出。* 支撑/阻力线、移动平均线、蜡烛图形态等都可以形成可行的退出规则。使用这些规则的关键是确保它们与进入规则相协调。否则，退出可能会在进入信号触发后立即触发。'
- en: '*Breakeven stops.* Many people swear by a breakeven stop, where as soon as
    practical, you move the stop-loss to a breakeven level. This may indeed be useful
    for the psyche of discretionary traders or for those obsessed with “winning,”
    who don’t want to see a winning trade turn into a loser. In my experience, though,
    breakeven stops always seem to limit profit potential, since they typically exit
    on a retracement, with the market then resuming its earlier trend.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*保本止损。* 许多人坚信保本止损，尽可能快地将止损位移至保本水平。这对于注重心理的自由交易者或那些执着于“获胜”的人来说可能确实有用，他们不想看到盈利交易变为亏损。但根据我的经验，保本止损似乎总是限制了利润潜力，因为它们通常在市场回调时退出，而市场随后又恢复早期趋势。'
- en: '*Stop-losses.* Some people swear *by* stop-losses, and some people swear *at*
    stop-losses. I look at it this way: if a stop-loss, even one far away from your
    entry, significantly reduces your strategy’s performance, perhaps your entry signal
    is the real problem. Stop-losses, when coupled with good entries, can help prevent
    catastrophe. Can you imagine trading the mini S&P, without a stop, right before
    a terrorist attack? True, you can get excessive slippage with stop-losses, but
    barring a market shutdown, at least you can get out, and live to trade another
    day. Stop-losses can be dollar based, chart based (i.e., exit near support/resistance),
    or based on parameters such as average true range. A simple stop-loss can become
    very complicated, indeed.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*止损。* 有些人坚信*止损*，而有些人则对*止损*嗤之以鼻。我是这样看的：如果一个止损，即使远离你的入场点，显著降低了你的策略表现，也许你的入场信号才是真正的问题。当止损与良好的入场结合时，可以帮助防止灾难。你能想象在恐怖袭击前交易迷你标普而没有止损吗？确实，你可能会在止损时遇到过大的滑点，但除非市场停摆，至少你可以退出，并继续交易。止损可以基于美元、图表（即，靠近支撑/阻力位退出），或基于平均真实波幅等参数。一个简单的止损可能确实会变得非常复杂。'
- en: '*Profit targets.* The old adage “let your profits run” is a tried-and-true
    trading malapropism. But letting profits run is not always the optimum way to
    trade. Sometimes it is better to hit a target, profit based or chart based, and
    then set up for the next entry signal. I tend to test with profit targets, but
    I also allow for a huge profit on the upper end. Many times, this becomes the
    best alternative.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*利润目标。* “让你的利润奔跑”这句老话是经过验证的交易错误。但是，让利润奔跑并不总是最佳的交易方式。有时，更好的是达到一个目标，无论是基于利润还是基于图表，然后再为下一个入场信号做准备。我倾向于测试利润目标，但我也允许上方有巨大的利润空间。很多时候，这成为最佳选择。'
- en: '*Trailing stops.* As the market rises in your favor, you keep a certain percentage
    of the profit. This really is a moving stop-loss, but instead of the stop leading
    to a loss, it leads to a smaller profit. The one problem with trailing stops is
    that they can have many parameters that need optimization. The extra parameters
    may not be worth the effort in live trading, although they will certainly make
    a back test look better.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*跟踪止损。* 当市场向有利方向上涨时，你保留一定比例的利润。这实际上是一个移动止损，但与其导致亏损，不如让利润减少。跟踪止损的一个问题是，它们可能有很多需要优化的参数。在实际交易中，这些额外的参数可能不值得付出努力，尽管它们会让回测看起来更好。'
- en: '![images](images/gbox.jpg) What Markets Will You Trade?'
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 你将交易哪些市场？'
- en: One of the toughest decisions you will make when designing your system is which
    market or markets to trade. There are really two schools of thought in this area,
    and I’ll describe the advantages and disadvantages of each.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 设计系统时你面临的最艰难决定之一是选择哪个市场或多个市场进行交易。在这个领域实际上有两种不同的观点，我将描述每种观点的优缺点。
- en: 'The first method is to design a system for all markets. This would be a “one
    size fits all” approach, where the rules for the system never change as you move
    from market to market. The parameters, though, could be tuned (or not) for each
    market. The advantage to this approach is that if one single strategy works well
    on all markets, then it likely has a high degree of robustness. This may make
    the system less vulnerable to market changes, since the system has likely seen
    many types of different markets across the tested history. The big disadvantage
    to such an approach is that development becomes infinitely more difficult. Designing
    a system for one market is tough enough. If you now demand that the system work
    for many markets, you will struggle to find an acceptable strategy. In such situations,
    developers typically do one of two things: (1) they relax their acceptance criteria,
    or (2) they test on all markets, and then select the best 5 to 10 performers to
    trade.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是为所有市场设计一个系统。这将是一个“统一标准”的方法，系统的规则在不同市场间不会改变。然而，参数可以为每个市场进行调整（或不调整）。这种方法的优点是，如果一种策略在所有市场上表现良好，那么它可能具有较高的稳健性。这可能使系统对市场变化的脆弱性降低，因为该系统可能已经经历了测试历史中许多不同类型的市场。这种方法的一个大缺点是，开发变得无比困难。为一个市场设计系统已经足够困难。如果你现在要求系统适用于多个市场，你将很难找到一个可接受的策略。在这种情况下，开发者通常会采取两种做法中的一种：（1）放宽接受标准，或（2）在所有市场上进行测试，然后选择表现最好的5到10个进行交易。
- en: Realize that both of these compromises, while likely necessary to create a multimarket
    system, are very bad. Relaxing acceptance criteria will lead you to abandon the
    system early, as you realize with real money that the strategy does not meet your
    initial objectives. Testing on multiple markets, and then “cherry picking” the
    best performers to trade, is just another, albeit sneaky, way of optimizing.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 意识到这两种妥协，虽然在创建多市场系统时可能是必要的，但都是非常糟糕的。放宽接受标准会导致你早期放弃系统，因为你会在用真钱操作时意识到该策略并未满足你最初的目标。在多个市场上测试，然后“挑选”最佳表现者进行交易，只是另一种方式，尽管隐秘，却是在优化。
- en: Creating a strategy for one particular market is the other popular approach.
    One advantage to this method is that it can be customized to the characteristics
    of the market. For example, it is known that currencies tend to trend well, so
    maybe a breakout-type system is appropriate. Or, for the equity markets, a mean-reverting
    strategy with a long bias might be best. Another advantage is that, as mentioned
    earlier, it is always easier to create a system for one market than for multiple
    markets. That doesn’t mean it is a better system, though; it just means it is
    easier to create. The disadvantage to creating a single-market system is that
    when you create a system knowing the characteristics of the market, you are assuming
    those characteristics will remain the same forever. While that may be true, what
    if it isn’t? How will your trend-following currency system perform when currencies,
    for whatever reason, become mean-reverting markets?
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为特定市场创建策略是另一种流行的方法。这种方法的一个优点是可以根据市场的特点进行定制。例如，众所周知，货币市场的趋势表现良好，因此可能适合使用突破型系统。或者，对于股票市场，可能采用长期偏向的均值回归策略是最佳选择。另一个优点是，如前所述，为单一市场创建系统总是比为多个市场创建系统更容易。但这并不意味着它是更好的系统，它只是意味着创建起来更简单。创建单一市场系统的缺点是，当你在了解市场特征的情况下创建系统时，你假设这些特征将永远保持不变。虽然这可能是正确的，但如果不是呢？当货币因某种原因变为均值回归市场时，你的趋势跟随货币系统将如何表现？
- en: As you can see, there are valid points for and against each approach to market
    selection. I personally have used both over the years. When I finished first or
    second in the World Cup Championship of Futures Trading three straight years,
    I used a “one size fits all” system, traded on roughly a half-dozen to a dozen
    markets. That worked well. Currently, about half of the systems I trade are of
    this variety. I also like single-market systems, not only because they are easier
    to create, but also because I can mix and match them for diversification. In any
    given year, some of these systems will underperform, some will be around breakeven,
    and some will outperform. Having a multitude of single-market approaches makes
    this more manageable, especially when strategies have to be retired.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，市场选择的每种方法都有有效的优缺点。我个人这些年来都使用过这两种方法。当我在期货交易世界杯中连续三年获得第一或第二名时，我使用了一个“适合所有人”的系统，在大约六到十二个市场上交易。这效果很好。目前，我交易的系统中大约一半是这种类型。我也喜欢单市场系统，不仅因为它们更容易创建，还因为我可以将它们混合搭配以实现多样化。在任何给定的一年中，这些系统中的一些会表现不佳，一些接近盈亏平衡，一些会表现优异。拥有众多单市场方法使这更易于管理，特别是在策略需要退休时。
- en: '![images](images/gbox.jpg) What Type of System Do You Want?'
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 你想要什么类型的系统？'
- en: 'Whenever I begin looking at a new strategy, I almost always see if it can be
    made into a day-trading strategy. I define “day trading” as in and out of a trade,
    or multiple trades, in a single session. There are some nice benefits to such
    a strategy:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我开始考虑一个新策略时，我几乎总是会看看它是否可以变成日内交易策略。我将“日内交易”定义为在一个交易时段内进出交易，或进行多次交易。这种策略有一些不错的好处：
- en: No overnight risk from unexpected events, since you are flat.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有由于意外事件导致的隔夜风险，因为你是平仓状态。
- en: Reduced margin requirements, making it easier to trade with large size (although
    most people should not be doing this, as the higher leverage can lead to a greater
    chance of disaster).
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 降低的保证金要求，使得用大规模交易变得更容易（尽管大多数人不应该这样做，因为高杠杆可能导致更大的灾难风险）。
- en: A “working job”–type feeling. You fire up the computer in the morning, trade
    a while, make your daily nut, turn off the computer, and go home and play with
    your kids the rest of the day—a very satisfying way to live.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种“工作型”的感觉。你早上启动电脑，交易一段时间，赚到每日所需，关掉电脑，回家和孩子们玩一整天——这是一种非常令人满意的生活方式。
- en: Usually, when I start development, I select short time frame bars (one- to five-minute),
    throw in the “set exit on close” statement to exit at the end of the day, and
    jump into development. Nine times out of 10, though, the strategy fails. Regardless
    of the entry idea (trend, countertrend, whatever) and exit scheme (fixed stops,
    moving stops, breakeven stops, profit targets, etc.), nothing ever seems to work
    consistently.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当我开始开发时，我会选择短时间框架的线（1到5分钟），加入“在收盘时设定退出”的声明，在一天结束时退出，然后开始开发。然而，十次中有九次，策略失败。无论是进入思路（趋势、逆势等）还是退出方案（固定止损、移动止损、盈亏平衡止损、利润目标等），似乎没有任何策略能始终如一地有效。
- en: 'Inevitably, if I like the strategy idea, I’ll then open up the time frame to
    60-minute bars, 240-minute bars, daily bars. I want to see if my idea has any
    validity at all. What almost always happens? Performance gets better! Maybe the
    performance still doesn’t meet my goals, but the performance on a daily chart
    is almost always better than on a 1-minute chart. I’ve seen it enough times to
    realize it is more than a coincidence. The question then becomes: why do I see
    this behavior? Here’s what I have come up with:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 不可避免地，如果我喜欢这个策略思路，我会将时间框架扩大到60分钟、240分钟和日线。我想看看我的想法是否有任何有效性。几乎总是会发生什么？表现会更好！也许表现仍然达不到我的目标，但日线图上的表现几乎总是比1分钟图好。我已经看到足够多的案例，意识到这不仅仅是巧合。那么问题就变成了：我为什么会看到这种行为？以下是我的一些想法：
- en: Number of trades and trading costs. Let’s say I have a daily bar strategy that
    trades 1 time per month, or once every 20 bars. That will cost me roughly $25
    in trading costs. If I go down to 1-minute bars, the same strategy might trade
    10 times per day (once every 120 bars), leading to $250 in trading costs. That
    is a huge difference in costs that must be overcome. Add in the fact that 1-minute
    moves are smaller than daily moves, and it gets even harder.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易数量和交易成本。假设我有一个每日线策略，每月交易1次，或每20根线交易1次。这将大约花费我25美元的交易成本。如果我改为1分钟线，采用相同的策略可能每天交易10次（每120根线交易1次），导致250美元的交易成本。这是一个必须克服的巨大成本差异。再加上1分钟的波动小于日线的波动，这使得情况更加困难。
- en: There seems to be more randomness in the data as you go to smaller time frame
    bars. Look at a 1-minute chart of the mini S&P futures (symbol ES) and most days
    it is just narrow range noise. It is harder to find the true price path when the
    random noise level is high. Daily bars, as an alternative, seem to have more trends.
    Of course, where I see random noise in data could just be due to other biases
    I have floating around in my brain.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你使用更小的时间框架柱时，数据似乎有更多的随机性。查看迷你标准普尔期货（符号ES）的1分钟图表，发现大多数日子的波动范围很窄。随机噪声水平很高时，找到真实的价格路径变得更加困难。作为替代，日线似乎有更多的趋势。当然，我在数据中看到的随机噪声可能只是因为我脑中存在的其他偏见。
- en: Entry and exits become a much more important part of the system when you have
    small stops and targets, as most day-trading systems are set up to be. So I must
    have really great entries and exits, ones with very good edges. But the better
    the entry, the harder it is to find during development. Plus, miss the entry by
    a tick, and you may lose a good percentage of your profit. If you are swing trading
    with daily bars, a tick or two at entry probably won’t mean as much, relative
    to overall size of an average trade.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你有小止损和目标时，进出场成为系统中更重要的部分，因为大多数日内交易系统都是这样设置的。所以我必须有非常优秀的进出场，具备很好的优势。但进场越好，在开发过程中找到的难度就越大。此外，如果你错过了一个点，可能会损失很大一部分利润。如果你使用日线进行波段交易，进场时的一两个点相对整个交易的平均规模可能不会那么重要。
- en: With tick charts or 1- to 5-minute charts, think about who you are trading against.
    Many times, it is high-frequency trading firms, which probably have better entries
    than you and have a speed advantage over you. I feel that the impact of the pros
    is less noticeable at higher time frames, although I realize many pros trade daily
    bars, too.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用点图或1到5分钟的图表时，要考虑你是在和谁交易。很多时候，对手是高频交易公司，他们的进场可能比你更好，并且在速度上也有优势。我感觉在更高的时间框架上，专业交易者的影响不那么明显，尽管我知道很多专业交易者也会交易日线。
- en: 'With most strategies, as I mentioned before, I find the fewer trades there
    are, the better. This could be due to trading costs, but it also could be due
    to a very bad reason: maybe you think you have an edge, but with fewer trades,
    the statistical confidence that you have an edge is a lot lower. Put another way,
    if I had 2 strategies that averaged a $50 profit per trade, and one had 100 trades
    over the past 10 years, and another had 1,000, I’d always pick the 1,000-trade
    strategy (so would every rational person). But the reality is that the 100-trade
    strategies are a lot easier to find—maybe because they aren’t really edges at
    all, but just temporarily lucky strategies?'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于大多数策略，正如我之前提到的，我发现交易越少越好。这可能与交易成本有关，但也可能是一个非常糟糕的原因：也许你认为自己有优势，但交易越少，你对自己拥有优势的统计置信度就越低。换句话说，如果我有两个策略，每笔交易的平均利润为50美元，其中一个在过去10年中有100笔交易，另一个有1,000笔，我总是会选择1,000笔交易的策略（每个理性的人都会如此）。但现实是，100笔交易的策略更容易找到——也许因为它们根本不是优势，而只是暂时幸运的策略？
- en: I really wish that all my strategies were day-trading-type strategies. In actuality,
    probably 9 out of 10 are the exact opposite. My best strategy over the past four
    or five years holds a position for weeks to months—definitely not a day-trading
    approach.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的希望我所有的策略都是日内交易类型的策略。实际上，可能有9成的策略正好相反。在过去四到五年中，我最好的策略持仓时间为数周到数月——绝对不是日内交易的方法。
- en: '![images](images/gbox.jpg) What Time Frame/Bar Size Will You Trade?'
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 你将交易什么时间框架/柱大小？'
- en: Almost as important as the market you will trade is the time frame(s) you select.
    For most people who look at bar charts, this is simply the length of time for
    each bar. Of course, strategies will perform radically differently on different
    time frames, so it is best to select a time frame that meets your objectives.
    Do you want to be in and out quickly? Maybe a 1-minute or a tick-based chart is
    best. Do you prefer long-term swing trading? If so, maybe a daily or even weekly
    time frame is what you need. The point is to select a time frame that matches
    your interest.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 选择的时间框架几乎和你将要交易的市场一样重要。对于大多数查看柱状图的人来说，这只是每个柱的时间长度。当然，策略在不同时间框架上表现截然不同，所以最好选择一个符合你目标的时间框架。你想快速进出吗？也许1分钟或基于点的图表最合适。你更喜欢长期波段交易吗？如果是这样，可能日线甚至周线是你所需要的。关键是选择一个与你兴趣匹配的时间框架。
- en: One important factor to realize with time frame is that typically shorter time
    frames lead to more trades. If you have small transaction costs, with many quick
    trades, this is terrific—just witness the success of all the high-frequency trading
    firms. Even a small edge can yield big profits when repeated enough times. But,
    for most of us retail traders, higher transactions costs are just part of the
    game, making quick strategies that much tougher to succeed with.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 一个需要意识到的重要因素是，通常较短的时间框架会导致更多的交易。如果你的交易成本较小，进行许多快速交易，那就太好了——只需看看所有高频交易公司的成功。即使是微小的优势，在重复足够多次后也能带来可观的利润。然而，对于大多数散户交易者来说，更高的交易成本只是游戏的一部分，使得快速策略更难以成功。
- en: When settling on a time size for a bar, an approach that many developers use
    is what I call *time frame contraction and dilation.* The concept is to test a
    strategy with a 10-minute time frame. If it is successful, the thinking goes,
    then testing on a 9-minute bar and an 11-minute bar should also be profitable.
    One minute either way should not destroy the strategy, and good performance in
    these contraction and dilated periods suggests robustness.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在确定柱子的时间大小时，许多开发者使用的方法是我所称的*时间框架收缩和扩张*。这个概念是用10分钟的时间框架测试策略。如果成功，接下来测试9分钟和11分钟的柱子也应该是盈利的。无论往哪一边变化一分钟都不应该摧毁策略，而在这些收缩和扩张期的良好表现则表明其稳健性。
- en: I personally have had little success with this approach, and I believe there
    are two reasons for it. First, by changing the time length of a bar, over the
    course of a day there are now a different number of bars to evaluate. In the preceding
    example, changing a 10-minute bar by 1 minute leads to 9 percent more bars or
    fewer bars. This can heavily influence the performance of indicators you may employ.
    The other issue I have with this approach is that many traders make their decisions
    on the close of a standard period bar. Think of all the people trading off charts,
    most of them using standard time periods of 5, 10, 15, or more minutes. If your
    system is trading at a different time, your results can vary widely from the results
    with a standard (i.e., 10-minute) bar.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人在这种方法上很少成功，我认为有两个原因。首先，通过改变柱子的时间长度，在一天的过程中，现在要评估的柱子数量发生了变化。在之前的例子中，将10分钟的柱子改变1分钟会导致9%的柱子增多或减少。这可能严重影响你可能使用的指标表现。另一个我对这种方法的疑虑是，许多交易者在标准周期柱的收盘时做出决策。想想所有基于图表交易的人，他们中的大多数使用标准的时间周期，如5、10、15分钟或更多。如果你的系统在不同的时间交易，你的结果可能会与标准（即10分钟）柱的结果相差甚远。
- en: Putting my personal objections aside, if you have success with 9-, 10-, and
    11-minute charts, then I’d agree that your system has robustness in it. It would
    give me extra confidence. At the same time, though, if 10-minute performance was
    good, but 9- and 11-minute performances were awful, I would not necessarily throw
    out the baby with the bathwater.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 抛开我个人的反对意见，如果你在9分钟、10分钟和11分钟的图表上取得成功，那么我会同意你的系统是稳健的。这会给我额外的信心。不过，另一方面，如果10分钟的表现很好，而9分钟和11分钟的表现糟糕，我也不会因此而全盘否定。
- en: If you decide to test with tick charts, one important consideration with bar
    size and time frame is the amount of historical data available. I discuss the
    question “how much data to use” in a later section, but for now realize that many
    data vendors provide only six months of data. This can also be an issue with short
    time frame bars (1- to 5-minute), where orders are triggered intrabar. Tick data
    are also important for specialty bars, such as point-and-figure charts, Kase bars,
    Renko bars, and so on. The important point is that if you rely on tick charts
    or tick data, think carefully about the implications of limited historical data
    before you test.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定使用点图进行测试，一个关于柱子大小和时间框架的重要考虑是可用的历史数据量。我在后面的章节中会讨论“使用多少数据”的问题，但现在要意识到，许多数据供应商仅提供六个月的数据。这在短时间框架的柱子（1到5分钟）中也可能是一个问题，因为订单在柱内被触发。点数据对特殊柱子（如点和图表、Kase柱、Renko柱等）也很重要。关键是，如果你依赖点图或点数据，在测试之前，要仔细考虑有限历史数据的影响。
- en: One final important consideration involves the daily settlement price and the
    daily last price traded, which is important if you are using daily bars. “What
    is the problem,” you ask, “aren’t closing/settlement prices and the last price
    traded the same thing?” In some markets, yes, and in some markets no. Plus, the
    meaning of these terms has changed with the advent of 24-hour trading. The gold
    market is a good example. Back in the days when gold was only pit traded (which
    may easily be part of your historical testing period), the market closed at 1:30
    P.M. Eastern time, and the last trade of the day was usually very close, but not
    necessarily identical to, the exchange published settlement price. Now, however,
    the gold market trades electronically, and it trades until 5:00 P.M. Eastern time.
    Unfortunately, the exchange settlement price is derived from the trading that
    occurs from 1:28 to 1:30 P.M. You can imagine how the price at 1:29 P.M., the
    settlement time, can vary widely from the last price traded at 5:00 P.M. The price
    action on Wednesday, September 18, 2013, is a great example, as shown in [Figure
    10.1](#figure10-1). A Federal Reserve announcement at 2:00 P.M., after the settlement
    price had been established, roiled the markets. The settlement price and the last
    traded price were dramatically different!
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个重要考虑因素涉及每日结算价格和每日最后交易价格，这在你使用日线数据时非常重要。“有什么问题，”你会问，“收盘/结算价格和最后交易价格不是同一回事吗？”在某些市场是的，在某些市场则不是。此外，随着24小时交易的出现，这些术语的含义也发生了变化。黄金市场就是一个很好的例子。早在黄金仅在交易大厅内交易的时期（这可能很容易是你的历史测试期间的一部分），市场在东部时间下午1:30关闭，通常当天的最后交易价格非常接近，但不一定与交易所公布的结算价格相同。然而，现在，黄金市场进行电子交易，交易持续到东部时间下午5:00。不幸的是，交易所的结算价格是从下午1:28到1:30的交易中得出的。你可以想象，下午1:29的结算时间价格与下午5:00的最后交易价格可能会有很大差异。2013年9月18日星期三的价格波动就是一个很好的例子，如[图10.1](#figure10-1)所示。美联储在下午2:00的公告，在结算价格确定后，搅动了市场。结算价格和最后交易价格之间的差异非常显著！
- en: '![images](images/c10f001.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c10f001.jpg)'
- en: '[**FIGURE 10.1**](#figureanchor10-1) Don’t Assume that Settlement Price = Last
    Price Traded'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图10.1**](#figureanchor10-1) 不要假设结算价格 = 最后交易价格'
- en: Data vendors differ on how they treat settlement prices and last traded prices.
    As of the time of this writing, TradeStation, for example, uses the exchange settlement
    as the closing price for daily and weekly bars. For X minute bars, the close of
    the last bar of the day is also the last traded price. Kinetick, a provider for
    NinjaTrader, follows the same approach. Another popular data vendor, CQG, however,
    uses the last price traded as its daily bar close.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 数据供应商在如何处理结算价格和最后交易价格上存在差异。截至本文写作时，TradeStation例如，将交易所结算价格用作日线和周线的收盘价格。对于X分钟的K线，日线最后一根K线的收盘价格也是最后交易价格。NinjaTrader的供应商Kinetick采用相同的方法。然而，另一个受欢迎的数据供应商CQG则将最后交易价格作为其日线的收盘价格。
- en: How can this be a problem in your testing? Well, say, for example, you are testing
    with daily bars, and your strategy uses the instruction “sell the bar at close.”
    Your strategy dutifully executes the command at 4:59 P.M., and you are filled.
    But later, when the exchange settlement price is applied to the data, the strategy
    will think you were filled at the settlement price (which is now the daily bar
    closing price), but you were actually filled near the last traded price. This
    is just one of the ways back-test results can fool you.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这在你的测试中可能会造成什么问题？例如，假设你正在使用日线数据进行测试，而你的策略使用指令“在收盘时卖出该日线”。你的策略在下午4:59准时执行命令，你被成交了。但是，当后续应用交易所结算价格到数据时，策略会认为你是以结算价格（现在是日线的收盘价格）成交的，但实际上你是在接近最后交易价格时被成交的。这只是回测结果可能欺骗你的方式之一。
- en: '![images](images/gbox.jpg) How Will You Program the Strategy?'
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 你将如何编程策略？'
- en: Once you have your basic entry and exit rules thought out; you have selected
    a market, time frame, and bar size to test; and you have obtained the desired
    amount of historical data, it is time to put together your strategy for testing.
    The question for most people at this point is “can I program the strategy myself?”
    The answer for a true do-it-yourselfer is undoubtedly “yes.” But if you have never
    programmed before in the language of your strategy-testing software, you might
    find this to be a daunting task. Here are a few tips that might help you out.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你想出了基本的进出场规则；选择了测试的市场、时间框架和柱大小；并获得了所需的历史数据，就该准备你的测试策略了。此时大多数人会问：“我能自己编程这个策略吗？”对于真正的自助型学习者来说，答案无疑是“可以”。但如果你从未在策略测试软件的语言中编程，可能会觉得这是一个令人畏惧的任务。以下是一些可能对你有帮助的建议。
- en: If you are completely clueless about computer programming, and you have no desire
    to learn how to do it, your programming tasks are best left in the hands of professionals.
    You can hire an expert at an hourly rate or even a team of experts so that no
    one developer knows all your trading secrets. The drawback here is that every
    time you need a code change, even a small one, you will have to wait for the developer
    to do it, and you’ll likely be charged extra for the privilege. The extra time
    and cost associated with changes, updates, enhancements, and the like can add
    up quickly. If you still feel that a programmer is the right choice, you can find
    them at various trading forums, or by contacting your software vendor.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对计算机编程完全无知，且没有学习的愿望，编程任务最好交给专业人士。你可以按小时雇佣专家，甚至可以雇佣一支专家团队，这样没有一个开发者会知道你所有的交易秘密。缺点是每次你需要代码更改，即使是小的更改，也需要等待开发者来完成，而且你可能还要为此支付额外费用。与更改、更新、增强等相关的额外时间和费用会迅速增加。如果你仍然觉得程序员是合适的选择，可以在各种交易论坛上找到他们，或通过联系你的软件供应商。
- en: An alternative is to partner with a programming expert, ideally someone who
    will be interested in trading the finished project. You won’t have to worry about
    your partner’s stealing your idea, and the collaboration can lead to far more
    profitable systems. I have done this before, usually as the programming expert,
    and it is really satisfying when it works. The problem is in finding people you
    can trust enough to help you.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是与编程专家合作，理想情况下是一个对交易完成项目感兴趣的人。你无需担心合作伙伴会窃取你的想法，合作可能会导致更有利可图的系统。我以前这样做过，通常担任编程专家，当一切顺利时，这真的很令人满意。问题在于找到值得信任的人来帮助你。
- en: My preferred and recommended approach is that you should program everything
    by yourself. All the trading software packages out there have classes, books,
    online tutorials, and sample strategies to help you develop your skills. By going
    this route, you will not have to worry about people stealing your “secret sauce.”
    Plus, as you learn the programming aspect, you will get more familiar with the
    idiosyncrasies of the back-test engine. This is really important when results
    look too good to be true. Once you know the software and programming well enough,
    you’ll never have to wonder if you have only fooled the back-test engine but not
    the real world.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我推荐的最佳方法是你应该自己编程。所有的交易软件包都有类、书籍、在线教程和示例策略来帮助你提升技能。通过这种方式，你无需担心有人窃取你的“秘密武器”。此外，随着你学习编程方面的内容，你会对回测引擎的特性更加熟悉。当结果看起来好得令人难以置信时，这点尤其重要。一旦你足够了解软件和编程，你就不必担心自己只是欺骗了回测引擎，而不是现实世界。
- en: CHAPTER 11
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章
- en: Let’s Talk about Data
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们谈谈数据
- en: 'With the entry, exit, market, and time frame/bar length decided, now comes
    one of the most important, most underappreciated, yet least understood aspects
    of testing: market data. People take data for granted, and that can be a big mistake.
    I’ve seen huge differences in strategy performance just due to different data
    sources. I’ll make the grand assumption that your data are clean, without bad
    data points, missing data, and so on. Of course, that is not the case at all,
    practically regardless of vendor. But most people understand that data may have
    errors; what most do not understand is the impact behind the answers to these
    data-related questions:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定进场、出场、市场和时间框架/条形长度后，接下来就是测试中最重要、最被低估但又最不被理解的方面之一：市场数据。人们往往对数据掉以轻心，这可能是一个大错误。我见过因为不同数据来源而导致策略表现的巨大差异。我会大胆假设你的数据是干净的，没有错误数据点、缺失数据等等。当然，这并不是实际情况，几乎无论供应商如何。但大多数人都明白数据可能会出错；而大多数人不理解的是与这些数据相关问题的答案背后的影响：
- en: How much data should you use?
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该使用多少数据？
- en: Should you use pit data or electronic data?
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该使用交易所数据还是电子数据？
- en: Should you use continuous contract data?
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该使用连续合约数据吗？
- en: Did the advent of electronic trading impact market data?
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子交易的出现对市场数据产生了影响吗？
- en: How do you test with foreign exchange (forex) data?
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你如何使用外汇（forex）数据进行测试？
- en: Now, before you start testing, is the time to look at all these issues, and
    make some decisions. To go back and retest with different a data structure typically
    means you will be using tainted data, and that is not good.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在你开始测试之前，是审视所有这些问题并做出一些决策的时刻。返回并使用不同的数据结构进行重新测试通常意味着你将使用受污染的数据，这并不好。
- en: '![images](images/gbox.jpg) How Much?'
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 多少？'
- en: If you are like me, you’ve probably done the “eyeball” test more than a few
    times. You look at a chart and, knowing your entry and exit criteria, perform
    a quick test of the past few days or weeks of data. After a few trades, if you
    see a lot of profit, you get excited and venture into more in-depth testing. If
    you have losses, you either abandon the strategy or tweak it a bit and try again.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你像我一样，可能已经进行过多次“目测”测试。你查看一个图表，知道你的进场和出场标准，快速测试过去几天或几周的数据。在几次交易后，如果看到大量利润，你会感到兴奋，并冒险进行更深入的测试。如果出现亏损，你要么放弃策略，要么稍微调整一下再试一次。
- en: Hopefully, you realize the futility of such a simple test. Not enough trades,
    not enough market conditions, just not enough of anything to make an informed
    decision—period. To attain long-term success, you must look at more data than
    this.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你意识到这种简单测试的徒劳。不够多的交易，不够多的市场条件，根本没有足够的任何东西来做出明智的决定——就是这样。要实现长期成功，你必须查看比这更多的数据。
- en: So what is an acceptable amount of data? When I am asked this question, I almost
    always reply, “As much as possible.” More data provides more market conditions—more
    bull markets, more bear markets, more flat markets. It also provides more quiet
    periods and more volatile periods. As you make more trades, and your system remains
    profitable, it becomes less and less likely that the results were due to just
    chance. Think of a coin flip. If you flip it once, chances are 50/50 that it will
    be heads. If you flip a coin 10 times, the chances of heads’ coming up at least
    once is quite good. Flip the coin 100 times, and you are practically guaranteed
    that heads will appear at least once. More flips leads to more certainty, just
    as more trades leads to more confidence.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，什么是可以接受的数据量呢？当我被问到这个问题时，我几乎总是回答：“尽可能多。”更多的数据提供了更多的市场条件——更多的牛市，更多的熊市，更多的平稳市场。它还提供了更多的平静期和更多的波动期。随着你进行更多的交易，且系统保持盈利，结果是仅仅由于偶然的可能性就会越来越小。想想抛硬币。如果你抛一次，出现正面的概率是50/50。如果你抛10次，至少出现一次正面的概率就很高。抛100次，你几乎可以保证至少会出现一次正面。更多的抛掷意味着更多的确定性，就像更多的交易带来更多的信心一样。
- en: For daily bar systems, which tend to be swing systems (trades lasting days to
    weeks), I find that 10 years of data is a good compromise. It allows your strategy
    to see many different market conditions and works well with walk-forward testing
    (which requires some initialization time).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 对于日线系统，这通常是波段系统（交易持续数天到数周），我发现10年的数据是一个不错的折中。它允许你的策略看到许多不同的市场条件，并且与前向测试（需要一些初始化时间）配合得很好。
- en: For intraday or short-term systems, I also like using 10 years of data. Practical
    considerations, though, such as the introduction of electronic data, may make
    this a difficult task. So, in many cases I will use only 5 years of data, realizing
    that my results may not be as robust as a 10-year tested system.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于日内或短期系统，我也喜欢使用10年的数据。然而，实际考虑因素如电子数据的引入，可能使这一任务变得困难。因此，在许多情况下，我将仅使用5年的数据，意识到我的结果可能不如10年测试的系统那么稳健。
- en: 'For some people, 5 to 10 years of data is too long a time period to test, or
    the data are not available. In such cases, I recommend the following rules of
    thumb: for each rule and parameter you have in your strategy, have at least 30
    to 100 trades. As an example, consider a strategy with two entry conditions, and
    two exit conditions. For such a system, I’d like to see 120 to 400 trades. Anything
    less than this might be acceptable but also runs the risk of the strategy’s being
    “matched” or fitted to the data.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些人来说，5到10年的数据测试时间太长，或者数据不可用。在这种情况下，我建议以下经验法则：对于策略中的每个规则和参数，至少有30到100笔交易。作为例子，考虑一个有两个入场条件和两个出场条件的策略。对于这样的系统，我希望看到120到400笔交易。少于这个数量可能是可以接受的，但也存在策略与数据“匹配”或拟合的风险。
- en: The drawback to using as much data as possible is that it makes development
    much tougher. Let’s face it—at best, most trading systems out there are probably
    breakeven before commissions and slippage. This means the longer you test it,
    the more likely it is that gross profits will revert back to zero. I’m sure you
    witnessed this before, when a strategy has fantastic performance in a one-, three-,
    or six-month period, only to give it all back in the next period. So, in the end,
    ask yourself if you want a long-running positive system, or do you want a great
    performer over a short period of time? The former is much tougher to find, and
    the latter is much more likely to lead to real-time losses.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用尽可能多的数据的缺点是，这使得开发变得更加困难。说实话，最好的情况下，大多数交易系统在扣除佣金和滑点之前可能只是收支平衡。这意味着你测试的时间越长，总利润回归零的可能性就越大。我相信你以前见过这种情况，当一个策略在一个、三个月或六个月的期间表现出色，结果在下一个期间又全数回吐。所以，最后，问问自己你想要一个长时间正收益的系统，还是想要一个短期内表现优秀的策略？前者更难找到，而后者更可能导致实时损失。
- en: '![images](images/gbox.jpg) Pit or Electronic Data?'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 交易所数据还是电子数据？'
- en: 'Back in the old days of pit trading, knowing what data to use was easy—just
    use the pit data because that was all there was! Today, with electronic data taking
    over, there are multiple options:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在交易所交易的早期，知道使用什么数据很简单——只需使用交易所数据，因为那时只有这些数据！如今，电子数据占主导地位，有多种选择：
- en: Pit data only
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅限交易所数据
- en: Electronic data only
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅限电子数据
- en: Pit and electronic data together
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易所和电子数据结合
- en: Data during traditional pit times only
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅限传统交易所时段的数据
- en: Data during all hours
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全天候数据
- en: Data during day session/evening session
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 白天/晚上交易时段的数据
- en: The choice for data going forward might be easy—electronic data are the best
    because that is where the volume currently is, but what do you do when you are
    historically testing a strategy?
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 向前选择数据可能很简单——电子数据是最好的，因为目前交易量集中在这里，但当你历史测试策略时该怎么做呢？
- en: I’ll give you a simple example to highlight the dilemma. Let’s say you are trading
    gold, and you want to use 20 years (excellent choice!) of data, with 60-minute
    bars. Twenty years ago, the pit was the only data source, so you have to use that.
    In a daily pit session, there were probably six to eight bars roughly (since pit
    trading hours over the years changed, the number of 60-minute bars per day will
    change, too). For your strategy, let’s say you use a 14-period moving average.
    This will typically represent two trading days.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我给你一个简单的例子来突显这一困境。假设你在交易黄金，想使用20年的数据（优秀选择！），以60分钟的K线为单位。20年前，交易所是唯一的数据来源，因此你必须使用这些数据。在日交易所时段，可能大约有六到八根K线（由于交易时段多年来的变化，每天的60分钟K线数量也会变化）。对于你的策略，假设你使用14期移动平均线。这通常代表两个交易日。
- en: Now, fast-forward to today’s electronic markets. Today’s markets trade for roughly
    23 hours per day. If you still use a 14-period moving average, that will only
    equate to a half trading day, instead of the previous two trading days. Do you
    think that can radically influence your historical tests? It sure can!
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，快进到今天的电子市场。今天的市场每天大约交易23小时。如果你仍然使用14期移动平均线，这仅相当于半个交易日，而不是之前的两个交易日。你认为这会对你的历史测试产生根本影响吗？肯定会的！
- en: How do you handle this? Typically, I rely heavily on daily data, especially
    the daily settlement prices. Pit and electronic settlements are identical. I do
    not like using daily highs and lows, since the average range between pit high
    and low will usually be less than electronic day high and low. If this sounds
    confusing, just think of an overnight price shock that lasts for an hour before
    reverting to the previous price level. In the old pit days, such a shock would
    never have shown up in the data, since it happened overnight. For electronic data,
    though, the daily high would include this price shock. Therefore, your strategy
    may perform quite a bit differently in the old days versus today’s market.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你是如何处理这个问题的？通常，我非常依赖每日数据，特别是每日结算价格。场内和电子结算是相同的。我不喜欢使用每日最高和最低价格，因为场内高低之间的平均范围通常会小于电子日高和低。如果这听起来令人困惑，只需想象一个持续一个小时的隔夜价格冲击，然后恢复到之前的价格水平。在旧的场内交易时代，这样的冲击在数据中根本不会出现，因为它发生在隔夜。然而，对于电子数据，日高会包括这个价格冲击。因此，你的策略在旧时代与今天的市场表现可能会有很大不同。
- en: One trick that helps make all the data the same is to select a standard daily
    session time, and apply it to your complete historical database. For currencies,
    for example, the pit used to be open from 8:20 A.M. to 3:00 P.M. Eastern time.
    To keep this time intact in the electronic era, I simply create a special “currency
    pit” session from 8:20 A.M. to 3:00 P.M. for all the historical data. Then all
    my data are consistent.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 一个帮助使所有数据保持一致的技巧是选择一个标准的每日交易时段，并将其应用于你的完整历史数据库。例如，对于货币，场内交易的时间是东部时间早上8:20到下午3:00。为了在电子时代保持这一时间不变，我简单地为所有历史数据创建一个特殊的“货币场”交易时段，从早上8:20到下午3:00。这样我的所有数据就保持一致了。
- en: With all the available options with data, I highly recommend you take time and
    think about the data you are using. Making sure it is consistent throughout your
    test history is definitely the best way to test. It may not be that easy to create
    those data, though.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有可用的数据选项中，我强烈建议你花时间考虑你使用的数据。确保它在你的测试历史中保持一致无疑是测试的最佳方式。然而，创建这些数据可能并不容易。
- en: '![images](images/gbox.jpg) Continuous Contracts'
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 连续合约'
- en: One concept that stymies most junior system developers is the use of continuous
    contracts in futures market testing. Continuous contracts are needed because each
    futures contract has a limited life, and continuous contracts create a never-ending
    data stream. The concept is simple—just artificially stitch together expiring
    futures contracts to create one continuous data stream—but the implementation
    path is peppered with pitfalls, just waiting to catch the unwary. I’ll discuss
    these pitfalls for the three major techniques of futures data selection.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一个让大多数初级系统开发人员困惑的概念是期货市场测试中的连续合约。连续合约是必要的，因为每个期货合约都有有限的生命周期，而连续合约则创造了一个源源不断的数据流。这个概念很简单——只是将即将到期的期货合约人为地拼接在一起，形成一个连续的数据流——但实施路径充满了陷阱，等待着那些不谨慎的人。我将讨论期货数据选择的三种主要技术中的这些陷阱。
- en: The purest way to test with futures data is just to use the raw contract data.
    Then you don’t have to worry about continuous contracts at all. The problem is
    that most trading software is not set up to easily accomplish this. Let’s say,
    for example, that you want to test a strategy on the euro currency. If you were
    testing in 2013, from January 1 to approximately March 15, you would use the March
    contract, 6EH13\. From March 15 to June 15, you’d use the June contract, 6EM13\.
    In this way, you’d progress through all the years of your data. But you’d have
    some problems in testing this way. First, you’d have to put in logic to (1) determine
    the proper end date for each contract (i.e., before first notice day or last trading
    day, whichever comes first) and (2) “roll over” the current position from the
    current contract to the new contract. Certainly, this could be accomplished, but
    it would require some detailed programming. The bigger issue is if you wanted
    to optimize the strategy over all these contracts. Most trading software requires
    an optimization on one chart of data. With multiple contracts of data, you cannot
    optimize without doing it manually, a tedious and painstaking process.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 测试期货数据最纯粹的方法就是使用原始合约数据。这样你就不需要担心连续合约的问题。问题在于大多数交易软件并没有设置成可以轻松实现这一点。比如说，如果你想测试欧元货币的策略。在2013年进行测试时，从1月1日到大约3月15日，你会使用3月合约6EH13。从3月15日到6月15日，你会使用6月合约6EM13。这样，你可以逐年推进你的数据。但这种测试方法会遇到一些问题。首先，你需要设定逻辑来（1）确定每个合约的适当结束日期（即，在首次通知日或最后交易日之前，以先到者为准）和（2）“滚动”当前头寸，从当前合约转到新合约。当然，这可以实现，但需要一些详细的编程。更大的问题是，如果你想优化所有这些合约上的策略。大多数交易软件要求在一张数据图表上进行优化。对于多份合约的数据，无法不手动进行优化，这是一个繁琐且耗时的过程。
- en: To get around these limitations of testing with the individual contracts, many
    people splice the contract data together in a continuous contract. There are two
    primary (and numerous less popular) ways to create a continuous contract, and,
    of course, both have some serious pitfalls. The first type of continuous contract
    is a nonadjusted continuous contract. Using the preceding example, on March 15
    the contract data would switch from March to June. The nice thing about this method
    is that the original data are preserved—no adjustments have been made to the data.
    The pitfall with these data is that, at rollover, rarely if ever will the two
    contracts be the exact same price. Frequently, the front month will have a significant
    discount or premium to the next month. An example of this is shown in [Figure
    11.1](#figure11-1). Using these data as is will create false signals and false
    profits and losses. Assume you are long November soybeans, and then you roll over
    to the May soybeans. With a spread of 38 points, with an unadjusted continuous
    contract, a trading strategy will think that gap is real and that you profited
    from it. The reality, though, is that you would not actually benefit from the
    gap. The gap exists only because the contract month has changed.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了克服单个合约测试的这些局限性，许多人将合约数据拼接在一起形成连续合约。创建连续合约主要有两种方式（还有许多不太流行的方法），当然，这两种方法都有一些严重的缺陷。第一种连续合约是未经调整的连续合约。以之前的例子为例，在3月15日，合约数据将从3月切换到6月。这种方法的好处在于原始数据得以保留——没有对数据进行调整。这些数据的缺陷在于，在滚动时，两份合约的价格几乎从未完全相同。通常，前一个月的合约会有显著的折扣或溢价。例如，[图11.1](#figure11-1)展示了这一点。直接使用这些数据将产生错误的信号和虚假的利润与损失。假设你持有11月大豆的多头头寸，然后你转为5月大豆。若存在38个点的价差，使用未经调整的连续合约，交易策略会认为这个差距是真实的，并认为你从中获利。然而，现实是你并不会真正从这个差距中受益。这个差距的存在仅仅是因为合约月份发生了变化。
- en: '![images](images/c11f001.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c11f001.jpg)'
- en: '[**FIGURE 11.1**](#figureanchor11-1) Contract Prices Will Be Different for
    Different Months'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图11.1**](#figureanchor11-1) 不同月份的合约价格将会不同'
- en: 'Many people get around this artificial gap by using what is called a *back-adjusted
    contract.* With this type of contract, the gaps are subtracted out, and all previous
    data are adjusted appropriately. An example would be as follows: Suppose on March
    15, June euro closes at 1.3512, and March euro closes at 1.3516, a difference
    of .0004\. To remove this gap of .0004, all data from March and before must have
    .0004 added to it. This will remove the gap from all data, and provide a nice
    continuous data stream. It seems like the ideal solution.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人通过使用所谓的*回调调整合约*来解决这个人为差距。通过这种类型的合约，差距被扣除，所有之前的数据都得到了适当的调整。一个例子如下：假设在3月15日，6月欧元的收盘价为1.3512，而3月欧元的收盘价为1.3516，两者相差0.0004。要消除这个0.0004的差距，必须将所有3月及之前的数据加上0.0004。这将消除所有数据中的差距，并提供一个良好的连续数据流。看起来这是理想的解决方案。
- en: Of course, no method is perfect, and this technique has a couple of problems,
    one of which practically no one talks about, at least that I’ve ever seen. The
    first problem is that constantly accounting for gaps at every rollover leads to
    a situation where the historical data actually become negative. An example of
    this is shown in [Figure 11.2](#figure11-2). Clearly, crude oil never had a negative
    price, but that is what the continuous contract shows and what your strategy will
    test with. Although the continuous data may seem strange (don’t show your friends
    your “Holy Grail” trading system with these market data, since they’ll think you
    are crazy for testing with negative prices!), the results are accurate, provided
    you do not fall victim to the second pitfall.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，没有任何方法是完美的，这种技术有几个问题，其中一个几乎没有人谈论，至少我从未见过。第一个问题是，在每次换手时不断考虑差距会导致历史数据实际上变为负值。这一例子在[图11.2](#figure11-2)中有所体现。显然，原油的价格从未出现负值，但连续合约显示的就是这一点，而你的策略将会以此进行测试。尽管连续数据可能看起来奇怪（不要向你的朋友展示你用这些市场数据得到的“圣杯”交易系统，因为他们会认为你在用负价格进行测试而发疯！），只要你不陷入第二个陷阱，结果就是准确的。
- en: '![images](images/c11f002.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c11f002.jpg)'
- en: '[**FIGURE 11.2**](#figureanchor11-2) Back-Adjusted Continuous Contracts Can
    Have Negative Prices'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图11.2**](#figureanchor11-2) 回调调整的连续合约可能会有负价格'
- en: 'The second pitfall with continuous back-adjusted contracts is also the issue
    most likely to lead to invalid trading results. In a nutshell, you cannot have
    any indicators that divide or multiply prices when you use back-adjusted contracts.
    An example best shows the point:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 连续回调调整合约的第二个陷阱也是最可能导致无效交易结果的问题。简单来说，当使用回调调整合约时，不能有任何指示器对价格进行除法或乘法运算。一个例子最能说明这一点：
- en: Suppose you have a strategy that uses the percentage change in day-to-day close,
    close[i]/close [i -1]. On March 10, you are using the March contract, and the
    close is 1.3500\. The previous day close is 1.3420\. The percentage change calculation
    is then 1.3500/1.3420 = 1.00596.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个策略，使用日常收盘价的百分比变化，close[i]/close[i-1]。在3月10日，你使用的是3月合约，收盘价是1.3500。前一天的收盘价是1.3420。因此，百分比变化的计算为1.3500/1.3420
    = 1.00596。
- en: Fast-forward to March 20, when the June contract is the front contract. When
    you performed the continuous contract back adjusting, .0030 was added to it. This
    is an extreme amount for rollover adjustment, just to prove my point. Thus, now
    the March 10 close is 1.353, the previous day close is 1.345, and the ratio is
    now 1.353/1.345 = 1.00595\. The ratio for the same date has changed! Plus, it
    will change again at every rollover in the future. This means that when you back
    test a strategy with ratios, your back-test signals will be different than real-time
    signals. The difference may not be much, but it will certainly be there. The question
    will then be “can you rely on performance histories that you know will change
    in the future?”
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 快进到3月20日，此时6月合约为前端合约。当你进行了连续合约的回调调整时，加了0.0030。这是一个极大的换手调整数值，只是为了证明我的观点。因此，现在3月10日的收盘价是1.353，前一天的收盘价是1.345，比例现在是1.353/1.345
    = 1.00595。相同日期的比例已经发生变化！此外，它将在未来每次换手时再次变化。这意味着，当你用比例进行策略回测时，回测信号将与实时信号不同。差异可能不大，但一定会存在。接下来的问题是：“你能否依赖于你知道将来会变化的表现历史？”
- en: If this seems like a subtle distinction, just imagine what happens when the
    price data approach zero, the other known pitfall on back-adjusted data. Dividing
    by zero or a number close to zero will lead to a huge result! Clearly, that would
    never happen in real time—unless, of course, the actual price of the instrument
    in question went to zero. Just do not count on that ever happening!
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这看起来像是一个微妙的区别，只需想象一下当价格数据接近零时会发生什么，这也是后调整数据的另一个已知陷阱。除以零或接近零的数字会导致巨大的结果！显然，这在实时情况下永远不会发生——除非，当然，相关工具的实际价格降至零。不要指望那种情况会发生！
- en: The only way around this pitfall is to take special care that division or multiplication
    is not used with price data in back-adjusted continuous contracts. Both ratios
    of prices and percentage changes in prices are no-nos. If you choose not to follow
    this rule, do not be surprised when (1) your historical performance results change
    over time and (2) that your historical results and future results do not match.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 避免这个陷阱的唯一方法是特别注意，在后调整的连续合约中不要使用价格数据进行除法或乘法。价格比率和价格百分比变化都是不可行的。如果你选择不遵循这个规则，不要感到惊讶，当（1）你的历史表现结果随时间变化，以及（2）你的历史结果与未来结果不匹配时。
- en: '![images](images/gbox.jpg) The Impact of Electronic Markets'
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 电子市场的影响'
- en: Many trading system developers test strategies only on electronic data. They
    ignore any pit data, so their strategies typically only test for the past few
    years. Their reasoning is that the markets fundamentally changed when electronic
    markets came on the scene, so strategies that work now don’t necessarily have
    to work in the long-forgotten pit era. To that argument, I both agree and disagree.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 许多交易系统开发者只在电子数据上测试策略。他们忽略任何交易大厅数据，因此他们的策略通常只测试过去几年的数据。他们的理由是，电子市场出现后，市场从根本上发生了变化，因此现在有效的策略不一定在早已被遗忘的交易大厅时代也能有效。对此论点，我既同意又不同意。
- en: Electronic markets have undoubtedly changed the futures markets. Without a pit
    full of traders, the whole dynamic of pricing has been altered. In fact, many
    former pit traders, who made a very good living while on the floor, struggled
    mightily when they moved to electronic trading. Most were trying to trade as they
    did on the floor, and the market had changed enough that those techniques were
    no longer profitable. Add in today’s high-frequency trading firms, and the short-term
    market is certainly different than the old pit trading days.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 电子市场无疑改变了期货市场。没有一堆交易者在交易大厅，定价的整个动态发生了变化。事实上，许多曾经在交易大厅获得良好收入的交易者，在转向电子交易时遭遇了巨大的困难。他们大多数人试图像在交易大厅那样进行交易，而市场的变化使得这些技巧不再盈利。加上今天的高频交易公司，短期市场显然与旧的交易大厅时代不同。
- en: On a longer-term scale, though, almost all commodities are dictated by the law
    of supply and demand. The venue for trading—electronic, pit, or a combination
    of the two—doesn’t have a long-term impact. It doesn’t make sense to think that
    high-frequency traders, who are in a trade for only a few seconds, have an impact
    on the price two or three months from now.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，从长期来看，几乎所有商品都受到供需法则的支配。交易场所——电子交易、交易大厅，或两者的结合——对长期影响不大。认为高频交易者在交易中只花费几秒钟，但会对两三个月后的价格产生影响是没有意义的。
- en: With those contrasting views in mind, I still use pit-traded data, and the history
    they provide, for my longer-term swing-trading development. That way, my strategy
    is able to experience more market conditions. If a strategy I develop for soybeans
    works well in the 1990s, 2000s, and 2010s, I am more confident and impressed with
    the system. Some people would even go back to the 1970s and 1980s! For shorter-term
    systems, especially intraday ones, using only the electronic data may make sense.
    If it also works on pit data, that is great, but I probably would not make it
    a requirement.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这些对立的观点，我仍然使用交易大厅的数据以及它们提供的历史数据，用于我的长期波段交易开发。这样，我的策略能够经历更多的市场条件。如果我为大豆开发的策略在1990年代、2000年代和2010年代表现良好，我会对该系统更加自信和印象深刻。有些人甚至会追溯到1970年代和1980年代！对于短期系统，尤其是日内系统，仅使用电子数据可能是有意义的。如果它在交易大厅数据上也有效，那就更好了，但我可能不会将其作为一个要求。
- en: '![images](images/gbox.jpg) Testing with Forex Data'
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 使用外汇数据进行测试'
- en: If you are testing a forex system, there are two major concerns you need to
    be aware of. The first issue is that not all forex data are the same. In fact,
    since the forex is decentralized, there is no official price stream like there
    is for futures markets. That means that each broker will have its own unique price
    data set. Of course, if you back test with the same data source that you will
    use going forward, then there is no issue. But if you test with data from broker
    A, and then want to trade it live with broker B, the system will now have different
    data to deal with. In that case, you can basically toss all your back tests out
    the window, as they are no longer valid. Depending on the data differences, your
    results might be better, and they might be worse. The point is, though, that you
    have invalidated all your testing by changing data sources.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在测试外汇系统，有两个主要问题需要注意。第一个问题是，并不是所有的外汇数据都是相同的。事实上，由于外汇市场是去中心化的，并没有像期货市场那样的官方价格流。这意味着每个经纪商都会有自己独特的价格数据集。当然，如果你使用与未来交易相同的数据源进行回测，那么就没有问题。但如果你用经纪商A的数据进行测试，然后想要用经纪商B进行实时交易，系统现在将面临不同的数据。在这种情况下，你基本上可以将所有的回测结果抛到窗外，因为它们不再有效。根据数据的差异，你的结果可能会更好，也可能会更差。关键是，通过更改数据源，你使得所有测试失效了。
- en: The second issue with testing forex data is in the types of orders you use.
    If you are testing your system with forex data, you really need to be careful
    with how your strategy places orders. Because of the issue I show later, I only
    use market orders for entry and exits. My forex strategies never have limit or
    stop orders in them. Of course, I always add the spread cost into the final profit/loss
    on each trade, but by using market orders, I never have to worry about “phantom”
    fills.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 测试外汇数据的第二个问题是你使用的订单类型。如果你在外汇数据上测试你的系统，确实需要对策略如何下单非常谨慎。由于我稍后提到的问题，我只使用市价单进行进场和出场。我的外汇策略中从不包含限价单或止损单。当然，我始终会将点差成本计算到每笔交易的最终利润/损失中，但通过使用市价单，我不必担心“虚假”成交。
- en: What is the pitfall to using limit and/or stop orders with forex data? In futures
    markets, there is one price data stream, which always represents the traded price.
    With forex, however, there is both a bid data stream and an ask data stream. The
    difference between these two data streams is the current spread, which is typically
    a few pips. By definition, you can only buy at the ask and sell at the bid.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 使用限价单和/或止损单与外汇数据的陷阱是什么？在期货市场中，只有一个价格数据流，这总是代表交易价格。然而，在外汇市场中，存在买价数据流和卖价数据流。这两个数据流之间的差异就是当前的点差，通常为几点。根据定义，你只能在卖价买入，在买价卖出。
- en: 'The problem with testing a trading strategy with forex data is that the data
    stream shown on the chart is typically the bid data stream. Although you could
    alternatively show the ask data stream (if available), most trading software back-test
    engines can use only one to calculate trade results. If your trading software
    can calculate fills using bid and ask data simultaneously, you may not encounter
    this issue. For example, non-object-oriented TradeStation can only test with bid
    *or* ask data. MultiCharts, on the other hand, can test with both bid *and* ask
    data. It is a good idea to check your software first, though, before assuming
    this is not a potential issue for you. If it is a potential issue for you, here
    is an example of how it could be a problem:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 使用外汇数据测试交易策略的问题在于，图表上显示的数据流通常是买价数据流。虽然你可以选择显示卖价数据流（如果可用），但大多数交易软件的回测引擎只能使用一种数据流来计算交易结果。如果你的交易软件能够同时使用买价和卖价数据进行计算，你可能不会遇到这个问题。例如，非面向对象的TradeStation只能使用买价*或*卖价数据进行测试。而MultiCharts则可以同时使用买价*和*卖价数据。不过，在假设这不会对你构成潜在问题之前，最好先检查一下你的软件。如果这对你是一个潜在问题，以下是一个可能出现问题的例子：
- en: Suppose you are trading the EURUSD forex pair. The current price is 1.3502/1.3505
    (I am using an unrealistically high three-pip spread for this example, but the
    principle holds for even smaller spreads). That means the bid is at 1.3502, and
    the ask is at 1.3505\. Remember, you can buy at the ask but not below, and you
    can sell at the bid but not above. Let’s also assume your trading software shows
    you the bid data, so currently it shows 1.3502.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在交易EURUSD外汇对。当前价格是1.3502/1.3505（为了这个例子，我使用了一个不现实的三点点差，但这个原则适用于更小的点差）。这意味着买价是1.3502，而卖价是1.3505。记住，你可以在卖价买入，但不能低于这个价格；你可以在买价卖出，但不能高于这个价格。还假设你的交易软件显示的是买价数据，所以目前显示的是1.3502。
- en: For this example, your strategy places an order to buy at 1.3500\. Shortly after
    your order, the price drops to 1.3499/1.3502\. Since the price on the chart is
    now 1.3499, and your buy price is 1.3500, the software strategy engine thinks
    you were filled at 1.3500\. It thinks you are currently long, but the ask price
    only hit 1.3502, so in real life you would never be filled.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，你的策略在1.3500下单买入。就在你的订单之后，价格下跌到1.3499/1.3502。由于图表上的价格现在是1.3499，而你的买入价格是1.3500，因此软件策略引擎认为你在1.3500成交。它认为你当前是多头，但卖出价仅达到1.3502，因此在现实中你根本无法成交。
- en: “Big deal!” you might say. “How often can this possibly happen?” Well, it will
    never happen for losing trades, since for losers the price will keep falling and
    you will get filled in real life, just as your back-test engine got filled. But
    for winning trades that turn profitable before the ask price hits 1.3500, you
    will never get filled. Depending on your trading methodology, it could lead to
    a huge discrepancy between back-test engine results and real-world results. At
    the very least, your back-test report will *always* be on the optimistic side.
    Since you use that information to develop your strategy, you could be basing your
    trading decisions on some very suspect results. Although the example I presented
    is for limit orders, the same type of situation occurs with stop orders. You will
    have stops filled at prices that never show up on the bid data chart.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: “这有什么大不了！”你可能会说。“这种情况发生的频率有多高？”好吧，对于亏损交易来说，这种情况是永远不会发生的，因为对于亏损，价格会持续下跌，你将在现实中成交，就像你的回测引擎成交一样。但对于在卖出价达到1.3500之前就变得盈利的交易，你将永远无法成交。根据你的交易方法，这可能导致回测引擎结果与现实结果之间出现巨大差异。至少，你的回测报告将*始终*偏向乐观。由于你使用这些信息来制定策略，你可能会根据一些非常可疑的结果做出交易决策。尽管我所提供的例子是针对限价单的，但止损单也会发生同样的情况。你的止损会在从未出现在买价数据图上的价格被成交。
- en: To get around this issue, you cannot just add slippage to each trade like you
    can with futures. This is because the bid/ask problem is not a situation of slightly
    worse fills—it is a case of fills or no fills. Or your software platform may offer
    advanced order techniques and methods (TradeStation refers to the method as “price
    series providers”). The key is to be able to back test the same way you trade
    live. That is precisely why I use market orders for all my forex strategies. Since
    I use orders such as “sell next bar at market,” I can have some losses that are
    much bigger than a stop-loss would be, and that is the big disadvantage of market
    orders. Just imagine, for example, how much the price could change in a five-minute
    bar around a Federal Reserve announcement. In the long run, though, I know market
    orders will always be filled, and they back test the same, after accounting for
    the spread, as they trade in live accounts. Therefore, I have found this situation
    to be acceptable, since it provides back-test results that match real market fills
    fairly well.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，你不能像期货那样在每笔交易中简单地增加滑点。这是因为买卖差价问题并不是轻微劣质成交的情况，而是成交与否的问题。或者你的软件平台可能提供先进的订单技术和方法（TradeStation将该方法称为“价格系列提供者”）。关键在于能够以与你实际交易相同的方式进行回测。这正是我对所有外汇策略使用市价单的原因。由于我使用诸如“在市场上卖出下一根K线”的订单，我可能会面临一些远大于止损的损失，这就是市价单的一个重大缺点。想象一下，例如，在美联储公告发布后的五分钟K线中，价格可能会发生多大的变化。然而，从长远来看，我知道市价单始终会被成交，并且在考虑点差后，其回测结果与真实账户交易相同。因此，我发现这种情况是可以接受的，因为它提供的回测结果与真实市场成交结果相当吻合。
- en: '![images](images/gbox.jpg) Summary'
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 摘要'
- en: As you can see, the issues behind market data are much more complex than the
    trading software leads you to believe. It is critical that you put in the time
    and effort up front to examine and understand the market data you are using. Utilizing
    the wrong data, or using the right data incorrectly, can lead to completely bogus
    test results. In most cases, unfortunately, you will not even realize there is
    an issue at all. I recommend that you spend as much time in the beginning reviewing
    your market data as you do in formulating your entry and exit criteria.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，市场数据背后的问题比交易软件让你相信的要复杂得多。你需要投入时间和精力，仔细审查和理解你所使用的市场数据。使用错误的数据，或者不正确地使用正确的数据，可能会导致完全虚假的测试结果。不幸的是，在大多数情况下，你甚至不会意识到存在问题。我建议你在开始时花费与制定进出场标准相同的时间来审查你的市场数据。
- en: CHAPTER 12
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章
- en: Limited Testing
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 限制测试
- en: At this point, I’ll assume you have the strategy coded, debugged, and ready
    to test. Unfortunately, when they get to this step, many traders will just test
    the strategy over the whole market history that they are interested in and see
    how profitable the strategy is. Some will go a step beyond this and actually run
    thousands or even millions of optimization iterations as part of this. What better
    way to see how good strategy can be than by running it to its extreme?
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我假设你已经编写、调试并准备好测试策略。不幸的是，当他们到达这一步时，许多交易者会在他们感兴趣的整个市场历史上测试策略，并看看策略的盈利能力。有些人会更进一步，实际上进行数千甚至数百万次的优化迭代。还有什么比将策略运行到极限更好的方法来了解策略的优劣呢？
- en: As you may have guessed, I am firmly against running these kinds of comprehensive
    tests. These tests may lead to a few great-looking optimized back tests but will
    almost always fail in real-time trading. Since successful real-time trading is
    the goal, shouldn’t that be our success criteria, rather than a nice-looking back
    test?
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所猜测，我坚决反对进行这种全面的测试。这些测试可能会导致一些看起来很不错的优化回测，但在实时交易中几乎总是会失败。既然成功的实时交易才是目标，那我们成功的标准应该是实时交易，而不是漂亮的回测吗？
- en: 'The other major problem with testing on all the data is that once you test
    the data, you “burn” it. This means that any subsequent retests will be just a
    bit more curve fit, a bit more optimized. Think about it: You run strategy A over
    all your data. It looks good, but not great. You make a few minor tweaks and rule
    changes to your strategy and then test the new strategy B. Now, it yields much
    better results. You are ecstatic. But do you realize you just optimized? No, you
    did not optimize in the sense of running strategy A with optimized parameters,
    which is how most trading software describes optimization. But you certainly did
    optimize, as you tested both strategy A and strategy B, and picked the best one.
    Even though in this case strategy B has a better back test than strategy A, I’d
    believe the results of strategy A more (unless strategy B is much, much better
    than A), since A was run with untouched data.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 测试所有数据的另一个主要问题是，一旦你测试了数据，你就“烧掉”了它。这意味着任何后续的重新测试都会更加曲线拟合，更加优化。想想看：你在所有数据上运行策略A。结果不错，但不是很棒。你对策略做了一些小的调整和规则更改，然后测试新的策略B。现在，它产生了更好的结果。你非常兴奋。但你意识到你刚刚进行了优化吗？不，你并没有以优化参数的方式运行策略A，这是大多数交易软件描述优化的方式。但你确实进行了优化，因为你测试了策略A和策略B，并选择了表现最好的一个。尽管在这种情况下策略B的回测优于策略A，但我更相信策略A的结果（除非策略B比A好得多），因为A是在未受影响的数据上运行的。
- en: 'Theoretically, you should run a strategy on a set of data one time, and one
    time only. If it works, great, but if it doesn’t work, you should just move on
    to the next data set or instrument. That original data are tainted by your testing,
    to a degree. This is the point where theory and practice deviate. In actual practice,
    you will eventually test multiple strategies over the same data, maybe not right
    away, but eventually it is inevitable. That is why you need to be careful. In
    my testing, I like to follow the teachings of Don Juan described in the book *Journey
    to Itxlan: The Lessons of Don Juan* (Simon & Schuster, 1972): “He taps it lightly,
    stays for as long as he needs to, and then swiftly moves away leaving hardly a
    mark.”'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，你应该只在一组数据上运行策略一次。如果有效，那就太好了；如果无效，你应该转向下一个数据集或工具。原始数据在一定程度上被你的测试污染了。这就是理论与实践偏离的地方。在实际操作中，你最终会在相同数据上测试多个策略，也许不是立刻，但最终这是不可避免的。这就是为什么你需要小心。在我的测试中，我喜欢遵循《*伊特克兰之旅：唐·胡安的教训*》（西蒙与舒斯特，1972）中唐·胡安的教导：“他轻轻敲击，停留所需的时间，然后迅速离开，几乎不留痕迹。”
- en: If you treat the data as fragile, you are more likely to avoid this issue. Treat
    your data with utmost care!
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把数据视为脆弱的，你更有可能避免这个问题。请以**极大的谨慎**对待你的数据！
- en: Since testing with all the data is a no-no, what is a reasonable and acceptable
    way to test a strategy? On one hand, you want to see if the core idea you developed
    has any merit to it; but on the other hand, you want the ability to add or change
    rules to the strategy, without falling victim to curve fitting or hindsight bias.
    Also, you want to leave as much data in your dataset untouched as possible, since
    this will create a better and more realistic walk-forward test (walk-forward testing
    will be discussed in the next chapter).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 由于使用所有数据进行测试是不合适的，合理且可接受的策略测试方法是什么？一方面，你想验证你开发的核心思想是否有其价值；另一方面，你希望能够添加或更改策略规则，而不被曲线拟合或事后偏差所困扰。此外，你希望尽可能保留数据集中的大量数据不被触碰，因为这将创建一个更好和更现实的前向测试（前向测试将在下一章讨论）。
- en: Given all these competing forces, I have found it best to do preliminary testing
    on a chunk of historical data, but not the whole data set. For example, if I have
    10 years of data for my full test, I will do the preliminary limited testing described
    below on one or two years’ worth of data. I try to use as little as possible,
    while still getting enough trades to be statistically meaningful. I will try to
    take the two years of data at random, not using the same data all the time or
    favoring any particular years.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到所有这些竞争力量，我发现最好在一段历史数据上进行初步测试，但不是在整个数据集上。例如，如果我有10年的数据进行完整测试，我将在以下描述的一个或两年的数据上进行初步有限测试。我会尽量使用尽可能少的数据，同时确保交易足够多以具有统计意义。我会尽量随机选择两年的数据，不使用相同的数据或偏向任何特定年份。
- en: Some traders advocate testing first on the “most interesting” data. For most
    commodities and futures, that would be the 2007–2009 time frame, when the world
    markets nearly collapsed. Their point is that if a system performs badly at this
    time, it will likely perform poorly at the next market shock. While I understand
    their approach, I respectfully disagree. I would try to avoid preliminary testing
    during the financial crisis, since it may lead me to a system that performs well
    only during severe shocks and panics. While a system such as this might be nice
    at those times, I’d fear that the system would lose a lot more during the more
    prevalent “normal” times.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 一些交易者主张首先在“最有趣”的数据上进行测试。对于大多数商品和期货而言，那将是2007年至2009年期间，世界市场几乎崩溃。 他们的观点是，如果一个系统在这个时期表现不佳，那么在下一个市场冲击中也可能表现不佳。虽然我理解他们的方法，但我尊重地不同意。我会尽量避免在金融危机期间进行初步测试，因为这可能会让我陷入一个只在严重冲击和恐慌中表现良好的系统。虽然这样的系统在这些时候可能不错，但我担心在更普遍的“正常”时期它会损失更多。
- en: If I take my two-year chunk of data and adhere to the following process, I’ll
    end up fairly certain whether my idea has any merit. The objective at the limited
    testing phase isn’t to determine if a system is tradable; rather, it is used as
    a hurdle to see if the trading system has any potential. Frequently, I have trading
    strategies that survive the limited two-year test but later fail the more rigorous
    tests. Only infrequently does the reverse occur, where I dismiss a strategy because
    of the limited results, and it turns out later to be a fantastic strategy.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我把两年的数据分段并遵循以下流程，我会相当确定我的想法是否有价值。在有限测试阶段的目标并不是确定一个系统是否可交易；而是作为一个门槛，看看交易系统是否有潜力。通常，我会有交易策略在有限的两年测试中存活下来，但在之后更严格的测试中失败。只有极少数情况下，会出现相反的情况，我因为有限的结果而否定一个策略，后来却发现它是一个绝佳的策略。
- en: '![images](images/gbox.jpg) Entry Testing'
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 进入测试'
- en: The first thing I usually want to know when testing a trading system is whether
    the entry has any usefulness. Many times, what looks like a good entry appears
    that way only because of the exits. Frequently it is difficult to know the true
    impact of entries when tested as a whole system.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 测试交易系统时，我通常想知道的第一件事是进入点是否有用。许多时候，看起来好的进入点之所以如此，往往是因为退出点。整体系统测试时，通常很难知道进入点的真实影响。
- en: 'When I evaluate entries by themselves, I typically perform the analysis three
    ways:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 当我单独评估条目时，通常会采用三种方式进行分析：
- en: Fixed-stop and target exit
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 固定止损和目标退出
- en: Fixed-bar exit
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 固定栏退出
- en: Random exit
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机退出
- en: Fixed-Stop and Target Exit
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 固定止损和目标退出
- en: For the fixed-stop and target exit test, I simply choose a set stop-loss and
    profit target that is appropriate for the instrument and time frame I am trading.
    For a swing-type system lasting a few days, $500 to $1,500 is a reasonable amount
    for a stop-loss. Similarly, I set an appropriate profit target. All things being
    equal, if you set the stop and target to the same dollar amount, before commissions
    and slippage you should prevail on 50 percent of your trades, assuming that your
    entry is no better than random. Using set dollar amounts for stop and profit,
    I simply create a strategy with my entry signal, set stop-loss, and set profit
    target.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 对于固定止损和目标退出测试，我只是选择适合我交易的工具和时间框架的固定止损和利润目标。对于持续几天的摆动型系统，500到1500美元是合理的止损金额。同样，我设置适当的利润目标。在其他条件相同的情况下，如果你将止损和目标设置为相同的金额，在扣除佣金和滑点之前，你应该在50%的交易中获胜，假设你的入场不比随机入场更好。使用固定金额作为止损和利润，我只是创建一个带有入场信号、固定止损和设定利润目标的策略。
- en: Fixed-Bar Exit
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 固定柱退出
- en: For the fixed-bar exit test, I create an exit condition that closes the trade
    after X number of bars pass. The idea behind this is that most good trades show
    profit right away and could be exited with a profit almost immediately. If your
    entries don’t show profit until 10 or more bars, for example, perhaps your entry
    is too early and should be delayed. This test really helps to check if the entry
    signal gets you going in the correct direction.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 对于固定柱退出测试，我创建一个退出条件，在经过X个柱后关闭交易。这背后的想法是，大多数好的交易会立刻显示利润，几乎可以立即退出。如果你的入场在10个或更多柱之前不显示利润，或许你的入场太早，应该延迟。这个测试确实有助于检查入场信号是否能让你朝正确的方向前进。
- en: Random Exit
  id: totrans-184
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 随机退出
- en: For the random exit test, I typically use this as part of the “monkey test”
    process, described later. However, sometimes I use it right at the beginning of
    testing. The concept is based on eliminating the impact of any exit and just seeing
    the ability of the entry to generate winning trades. If an entry is always profitable
    with a randomly generated exit, then chances are much better that there is an
    edge there.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 对于随机退出测试，我通常将其作为“猴子测试”过程的一部分，如后文所述。然而，有时我在测试开始时就使用它。这个概念是基于消除任何退出的影响，仅仅查看入场产生盈利交易的能力。如果一个入场在随机生成的退出情况下总是盈利，那么很可能存在优势。
- en: Entry Evaluation Criteria
  id: totrans-186
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入场评估标准
- en: For each of the three test techniques just described, there are a few ways to
    look at and analyze the results. Winning percentage, for example, is a very valid
    way to compare entries. If you test without slippage and commissions, your entry
    should be able to win more than 50 percent of the time, since that is what a random
    entry would give you. In my experience, I have found that 52 to 60 percent is
    achievable, and values that high suggest a worthwhile entry technique is present.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 对于刚描述的三种测试技术，有几种方法可以查看和分析结果。例如，胜率是比较入场的有效方式。如果你在没有滑点和佣金的情况下测试，你的入场应该能获胜超过50%的时间，因为这就是随机入场所带来的结果。根据我的经验，我发现52%到60%是可实现的，这样高的值表明存在值得的入场技术。
- en: The counterargument to using winning percentage is that, while it is nice to
    be right, it is even better to make money. A 60 percent winning percentage might
    make less money than a 40 percent winning percentage, especially if the entry
    is a trend-following entry. Trend-following entries, such as breakouts and moving
    average crossovers, are generally much lower winning percentage systems. They
    get their revenge on high-win-percentage systems by yielding few big winners and
    many small losers, with the win amount easily outpacing the loss amount. In these
    situations, therefore, the average profit per trade becomes useful.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 使用胜率的反对论点是，虽然正确很重要，但赚钱更重要。60%的胜率可能比40%的胜率赚得更少，尤其是当入场是趋势跟随时。趋势跟随入场，如突破和移动平均交叉，通常是胜率较低的系统。它们通过产生少量大赢家和许多小输家来报复高胜率系统，胜利金额很容易超过损失金额。因此，在这些情况下，平均每笔交易的利润变得有用。
- en: Since both winning percentage and average profit give meaningful information,
    I use them both. Since this is preliminary testing, I do not worry about drawdown
    or any other metric. All I want to know at this point is if my entry seems to
    have any edge. These two metrics can help tell me that.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 由于胜率和平均利润都提供有意义的信息，我同时使用它们。因为这是初步测试，我不担心回撤或其他任何指标。我此时只想知道我的入场是否有任何优势。这两个指标可以帮助我判断这一点。
- en: You may be wondering about optimization at this point. Should you use it? I
    will, but when I look at the results, I will not just look at the best iterations.
    Instead, I look at all of them. For example, let’s say I run 100 iterations, with
    various values for my entry input parameters. If only a handful of iterations
    are profitable or have a winning percentage above 50 percent, I will likely discard
    that system. But, if 70 percent or more of the iterations are favorable, then
    I will consider the entry as having successfully passed the test.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 此时你可能会对优化感到好奇。你应该使用它吗？我会，但当我查看结果时，不仅仅关注最佳的迭代，而是会查看所有迭代。例如，假设我运行100次迭代，使用不同的入场输入参数。如果只有少数几次迭代是盈利的或胜率超过50%，我可能会放弃那个系统。但如果70%或更多的迭代是有利的，那么我会认为该入场成功通过了测试。
- en: '![images](images/gbox.jpg) Exit Testing'
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 出场测试'
- en: In a similar fashion to entry testing, there are a few different ways to test
    an exit. Where it gets complicated is when the exit is tied to the entry is some
    fashion. An example of this might be using support lines for entries, and resistance
    lines for exits. It is hard to separate the two. In these cases, I might choose
    not to even test exits by themselves, and rather proceed to a complete system
    test, discussed later.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 与入场测试类似，测试出场有几种不同的方法。当出场与入场以某种方式相关联时，它就变得复杂了。这的一个例子可能是在入场时使用支撑线，而在出场时使用阻力线。很难将两者分开。在这些情况下，我可能选择不独立测试出场，而是进行全面的系统测试，这将在后面讨论。
- en: 'When I do evaluate exits by themselves, I typically perform the analysis two
    ways:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 当我独立评估出场时，我通常有两种分析方式：
- en: Similar-approach entry
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似策略入场
- en: Random entry
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机入场
- en: Similar-Approach Entry
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 类似策略入场
- en: The core idea behind testing exits by themselves is to see if they can help
    give you an edge. Most people see edges as being applicable only when you enter,
    but really, exits have just as much, if not more, impact on the bottom line. A
    carefully designed exit, it has been shown, can make even bad entry systems profitable!
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 独立测试出场的核心思想是看它们是否能帮助你获得优势。大多数人认为优势只在入场时适用，但实际上，出场对最终结果的影响同样重要，甚至更大。研究表明，一个设计良好的出场策略，能够使即使是糟糕的入场系统也能盈利！
- en: 'Since I will be testing the actual entry with the actual exit a bit later,
    at this point I want to see how the exit performs. To do this, I create an entry
    similar to the entry I want to use. This usually falls in one of two primary categories:
    trend following and countertrend following. Since I know what type of entry I
    have, I just create a generic one similar to it. For a trend-following approach,
    for example, I may just employ an X-bar breakout strategy. For a countertrend
    strategy, maybe I will use a relative strength index (RSI)-based entry. In either
    case, I create an entry that is comparable to my actual entry. Then I test it
    with my exit strategy. A robust exit strategy that is profitable to my similar-approach
    entries will likely also be profitable with my actual entry. This is a way to
    test an exit without involving the entry.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我稍后会测试实际的入场和出场，所以在这一点上，我想看看出场的表现。为此，我创建一个类似于我想使用的入场的入场。这通常分为两个主要类别：趋势跟随和逆趋势跟随。因为我知道我有什么类型的入场，所以我只是创建一个类似的通用入场。例如，对于趋势跟随的方法，我可能只会采用X-bar突破策略。对于逆趋势策略，也许我会使用基于相对强弱指数（RSI）的入场。在任何情况下，我都会创建一个可与我的实际入场相比较的入场。然后，我用我的出场策略测试它。一个对我的类似策略入场有效的稳健出场策略，可能在我的实际入场中也会盈利。这是一种在不涉及入场的情况下测试出场的方法。
- en: Random Entry
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 随机入场
- en: Discussed in a later section, if you have an exit strategy that works well with
    a random entry, you might have a really good system when you combine it with a
    solid entry technique. I do not use this approach as much as I used to, but occasionally
    I do like to see how a new exit technique works with random, no-edge entries.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在后面的章节中讨论，如果你有一个与随机入场配合良好的出场策略，当你将其与一个可靠的入场技术结合时，你可能会拥有一个非常好的系统。我不再像以前那样常用这种方法，但偶尔我也想看看新的出场技术如何与随机的、没有优势的入场配合。
- en: '![images](images/gbox.jpg) Exit Evaluation Criteria'
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 出场评估标准'
- en: When I test exits by themselves, I generally do not look at winning percentages
    at all, and just focus on overall profitability. In addition, I will use maximum
    favorable excursion (MFE) and maximum adverse excursion (MAE) as measurement criteria.
    With these metrics, the idea is that you do not want the exit to get you into
    too much trouble (adverse excursion), and you do not want it to give back too
    much of the potential profit (found by comparing actual profit to the favorable
    excursion). The trouble with these metrics, I have found, is that it becomes too
    easy to design just to these values, and in my experience that doesn’t necessarily
    lead to better systems. They are good, though, to see the potential of your system.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 当我单独测试退出时，我通常不看获胜百分比，而是专注于整体盈利能力。此外，我会使用最大有利波动（MFE）和最大不利波动（MAE）作为衡量标准。使用这些指标的目的是避免退出带来过多麻烦（不利波动），并且不希望它回吐过多潜在利润（通过比较实际利润与有利波动）。我发现这些指标的问题在于，设计时过于容易只针对这些数值，而根据我的经验，这并不一定能导致更好的系统。不过，它们确实可以帮助你看到系统的潜力。
- en: '![images](images/gbox.jpg) Core System Testing'
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 核心系统测试'
- en: Although there are benefits to testing the entry and exit signals by themselves
    (one being that you can always file away good entries and exits for use with another
    system), the interaction of entries and exits, as previously mentioned, is usually
    quite important. Regardless of whether I test entries and exits by themselves,
    I always test the complete core system during the preliminary phase.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然单独测试进出信号有其好处（其中一个是你可以随时保存良好的进出点，以便用于其他系统），但如前所述，进出点之间的相互作用通常是相当重要的。无论我是否单独测试进出点，我始终会在初步阶段测试完整的核心系统。
- en: My objective in testing the whole system is to see whether, on a limited history
    of data, the strategy performs well. The main criteria I use at this point is
    net profit, and I like to see profitable results over a wide range of variables
    and over most of the iterations. For example, if I have a simple breakout with
    10 possible values of the breakout amount, and 10 stop-loss/profit values, that
    creates 10 × 10 = 100 iterations. I would expect a good strategy to be profitable
    over 70 or more of these iterations on the small data set. If I do see this type
    of behavior, I generally will run the monkey test shown later, and then go on
    to more in-depth testing.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我测试整个系统的目标是查看在有限的数据历史下，策略是否表现良好。此时我使用的主要标准是净利润，我希望在广泛的变量范围内和大多数迭代中看到盈利结果。例如，如果我有一个简单的突破，突破量有10个可能值，止损/利润值有10个，那就创建了10
    × 10 = 100个迭代。我希望一个好的策略在这个小数据集中能够在70个或更多的迭代中盈利。如果我确实看到这种行为，我通常会运行后面显示的猴子测试，然后继续更深入的测试。
- en: Most of the time, the number of profitable iterations is on the order of 30
    to 70 percent of total cases. This puts me in a “no man’s land”—obviously, the
    strategy is not good enough as is, but there may be something there to work with.
    In situations like this, I may decide to add a rule, a filter, or otherwise change
    the entry and exit. Unfortunately, there is no set protocol for doing this. Many
    times, I’ll use extra rules or conditions that I have had previous success with.
    Once I make some minor changes, I reevaluate my sample results.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，盈利迭代的数量大约占总案例的30%到70%。这使我处于一种“无人区”——显然，该策略本身并不够好，但可能还有可以利用的东西。在这种情况下，我可能会决定添加规则、过滤器，或者以其他方式更改进出点。不幸的是，进行此操作没有固定的协议。很多时候，我会使用之前成功的额外规则或条件。一旦我进行了一些小改动，我会重新评估我的样本结果。
- en: The downside to this iterative process of modifying the rules is that you run
    the risk of fitting the system to the historical data. One or two modifications
    may be okay, but if you spend a lot of time modifying your strategy to get better
    results, you may very well fall into the “create a great-looking back test, but
    the real world performance suffers”–type scenario. Most times, if the first or
    second modification doesn’t dramatically improve things, then the strategy is
    best left for the scrap heap.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这种修改规则的迭代过程的缺点是你有可能将系统调整到历史数据上。一两个修改可能还可以，但如果你花很多时间修改策略以获得更好的结果，你很可能会陷入“创建一个看起来很好的回测，但实际表现却不佳”的情景。大多数情况下，如果第一次或第二次修改没有显著改善情况，那么这个策略最好就留在废料堆上。
- en: 'As I have stated, when I do the preliminary testing with limited optimization,
    I like to see 70 percent or higher of cases with net profit, and I will work with
    the 30 to 70 percent cases a bit to see if I can improve them. But, what about
    strategies that are just awful, with less than 30 percent of iterations generating
    any profit? In these cases I use the George Costanza approach: if everything I
    built is bad, then the opposite must be good! I will reverse the signals and buy
    when I was selling, and vice versa. Depending on the strategy logic, this doesn’t
    always produce the exact opposite result, but in many cases it is close. Without
    a doubt, though, this opposite effect is really apparent only before commissions
    and slippage are added in. Why is that? Well, take a trading system that has -$50
    average profit per trade, after $30 commissions and slippage. That might be a
    decent candidate for an opposite approach, since many people will assume that
    it would average $50 - $30 = $20 per trade. But in reality, the opposite trade
    would be a -$10 loser. When reversing systems, you must add in double the commissions
    and slippage. Here is the math:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我所说，当我进行初步测试并进行有限优化时，我希望看到70%或更高的案例有净利润，我会稍微调整30%到70%的案例，看看是否能改进它们。但是，针对那些糟糕的策略，迭代中产生任何利润的比例不足30%怎么办？在这些情况下，我采用乔治·科斯坦扎的方法：如果我构建的所有东西都很糟糕，那么相反的东西一定是好的！我会反转信号，在我卖出时买入，反之亦然。根据策略逻辑，这并不总是产生完全相反的结果，但在许多情况下是接近的。不过，毫无疑问，这种相反的效果在加入佣金和滑点之前是非常明显的。为什么会这样？好吧，假设一个交易系统每笔交易平均亏损50美元，在30美元的佣金和滑点之后。这可能是一个不错的反向策略候选，因为很多人会认为它的平均每笔交易收益是50美元
    - 30美元 = 20美元。但实际上，反向交易的结果会是亏损10美元。反转系统时，您必须将佣金和滑点加倍。这里是计算过程：
- en: -$50 average trade, after slippage and commissions
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均每笔交易-50美元，在滑点和佣金之后
- en: +$30 commission and slippage
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: +30美元的佣金和滑点
- en: -$20 average trade, no slippage or commissions
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均每笔交易-20美元，没有滑点或佣金
- en: Now flip the system to produce the opposite result, and then add commissions
    and slippage back in
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在反转系统以产生相反的结果，然后再加上佣金和滑点
- en: +$20 average trade, no slippage or commissions
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均每笔交易20美元，没有滑点或佣金
- en: -$30 commission and slippage
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: -30美元的佣金和滑点
- en: -$10 average trade, opposite system, with slippage and commissions
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均每笔交易-10美元，反向系统，加上滑点和佣金
- en: I believe when people ponder trading the opposite system, they neglect to add
    in the commissions and slippage correctly. This is why most “opposite” systems,
    while appealing on the surface, rarely if ever work in the real world.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信当人们考虑交易相反系统时，他们忽略了正确加上佣金和滑点。这就是为什么大多数“相反”系统表面上看起来很吸引，但在现实世界中很少成功的原因。
- en: At this point in the process, if my strategy has performed successfully, I will
    have tested the entry, the exit, and the core system, with all results suggesting
    that a tradable system *might* be achievable (remember, we have many more steps
    to go through before deciding a system is indeed tradable). This is just preliminary
    testing, the first hurdle, but when I even make it this far, I am somewhat encouraged.
    At this point, it is on to the last step in the preliminary process. This step
    involves animals, at least on a figurative level.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，如果我的策略表现成功，我将测试入场、出场和核心系统，所有结果都表明可能实现可交易系统（请记住，我们还有很多步骤要走才能确定系统确实可交易）。这只是初步测试，第一道障碍，但即使我能走到这一步，我也感到有些鼓舞。此时，进入初步流程的最后一步。这个步骤涉及动物，至少在比喻层面上是如此。
- en: '![images](images/gbox.jpg) Monkey See, Monkey Do'
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 猴子看，猴子做'
- en: One of the last tests I like to run is what I call “Monkey See, Monkey Do.”
    The essence of the test is to see if my strategy does better than a dart-throwing
    monkey. In 1973, a book by Burton Malkiel claimed that “throwing darts at a newspaper’s
    financial pages could select a portfolio that would do just as well as one carefully
    selected by experts.” The book, “*A Random Walk Down Wall Street”* (W. W. Norton,
    1973), is a classic for investors and traders, and the monkey idea resonated with
    many people. After all, no one wants to perform worse than a monkey! I personally
    don’t subscribe to all the talk about markets being random—if I did, I would really
    have no business searching for a trading edge. Since prolonged edges would not
    exist in random markets, I find the monkey test a very useful one.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢进行的最后一个测试是我所称的“猴子看，猴子做”。测试的本质是看我的策略是否比扔飞镖的猴子表现得更好。1973年，巴顿·马尔基尔的一本书声称，“向报纸的财务页面扔飞镖可以选择一个与专家精心挑选的投资组合一样好的组合。”这本书，《*华尔街的随机漫步*》（W.
    W. Norton, 1973），是投资者和交易者的经典之作，猴子的想法引起了许多人的共鸣。毕竟，没有人想表现得比猴子还差！我个人并不认同市场随机的所有说法——如果我认同，我真的就没必要寻找交易优势。由于在随机市场中不会存在持续的优势，我发现猴子测试是一个非常有用的测试。
- en: With any strategy I create, the strategy’s performance better be significantly
    improved over what any monkey could do by just throwing darts. If it is not, then
    I have no desire to trade such a strategy. I use three different monkey tests
    and two different time frames for testing. Passing all of the tests gives me confidence
    I have something better than random.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我创建的任何策略，其表现必须明显优于任何猴子仅通过扔飞镖所能做到的。如果没有，那么我就没有兴趣交易这样的策略。我使用三种不同的猴子测试和两个不同的时间框架进行测试。通过所有测试让我有信心我拥有比随机更好的东西。
- en: 'Test 1: “Monkey Entry”'
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试 1：“猴子入场”
- en: The first test I run is to see if the entry I developed is better than random.
    I simply replace the entry in my strategy with an entry than creates a randomly
    generated entry. I run the random entry, with the rest of my strategy intact,
    8,000 times. This generates 8,000 unique performance reports, since each run will
    have different randomly generated entries. By adjusting the frequency of the entry
    signals, I ensure that I get close to the same number of trades as my walk-forward
    history. Also, I try to match the percentage of long and short trades. These two
    conditions mean that the “monkey” trades as often as my system does, and in roughly
    the same proportion of long and short trades.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 我进行的第一个测试是看看我开发的入场是否比随机更好。我只是将策略中的入场替换为一个随机生成的入场。我运行这个随机入场，保持其他策略不变，进行了8,000次。这生成了8,000个独特的性能报告，因为每次运行都会有不同的随机生成入场。通过调整入场信号的频率，我确保获得与我的前行历史相近的交易数量。此外，我还试图匹配多头和空头交易的比例。这两个条件意味着“猴子”交易的频率与我的系统大致相同，并且多头和空头交易的比例大致相同。
- en: Typically, a good strategy will beat the monkey 9 times out of 10 in net profit
    and in maximum drawdown. For my 8,000 monkey trials, that means approximately
    7,200 must have net profit worse than my results, and the same number of runs
    with higher maximum drawdown than my walk-forward results. If I don’t reach these
    goals, I really have to wonder if my entry is truly better than random.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个好的策略在净利润和最大回撤方面会在10次中击败猴子9次。对于我的8,000次猴子测试，这意味着大约7,200次的净利润必须低于我的结果，且同样数量的运行的最大回撤要高于我的前行结果。如果我达不到这些目标，我真的要怀疑我的入场是否真的比随机更好。
- en: 'Test 2: “Monkey Exit”'
  id: totrans-224
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试 2：“猴子退出”
- en: The second test I run is to see if the exit I developed is better than random.
    It is much like the entry test, obviously, except in this case the monkey randomly
    exits the position. I control the random exit primarily by keeping the number
    of bars in a trade the same as my walk-forward history. For example, if my walk-forward
    history has an average of four bars per trade and always exits at the end of the
    day, I will tune the random exit to be on average the same. Also, it will always
    exit at the end of the day, if that is my criterion.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 我进行的第二个测试是看看我开发的退出策略是否比随机退出更好。显然，它与入场测试类似，只是这次猴子随机退出头寸。我主要通过保持每笔交易的条数与我的前行历史相同来控制随机退出。例如，如果我的前行历史每笔交易平均有四个条，且总是在一天结束时退出，我会调节随机退出，使其平均保持相同。此外，如果这是我的标准，它总是在一天结束时退出。
- en: As with the monkey entry, I look for my walk-forward results to be better than
    90 percent of the monkey exits.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 与猴子入场一样，我希望我的前行结果比90%的猴子退出表现得更好。
- en: 'Test 3: “Monkey Entry, Monkey Exit”'
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试 3：“猴子进，猴子出”
- en: After determining that my strategy is better than both a monkey entry and a
    monkey exit, I like to see that my strategy is better than a monkey entry *and*
    exit. I do this because sometimes my edge is in the interaction of the entry and
    exit. For example, it might be that my entry is valid only because I set the exit
    near a support or resistance zone. It might be that the entry, taken alone, or
    the exit, taken alone, isn’t enough without the other.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在确定我的策略比猴子入场和猴子出场更优之后，我希望看到我的策略优于猴子入场*和*出场。我这样做是因为有时候我的优势在于入场和出场的互动。例如，可能我的入场仅在我将出场设置在支撑或阻力区附近时才有效。单独的入场或单独的出场可能都不足以产生效果。
- en: 'In this test, I replace all entry and exit code with random monkey code. I
    adjust the parameters of the random entry and exit to match my strategy in the
    following ways:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个测试中，我用随机的猴子代码替换所有入场和出场代码。我调整随机入场和出场的参数，使其符合我的策略，具体如下：
- en: Number of trades
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交易次数
- en: Ratio of long trades to short trades
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多头交易与空头交易的比例
- en: Average bars spent in a trade
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 平均每笔交易所花费的时间
- en: Note that these conditions are the same I apply to the other monkey tests. Then
    I run the monkey entry, monkey exit strategy 8,000 times, just like the other
    tests, and compare results the same way.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些条件与我应用于其他猴子测试的是相同的。然后，我像其他测试一样运行猴子入场和猴子出场策略8,000次，并以相同的方式比较结果。
- en: Time Frames
  id: totrans-234
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 时间框架
- en: The first time I run the monkey tests is in the development stage, as one more
    hurdle for a strategy to overcome. Most of the time, though, running these tests
    over the walk-forward time frame will almost always yield good results. This is
    because bad strategies will likely never get this far in the development process.
    Still, though, I like to see my strategy pass this test. It gives me confidence
    that I may indeed have an edge.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我第一次运行猴子测试是在开发阶段，作为策略需要克服的又一个障碍。不过，大多数情况下，在前进回测的时间框架内运行这些测试几乎总能得到良好的结果。这是因为糟糕的策略很可能在开发过程中不会走到这一步。然而，我还是希望看到我的策略通过这个测试。这让我有信心我的确可能有优势。
- en: The other time frame I use to run the monkey tests is when running the strategy
    live. I take the results of the past 6 to 12 months (3 months may also be a good
    number, although the validity may be questionable if the number of trades is low).
    If, in that 6- to 12-month time period, the monkeys became a lot better, I know
    that my assumed edge has either degraded or disappeared completely. It might then
    be time for me to quit trading that system.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个我用来运行猴子测试的时间框架是策略实盘运行时。我会参考过去6到12个月的结果（3个月也可能是一个不错的数字，尽管如果交易数量较少，有效性可能会受到质疑）。如果在那6到12个月的时间段内，猴子的表现大幅提升，我就知道我假设的优势可能已经减弱或完全消失。这时，我可能需要考虑停止交易该系统。
- en: Monkey Testing—Example
  id: totrans-237
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 猴子测试—示例
- en: To give you an idea of how the monkey test works, in both the walk-forward history
    and the real-time history, I will provide an example in this section.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你了解猴子测试是如何工作的，在前进回测历史和实时历史中，我将提供一个示例。
- en: '[Figure 12.1](#figure12-1) shows the walk-forward performance of the as-developed
    system, along with the performance after initial development. The system did quite
    well for a while, but eventually endured some significant drawdowns. The question
    is: could the 6-month monkey test have shown that the edge in this system was
    gone, and that trading should have ceased? To answer that question, I will perform
    monkey tests at the points shown on the graph.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '[图12.1](#figure12-1) 显示了该开发系统的前进回测表现，以及初步开发后的表现。该系统在一段时间内表现相当不错，但最终经历了一些显著的回撤。问题是：6个月的猴子测试是否能显示该系统的优势已不复存在，交易是否应该停止？为了回答这个问题，我将在图中显示的点进行猴子测试。'
- en: '![images](images/c12f001.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c12f001.jpg)'
- en: '[**FIGURE 12.1**](#figureanchor12-1) Sample System Walk-Forward Performance'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图12.1**](#figureanchor12-1) 样本系统前进回测性能'
- en: The code, in TradeStation Easy Language, for the baseline strategy, and the
    three monkey strategies, are shown in Appendix A.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 基准策略及三种猴子策略的代码，均在附录A中展示。
- en: The first step in creating random strategies that are comparable to the baseline
    strategy is to gather the pertinent statistics of the baseline strategy. These
    are shown in [Table 12.1](#table12-1).
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 创建可与基准策略相比较的随机策略的第一步是收集基准策略的相关统计数据。这些数据在[表12.1](#table12-1)中展示。
- en: '[**TABLE 12.1**](#tableanchor12-1) Baseline Performance'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表12.1**](#tableanchor12-1) 基准性能'
- en: '| Parameter | Value |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| 参数 | 值 |'
- en: '| --- | --- |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Time period | 3/19/2007–11/1/2011 |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| 时间段 | 2007年3月19日–2011年11月1日 |'
- en: '| Net profit | $72,650 |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| 净利润 | $72,650 |'
- en: '| Maximum intraday drawdown | -$22,270 |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| 最大日内回撤 | -$22,270 |'
- en: '| Number of trades | 430 |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| 交易数量 | 430 |'
- en: '| Percentage of long trades | 40 percent |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| 多头交易的百分比 | 40% |'
- en: '| Average bars in trade | 2.5 |'
  id: totrans-252
  prefs: []
  type: TYPE_TB
  zh: '| 平均每笔交易的条形数 | 2.5 |'
- en: '| Number of trading days | 1,165 |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| 交易天数 | 1,165 |'
- en: '| Number of trades/Number of trading days | 0.37 |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| 交易数量/交易天数 | 0.37 |'
- en: All of the information in [Table 12.1](#table12-1) can be obtained from the
    performance report. The two parameters I will use to compare to random strategies
    are the net profit and the maximum intraday drawdown. All other parameters listed
    will be used to “tune” the random strategy. The goal with tuning is to have roughly
    the same numbers of trades, the same percentage of long and short trades, and
    the same average time in trades for the random strategy as for the baseline strategy.
    Doing this will allow a fair comparison of the two strategies.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 所有信息都可以从[表 12.1](#table12-1)的性能报告中获取。我将用来与随机策略进行比较的两个参数是净利润和最大日内回撤。所有其他列出的参数将用于“调优”随机策略。调优的目标是使随机策略的交易数量、长短交易的百分比以及每笔交易的平均时间与基准策略大致相同。这样可以实现这两种策略的公平比较。
- en: Once the random strategies all yield roughly the same number of trades as the
    baseline strategy, I can run each random strategy 8,000 times. Then I can compare
    the results. These results are shown in [Table 12.2](#table12-2).
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦随机策略的交易数量与基准策略大致相同，我可以将每个随机策略运行8,000次。然后我可以比较结果。这些结果在[表 12.2](#table12-2)中显示。
- en: '[**TABLE 12.2**](#tableanchor12-2) Random “Monkey” Test 1'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表 12.2**](#tableanchor12-2) 随机“猴子”测试 1'
- en: '| Test Period: 3/19/2007 to 11/1/2011 | Percentage of Cases with Net Profit
    Worse than Baseline Case | Percentage of Cases with Maximum Intraday Drawdown
    Worse than Baseline Case |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| 测试周期：2007年3月19日至2011年11月1日 | 净利润低于基准案例的案例百分比 | 最大日内回撤低于基准案例的案例百分比 |'
- en: '| --- | --- | --- |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Random entry, baseline exit | 100% | 99% |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| 随机进入，基准退出 | 100% | 99% |'
- en: '| Baseline entry, random exit | 99% | 94% |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| 基准进入，随机退出 | 99% | 94% |'
- en: '| Random entry, random exit | 99% | 99% |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| 随机进入，随机退出 | 99% | 99% |'
- en: The results are pretty clear—the baseline strategy is much, much better than
    any random strategy. Score one for the humans over the monkeys! Based on this
    information, the baseline strategy clearly passes the random test.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 结果非常明显——基准策略远远好于任何随机策略。这是人类对猴子的胜利！根据这些信息，基准策略显然通过了随机测试。
- en: But how does the baseline strategy compare to the random strategies a few months
    later? Referring to [Figure 12.1](#figure12-1), the baseline strategy ran into
    some difficulty around February–March 2012\. Assuming an end date of March 1,
    2012, over the previous 12 months, the strategy had a net profit of $780, and
    a maximum intraday drawdown of -$15,680\. How does that compare with the random
    strategies? After 8,000 runs, here are the results (see [Table 12.3](#table12-3)).
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 那么基准策略与随机策略在几个月后相比如何呢？参考[图 12.1](#figure12-1)，基准策略在2012年2月至3月间遇到了一些困难。假设结束日期为2012年3月1日，在过去的12个月中，该策略的净利润为$780，最大日内回撤为-$15,680。与随机策略相比如何？经过8,000次运行，这里是结果（见[表
    12.3](#table12-3)）。
- en: '[**TABLE 12.3**](#tableanchor12-3) Random “Monkey” Test 2'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表 12.3**](#tableanchor12-3) 随机“猴子”测试 2'
- en: '| Test Period: 3/1/2011 to 3/1/2012 | Percentage of Random Cases with Net Profit
    Worse than Baseline Case ($780) | Percentage of Random Cases with Maximum Intraday
    Drawdown Worse than Baseline Case (–$15,680) |'
  id: totrans-266
  prefs: []
  type: TYPE_TB
  zh: '| 测试周期：2011年3月1日至2012年3月1日 | 净利润低于基准案例的随机案例百分比 ($780) | 最大日内回撤低于基准案例的随机案例百分比
    (–$15,680) |'
- en: '| --- | --- | --- |'
  id: totrans-267
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Random entry, baseline exit | 49% | 73% |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| 随机进入，基准退出 | 49% | 73% |'
- en: '| Baseline entry, random exit | 99% | 100% |'
  id: totrans-269
  prefs: []
  type: TYPE_TB
  zh: '| 基准进入，随机退出 | 99% | 100% |'
- en: '| Random entry, random exit | 60% | 95% |'
  id: totrans-270
  prefs: []
  type: TYPE_TB
  zh: '| 随机进入，随机退出 | 60% | 95% |'
- en: The results should present some cause for concern. Clearly, the baseline strategy
    has performed only slightly better than a random strategy, depending on the number
    you focus on. Personally, I look at all the numbers as a group, and if I see most
    of them at or below 60 to 70 percent, I become concerned. If most of the numbers
    are below 50 percent, I become very concerned, since by all measures, my strategy
    is not performing better than the monkeys.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果应该引起一些关注。显然，基准策略的表现仅比随机策略稍好，这取决于你关注的数字。就个人而言，我会将所有数字作为一个整体来看，如果大多数数字在60%到70%之间或更低，我会感到担忧。如果大多数数字低于50%，我会非常担忧，因为在所有指标下，我的策略并没有比猴子表现得更好。
- en: In this particular case, with only one value below 50 percent, and two values
    below 70 percent, I’d probably let the strategy continue trading. More conservative
    traders might decide to stop trading at this point, and that is a reasonable decision,
    too.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种特殊情况下，仅有一个值低于50%，两个值低于70%，我可能会让策略继续交易。更保守的交易者可能会在此时决定停止交易，这也是一个合理的决定。
- en: The next time the baseline strategy caused concern was in May 2013\. Over the
    year ending May 1, 2013, the baseline strategy lost -$1,105, with a maximum intraday
    drawdown of -$15,100\. How does that compare to the random monkey systems? See
    [Table 12.4](#table12-4).
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 基准策略引起关注的下一次是在2013年5月。在截至2013年5月1年的一年中，基准策略亏损- $1,105，最大日内回撤为- $15,100。这与随机猴子系统相比如何？见[表12.4](#table12-4)。
- en: '[**TABLE 12.4**](#tableanchor12-4) Random “Monkey” Test 3'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表12.4**](#tableanchor12-4) 随机“猴子”测试3'
- en: '| Test Period: 5/1/2012 to 5/1/2012 | Percentage of Random Cases with Net Profit
    Worse than Baseline Case (–$1,105) | Percentage of Random Cases with Maximum Intraday
    Drawdown Worse than Baseline Case (–$15,100) |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| 测试周期：2012年5月1日至2012年5月1日 | 净利润低于基准案例的随机案例百分比（–$1,105） | 最大日内回撤低于基准案例的随机案例百分比（–$15,100）
    |'
- en: '| --- | --- | --- |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Random entry, baseline exit | 50% | 64% |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| 随机进场，基准出场 | 50% | 64% |'
- en: '| Baseline entry, random exit | 1% | 1% |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| 基准进场，随机出场 | 1% | 1% |'
- en: '| Random entry, random exit | 49% | 72% |'
  id: totrans-279
  prefs: []
  type: TYPE_TB
  zh: '| 随机进场，随机出场 | 49% | 72% |'
- en: The results here are much clearer now. On average, the monkey systems are equal
    to or better than the baseline strategy. This indicates that any edge the strategy
    originally had is gone or is certainly on hiatus. Wise traders would stop trading
    this system near the beginning of May 2013\. In this case, judging from the performance
    of the baseline strategy after May 1, 2013, that was a good decision.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 结果现在更清晰了。平均而言，猴子系统与基准策略相当或更好。这表明该策略原本的优势消失了，或至少是暂时休眠。明智的交易者会在2013年5月初停止交易该系统。在这种情况下，从2013年5月1日后基准策略的表现来看，那是一个明智的决定。
- en: Comparison of your strategy to randomly generated strategies can be useful,
    too. In the preceding example system, the analysis was able to show that the strategy
    as developed was significantly better than a random, monkey-throwing-darts system.
    That is nice to know, as it gives you confidence as you begin to trade.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的策略与随机生成的策略进行比较也可能是有用的。在前面的示例系统中，分析能够显示所开发的策略显著优于随机的猴子掷飞镖系统。这是值得知道的，因为它给了你在开始交易时的信心。
- en: Unfortunately, running this analysis when you develop the strategy tells you
    nothing about how well the strategy will work going forward. The strategy itself
    could be defective, leading to real-time losses. Or the characteristics of the
    market may have changed, and your strategy cannot adapt to it. In either case,
    periodically comparing the baseline strategy results to the random monkey results
    can help you decide whether the strategy is broken. As the earlier analysis shows,
    the random test can be an early warning detection method of sorts, and can suggest
    that you stop trading the strategy until performance becomes better than random.
    Thus, it can be a useful tool in deciding when to stop trading a strategy.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，在你制定策略时进行此分析并不能告诉你该策略在未来的表现如何。策略本身可能存在缺陷，导致实时损失。或者市场的特性可能发生了变化，而你的策略无法适应。在这两种情况下，定期将基准策略结果与随机猴子结果进行比较可以帮助你判断策略是否损坏。正如早期分析所示，随机测试可以是一种早期预警检测方法，并可以建议你停止交易该策略，直到其表现好于随机交易。因此，它可以是决定何时停止交易策略的有用工具。
- en: CHAPTER 13
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章
- en: In-Depth Testing/Walk-Forward Analysis
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 深入测试/向前分析
- en: 'Once I have a trading system that I believe has some sort of edge to it, and
    it passes all the preliminary tests I throw at it, then I feel comfortable going
    on to more in-depth testing. As stated earlier, there are four primary ways of
    testing:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我拥有一个我认为具有某种优势的交易系统，并且它通过了我所有的初步测试，我就会觉得可以进行更深入的测试。如前所述，有四种主要的测试方法：
- en: Historical back testing—all in-sample
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 历史回测——全为样本内
- en: Out-of-sample testing
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超出样本测试
- en: Walk-forward testing
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向前回测
- en: Real-time testing
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时测试
- en: Over the years I have successfully and unsuccessfully used each one of these
    approaches. Currently, I believe that walk-forward analysis offers the best combination
    of amount of history that can be tested, degree of match between historical and
    real-time results, and sensitivity to changing market conditions. During the in-depth
    testing phase described in this chapter, I will use only walk-forward testing.
    But before we get into a discussion about walk-forward testing, what if you don’t
    have any parameters to optimize?
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我成功和不成功地使用了每一种方法。目前，我认为逐步前进分析提供了可以测试的历史量、历史与实时结果之间的匹配程度以及对市场变化的敏感性之间的最佳组合。在本章描述的深入测试阶段，我将只使用逐步前进测试。但在我们讨论逐步前进测试之前，如果你没有任何参数需要优化呢？
- en: '![images](images/gbox.jpg) No Parameters'
  id: totrans-291
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 无参数'
- en: Occasionally, you may develop a system that has no parameters to optimize at
    all. For example, your entry may be based on a specific candlestick chart pattern,
    and your exit might be a set-dollar-amount stop-loss, with a set profit target.
    For whatever reason, you may decide that you never want to change these values
    for stop-loss and target, and you do not want to change the entry. Your philosophy
    may be “no optimization, ever,” which is certainly one way to avoid curve fitting
    or overfitting of the system to the data.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 偶尔，你可能会开发出没有任何参数需要优化的系统。例如，你的进场可能基于特定的蜡烛图形态，而出场可能是设定的止损金额和盈利目标。出于某种原因，你可能决定从不想更改这些止损和目标值，也不想更改进场。你的理念可能是“永不优化”，这无疑是一种避免曲线拟合或过拟合的方法。
- en: In situations such as this, your in-depth analysis will simply consist of one
    historical test through the data. If the results meet your goals, you can simply
    move on to the next step. If not, you should discard the strategy and move on
    to the next idea.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你的深入分析将仅仅是对数据进行一次历史测试。如果结果符合你的目标，你可以直接进入下一步。如果不符合，你应该放弃该策略并继续下一个想法。
- en: One important point is that if your optimizationless strategy does not work,
    you should not go back and tweak the strategy, followed by rerunning it. For example,
    if you run it the first time and are displeased with the results, you should not
    change the entry to a different candlestick pattern and try again. That is just
    an optimization of the entry, done a different way. But it is still optimization.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的观点是，如果你的无优化策略不奏效，你不应该回过头来调整策略，然后重新运行。例如，如果你第一次运行后对结果不满意，不应该将进场更改为不同的蜡烛图形态然后再试。这只是另一种方式的进场优化，但仍然是优化。
- en: 'If you think this technique might apply to you, you can turn these two unique
    strategies into one optimizable strategy, following the pseudo code technique
    shown below:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你认为这个技巧可能适用于你，你可以将这两个独特的策略合并为一个可优化的策略，遵循下面展示的伪代码技巧：
- en: '**Strategy 1**'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '**策略 1**'
- en: Enter long with candlestick pattern A
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以蜡烛图形态 A 进场做多
- en: Stop-loss $X, profit target $Y
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 止损 $X，盈利目标 $Y
- en: '**Strategy 2**'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '**策略 2**'
- en: Enter long with candlestick pattern B
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以蜡烛图形态 B 进场做多
- en: Stop-loss $X, profit target $Y
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 止损 $X，盈利目标 $Y
- en: '**Strategy 3—strategies 1 and 2 combined**'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '**策略 3——策略 1 和 2 的组合**'
- en: For i = 1 to 2
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 i = 1 到 2
- en: If i = 1, enter long with candlestick pattern A
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 i = 1，以蜡烛图形态 A 进场做多
- en: If i = 2, enter long with candlestick pattern B
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 i = 2，以蜡烛图形态 B 进场做多
- en: Stop-loss $X, profit target $Y
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 止损 $X，盈利目标 $Y
- en: The benefit of such an approach is that you know up front that you are optimizing
    (no hidden or forgotten optimizations to taint your results), and it may very
    well be that a combination of strategies (e.g., strategy 1 might be better in
    year 1, but strategy 2 might be better in year 2) might be better than either
    by itself.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的好处在于你可以事先知道你正在优化（没有隐藏或遗忘的优化影响你的结果），而且不同策略的组合（例如，策略 1 在第一年可能更好，但策略 2 在第二年可能更好）可能会比单独使用任何一个策略更有效。
- en: If you truly decide that you have no parameters to optimize, simply substitute
    the walk-forward analysis shown later for a single-run historical analysis. If
    the results are favorable, you can then proceed to the next step. In most situations,
    though, you will have at least one parameter to optimize, and for those cases
    walk-forward analysis is the best way to go.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你真的决定没有参数需要优化，简单地用后面展示的逐步前进分析替代单次历史分析。如果结果有利，则可以继续下一步。不过在大多数情况下，你至少会有一个参数需要优化，对于这些情况，逐步前进分析是最佳选择。
- en: '![images](images/gbox.jpg) A Walk-Forward Primer'
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 前进分析入门'
- en: Many people are confused by walk-forward testing and how it really is different
    from traditional optimization. I think understanding the walk-forward concept
    has been made even more difficult to understand by the introduction of it in most
    trading software packages. In the “old” days, without specialized software or
    a spreadsheet, walk-forward testing had to be performed by hand or custom computer
    programming. In fact, when I had my successful run in the World Cup trading contest,
    I relied on strategies developed with walk-forward testing conducted by hand.
    It was difficult and tedious, but it gave me a clear understanding of how the
    process works.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 许多人对前进测试感到困惑，不知道它与传统优化有什么真正不同。我认为大多数交易软件包中引入的前进概念使其更难以理解。在“旧”时代，没有专门的软件或电子表格，前进测试必须通过手动或自定义计算机编程进行。实际上，当我在世界杯交易比赛中取得成功时，我依赖于手动进行前进测试开发的策略。这很困难且繁琐，但让我清楚地理解了该过程是如何运作的。
- en: To bring the concept down to earth, I will first demonstrate the process on
    a simple breakout trading system. In this way, you can see step by step how the
    walk-forward analysis is done.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这个概念更容易理解，我将首先在一个简单的突破交易系统上演示该过程。通过这种方式，你可以逐步看到前进分析是如何进行的。
- en: 'First, some simple definitions regarding the walk-forward analysis are in order:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，有必要对前进分析做一些简单定义：
- en: '*In period.* This is the chunk of historical data that will be optimized.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在此期间。* 这是将要优化的历史数据片段。'
- en: '*Out period.* This is the chunk of historical data that will be evaluated using
    optimized results from the adjacent in period.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*样本外期间。* 这是将使用来自相邻样本内的优化结果评估的历史数据片段。'
- en: '*Fitness factor.* This is the criterion used to determine the “best” result,
    allowing us to select the optimized parameters.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*适应度因子。* 这是用于确定“最佳”结果的标准，使我们能够选择优化的参数。'
- en: '*Anchored/Unanchored test.* This tells us whether or not the in period start
    date shifts with time, or if the start date is always the same.'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*锚定/非锚定测试。* 这告诉我们在此期间的开始日期是否随着时间的推移而变化，或者开始日期是否始终相同。'
- en: Although I will discuss the details of how to select these parameters a bit
    later, for our test case we will use a 5-year in period, a 1-year out period,
    fitness factor of net profit, and an unanchored test.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我稍后会讨论如何选择这些参数的细节，但对于我们的测试案例，我们将使用5年的样本内期、1年的样本外期、净利润的适应度因子和非锚定测试。
- en: 'Our strategy will be a very simple one: a countertrend breakout-type system:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的策略将是一个非常简单的反趋势突破型系统：
- en: Enter short if the close is an “X”-day high close
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果收盘价是“X”日的最高收盘价，则进入短仓
- en: Enter long if the close is a “Y”-day low close
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果收盘价是“Y”日的最低收盘价，则进入长仓
- en: Stop-loss of “Z”
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 止损为“Z”
- en: 'In TradeStation Easy Language, the system code becomes:'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在TradeStation Easy Language中，系统代码变为：
- en: '[PRE0]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For this example, we will use the continuous contract for the mini S&P (ES),
    and use 10 years of data, from January 1, 2000, to January 1, 2010\. We will use
    daily bars and include $25 slippage and commission per round trip trade.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用迷你标准普尔（ES）的连续合约，并使用10年的数据，从2000年1月1日到2010年1月1日。我们将使用日线，并在每笔交易中包含$25的滑点和佣金。
- en: 'For comparison purposes, first we will optimize over all the data from 2000
    to 2010\. Using net profit as our fitness function criteria, we get the optimum
    values:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 为了比较目的，首先我们将在2000年至2010年的所有数据上进行优化。使用净利润作为我们的适应度函数标准，我们得到了最优值：
- en: X = 9
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X = 9
- en: Y = 5
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y = 5
- en: Z = $600
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z = $600
- en: This complete optimization produces a net profit of $55,162 over the 10-year
    period.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 这次完整优化在10年期间产生了净利润$55,162。
- en: 'Now, we will run the walk-forward analysis. Since we are running a 5-year optimization
    period, we will first optimize from January 1, 2000, to January 1, 2005\. When
    we do this, we get the following parameters for the highest net profit case:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将运行前进分析。由于我们正在进行5年的优化期，我们将首先优化从2000年1月1日到2005年1月1日。当我们这样做时，我们得到以下最高净利润案例的参数：
- en: X = 7
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X = 7
- en: Y = 17
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Y = 17
- en: Z = $600
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Z = $600
- en: That completes out first in-sample evaluation. Now we apply the preceding parameters
    to our first out-of-sample period, January 1, 2005, to January 1, 2006\. Note
    that it is considered out-of-sample because it was not in the first optimization
    period. The results of this first out-of-sample yields a loss of $3,138.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 这完成了我们的第一次样本内评估。现在我们将前述参数应用于我们的第一次样本外期，即2005年1月1日至2006年1月1日。请注意，它被视为样本外，因为它不在第一次优化期间。这个第一次样本外的结果产生了$3,138的损失。
- en: In a similar fashion, we then run the in-sample optimizations, and the out-of-sample
    performance runs for each of the rows shown in [Table 13.1](#table13-1).
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 以类似方式，我们随后对[表 13.1](#table13-1)中显示的每一行进行样本内优化和样本外性能运行。
- en: '[**TABLE 13.1**](#tableanchor13-1) Sample Walk-Forward Test Results'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表 13.1**](#tableanchor13-1) 样本向前走测试结果'
- en: '| In-Sample Test Period | Best Parameters X, Y, Z | Out-of-Sample Period |
    Out-of-Sample Result |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| 样本内测试周期 | 最佳参数 X, Y, Z | 样本外周期 | 样本外结果 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1/1/2000–1/1/2005 | 7,17,600 | 1/1/2005–1/1/2006 | -$3,138 |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| 2000年1月1日–2005年1月1日 | 7,17,600 | 2005年1月1日–2006年1月1日 | -$3,138 |'
- en: '| 1/1/2001–1/1/2006 | 7,45,100 | 1/1/2006–1/1/2007 | -$2,325 |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| 2001年1月1日–2006年1月1日 | 7,45,100 | 2006年1月1日–2007年1月1日 | -$2,325 |'
- en: '| 1/1/2002–1/1/2007 | 49,7,600 | 1/1/2007–1/1/2008 | +$5,963 |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| 2002年1月1日–2007年1月1日 | 49,7,600 | 2007年1月1日–2008年1月1日 | +$5,963 |'
- en: '| 1/1/2003–1/1/2008 | 21,11,1000    | 1/1/2008–1/1/2009 | -$19,113 |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| 2003年1月1日–2008年1月1日 | 21,11,1000 | 2008年1月1日–2009年1月1日 | -$19,113 |'
- en: '| 1/1/2004–1/1/2009 | 9,5,600 | 1/1/2009–1/1/2010 | +$8,675 |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| 2004年1月1日–2009年1月1日 | 9,5,600 | 2009年1月1日–2010年1月1日 | +$8,675 |'
- en: 'Once we are complete, we have our walk-forward analysis. To create a complete
    performance report of the walk-forward data, we can create a strategy where the
    values change every time the walk-forward period changes. Such a strategy looks
    like this:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成，我们就得到了向前走分析。为了创建完整的向前走数据性能报告，我们可以创建一个策略，使得每次向前走周期改变时，数值都变化。这样的策略如下：
- en: '[PRE1]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will allow us to compare the walk-forward results to the optimized results.
    This is shown in [Figure 13.1](#figure13-1). The interesting points of this comparison
    are:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使我们能够比较向前走的结果与优化结果。这在[图 13.1](#figure13-1)中显示。此比较的有趣之处在于：
- en: The optimized equity curve is much, much better than the walk-forward curve.
    This is to be expected, since the optimized curve is a result of optimization.
    This should tell you that practically any strategy can be made to look good, if
    you optimize the parameters over the time period you are interested in.
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化后的收益曲线远远好于向前走的曲线。这是意料之中的，因为优化曲线是优化的结果。这应该告诉你，几乎任何策略只要优化其参数，就可以看起来很好。
- en: The walk-forward results are not very good. Walk-forward analysis is a tough
    test for a strategy to “pass.” Most strategies fail at this analysis. But since
    this simulates real life more than fully optimized results do, it is a more accurate
    method of analysis.
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向前走的结果并不好。向前走分析是对策略的“通过”进行严格测试。大多数策略在此分析中失败。但由于这更能模拟现实生活，相较于完全优化的结果，它是一种更准确的分析方法。
- en: '![images](images/c13f001.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c13f001.jpg)'
- en: '[**FIGURE 13.1**](#figureanchor13-1) Walk-Forward Results vs. Optimized Results,
    as Developed'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 13.1**](#figureanchor13-1) 向前走的结果与优化结果，按开发而成'
- en: I have mentioned it a few times, but you still might be wondering, “How do you
    know walk-forward analysis is more representative of future performance that the
    fully optimized test?” I claim this based on my experience. The current system
    is a good example of this performance difference. For the analysis just completed,
    here is how the optimized and walk-forward analysis performed from January 1,
    2010, to November 14, 2013\. As you can see in [Figure 13.2](#figure13-2), for
    the optimized case, the performance during the out-of-sample period 2010–2013
    was flat. It looks nothing at all like the optimized portion of the curve from
    2005 to 2009, where the average annual gain was approximately $10,000\. It is
    a different story for the walk-forward analysis, as depicted in [Figure 13.2](#figure13-2).
    The years 2010–2013 were flat for the walk-forward equity curve also, but it mimics
    the 2005–2009 walk-forward results. In other words, the performance of the walk-forward
    system did not change through the years—it was consistently flat to down most
    of the years.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 我提到过几次，但你可能仍在想，“你怎么知道向前走分析更能代表未来的表现，而不是完全优化的测试？”我根据我的经验声称这一点。当前系统就是这种性能差异的一个好例子。对于刚刚完成的分析，优化与向前走分析在2010年1月1日至2013年11月14日的表现如下。在[图
    13.2](#figure13-2)中可以看到，对于优化情况，2010–2013年样本外周期的表现是平坦的。它与2005到2009年优化部分的曲线毫无相似之处，后者的年均收益大约为$10,000。向前走分析的情况则大为不同，如[图
    13.2](#figure13-2)所示。2010–2013年的向前走收益曲线同样是平坦的，但它模仿了2005–2009年的向前走结果。换句话说，向前走系统的表现多年来并没有改变——大多数年份都是稳定的平坦或下滑。
- en: '![images](images/c13f002.jpg)'
  id: totrans-352
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c13f002.jpg)'
- en: '[**FIGURE 13.2**](#figureanchor13-2) Walk-Forward Results vs. Optimized Results,
    Before and After Development'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 13.2**](#figureanchor13-2) 向前走的结果与优化结果，开发前后'
- en: While one example does not make it a rule, in general this is the kind of performance
    you can expect from optimized back tests and walk-forward back tests. Optimized
    results, when applied to out of sample data, generally degrade. This is why so
    many people get frustrated with systems sold by unscrupulous vendors. These vendors
    show optimized results, and the performance in the future is almost never as good
    as the back test. Walk-forward results, however, should perform about the same
    throughout the whole test period. This is why many traders prefer walk-forward
    results. Walk-forward analysis tends to produce equity curves that are more stable
    going forward. Again, that is not a rule, but it is my experience that this is
    generally true.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然一个例子并不能成为规则，但一般来说，这就是你可以期待的优化回测和向前推进回测的表现。优化结果在应用于样本外数据时，通常会降低。这就是为什么许多人对那些不道德供应商出售的系统感到沮丧的原因。这些供应商展示优化结果，而未来的表现几乎从未与回测一样好。然而，向前推进的结果在整个测试期间应该保持大致相同。这就是许多交易者更喜欢向前推进结果的原因。向前推进分析往往会产生更稳定的权益曲线。再次强调，这不是规则，但根据我的经验，这通常是正确的。
- en: '![images](images/gbox.jpg) Walk-Forward Inputs'
  id: totrans-355
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 向前推进输入'
- en: 'If we are performing the analysis by hand, as described above, we must know
    the following parameters *before* we start the analysis:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们手动进行分析，如上所述，我们必须在开始分析之前知道以下参数：
- en: In period
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在期间
- en: Out period
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 出期间
- en: Fitness function
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适应度函数
- en: 'Method: anchored or unanchored'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方法：有锚或无锚
- en: In you are using software to perform the analysis (as I currently do), you do
    not necessarily have to know these values in advance. That is both a blessing
    and a curse. It is good because you only have to run the optimization once and
    not keep repeating the walk-forward analysis over and over. It is bad because
    these parameters can be optimized, just like any traditional input parameter in
    your strategy. It may not seem like an optimization, at least in the traditional
    sense, but if you, for example, look at two values of in period, and choose the
    one with better results, that is still optimizing. You want to make the decision
    before you do the analysis.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用软件进行分析（就像我现在所做的那样），你不一定需要提前知道这些值。这既是一个祝福也是一个诅咒。好处在于你只需运行一次优化，而不必反复进行向前推进分析。坏处在于这些参数可以被优化，就像你策略中的任何传统输入参数一样。这可能看起来不像传统意义上的优化，但例如，如果你查看在期间的两个值，并选择结果更好的那个，这仍然是优化。你希望在进行分析之前做出决定。
- en: Assuming you will be choosing the walk-forward inputs beforehand (we will examine
    an alternative method to this later), how do we choose values for each of them?
    A method for determining each value is described below.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你会提前选择向前推进输入（稍后我们将检查一种替代方法），那么我们该如何为每个输入选择值呢？以下描述了一种确定每个值的方法。
- en: In Period
  id: totrans-363
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在期间
- en: For the in period, the goal is to get enough trades to make a meaningful conclusion
    as to the best parameters to use for each period. It makes sense, then, to get
    a certain amount of trades per input variable in your in period. For example,
    if you have four inputs to optimize, then you might want 100 to 200 trades in
    your in period, which would be equivalent to 25 to 50 trades per input. Unfortunately,
    there is no set number of trades per input that is “best,” although many people
    say that 30 is a good number for statistical significance.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 对于在期间，目标是获得足够的交易，以便对每个期间使用的最佳参数得出有意义的结论。因此，在你的在期间中，每个输入变量应该有一定数量的交易。例如，如果你有四个需要优化的输入，那么你可能希望在在期间获得100到200笔交易，这相当于每个输入25到50笔交易。不幸的是，并没有固定的每个输入的“最佳”交易数量，尽管许多人认为30是一个具有统计显著性的好数字。
- en: Out Period
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 出期间
- en: As crazy as it sounds, I know people who do walk-forward analysis every day,
    which means their out period is one day. Personally, I think this is extreme,
    but who am I to argue if they are having success? There are a couple of factors
    at play in the selection of an out period. First, if you set the out period too
    big, you might only have one or two out periods for your walk-forward analysis,
    which means the test becomes similar to a single-period out-of-sample test. Second,
    if you set the out period too small, you will be conducting reoptimizations on
    a daily or weekly basis. This might not be sustainable given the limited time
    you likely have to develop and trade, if you have many systems to reoptimize.
    Knowing that there are boundaries to the out period, I generally set my out period
    to between 10 to 50 percent of the in period. So, if my in period is 1,000 days,
    my out period might be in the range of 100 to 500 days. This is a very wide range,
    but with robust systems you will generally see that the final results are not
    extremely sensitive to out period. A 100-day out period may very well perform
    about the same as a 500-day out period.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很疯狂，但我知道有人每天都进行前向分析，这意味着他们的外部周期是一天。就我个人而言，我认为这是极端的，但如果他们成功，我又有什么资格去争辩呢？在选择外部周期时，有几个因素在起作用。首先，如果你设置的外部周期太大，你可能只有一两个外部周期进行前向分析，这意味着测试类似于单周期的样本外测试。其次，如果你设置的外部周期太小，你将每天或每周进行重新优化。如果你有很多系统需要重新优化，这可能在有限的时间内是不可持续的。知道外部周期是有界限的，我通常将我的外部周期设置为内部周期的10%到50%之间。因此，如果我的内部周期是1000天，那么我的外部周期可能在100到500天之间。这是一个非常广泛的范围，但对于健壮的系统，你通常会看到最终结果对外部周期并不是特别敏感。100天的外部周期可能与500天的外部周期表现相似。
- en: '![images](images/gbox.jpg) Fitness Function'
  id: totrans-367
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 健身函数'
- en: Of all the parameters in walk-forward analysis, the fitness function is the
    most contentious. I’m sure that raucous debate by two developers over the fitness
    function has at some time resulted in physical violence (such dedication to the
    cause!). I don’t want to stir the pot by going into the pros and cons of various
    fitness functions, but I will tell you the ones I have had the most success with.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有的前向分析参数中，健身函数是最具争议的。我相信，两个开发者关于健身函数的激烈争论曾经导致过身体冲突（如此投入的态度！）。我不想通过讨论各种健身函数的利弊来激起争论，但我会告诉你我最成功的几种。
- en: Net Profit
  id: totrans-369
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 净利润
- en: 'For many people, this is the default choice, and it is a pretty good one. After
    all, without profit at the end of the test, all other parameters are meaningless.
    I personally use this fitness factor the most, since it is easy to understand
    and implement. But it does not take into account another important results: drawdown.
    My experience, however, has been that in general high net profit runs hand in
    hand with low maximum drawdown. If you decide drawdown is a must have, then one
    of the fitness function below should suit you.'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 对许多人来说，这是默认选择，而且这个选择相当不错。毕竟，如果测试结束时没有利润，所有其他参数都是无意义的。我个人使用这个健身因子最多，因为它易于理解和实施。但它没有考虑另一个重要结果：回撤。不过，根据我的经验，通常高净利润与低最大回撤是相辅相成的。如果你决定回撤是必须考虑的，那么下面的某个健身函数应该适合你。
- en: Linearity of Equity Curve
  id: totrans-371
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 资本曲线的线性
- en: 'Think for a minute of your ideal equity curve. The equity would go up every
    day, and it would be consistent. A real-world example is interest on a banking
    or money market account. Interest earned might be very small, but with a bank
    account, you make money every day, and there is never a day where you lose money.
    If only you could design a futures system that made money every day, with never
    a drawdown! A linear, upward-sloping equity curve is the ideal, and is a great
    parameter to optimize for. The problem is that, unless your software includes
    this fitness function as a set choice, it may be difficult in actual practice
    to actually optimize for it. Also, it may be difficult to implement in a nonanchored
    walk-forward test. Finally, this method of optimization may select very low net
    profit iterations as the optimum, since they may exhibit the most linearity. There
    are two potential problems with the low-profit cases: first, since there is not
    much profit, if you underestimate your slippage and commissions, you might actually
    be selecting a real-time losing strategy. Second, if the end result is very small
    average profit per trade, minor changes in the market may render your effective
    ineffective.'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你理想的权益曲线。权益每天都在上升，而且非常稳定。一个现实的例子是银行或货币市场账户的利息。获得的利息可能很小，但在银行账户中，你每天都能赚钱，永远不会有亏损的日子。如果你能设计一个每天都赚钱的期货系统，且从不出现回撤，那该多好！线性上升的权益曲线是理想的，也是一个很好的优化参数。问题是，除非你的软件将这个适应度函数作为选择之一，否则在实际操作中可能很难真正进行优化。此外，在没有锚定的前向测试中实现这一点可能也很困难。最后，这种优化方法可能会选择低净利润的迭代作为最佳，因为它们可能表现出最线性的特征。低利润案例存在两个潜在问题：首先，由于利润不多，如果你低估了滑点和佣金，可能会选择一个实时亏损的策略。其次，如果最终结果是每笔交易的平均利润非常小，市场的细微变化可能会使你的有效性受到影响。
- en: One big plus to using a linear equity curve as your optimization criteria is
    that it is very good for position sizing. Think about a strategy where your drawdowns
    are minimal and your profits are slow and steady. Such an approach would be ideal
    for aggressive position sizing.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 使用线性权益曲线作为优化标准的一个大优点是，它非常适合头寸规模的设定。想想一个策略，其中你的回撤很小，而利润则缓慢而稳定。这种方法对于积极的头寸规模设定是理想的。
- en: Return on Account
  id: totrans-374
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 账户回报
- en: 'If you explicitly use maximum drawdown in your fitness function, then return
    on account is a good option. Although some software packages vary in their definition,
    return on account is generally defined as:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在适应度函数中明确使用最大回撤，那么账户回报是一个不错的选择。虽然一些软件包的定义有所不同，账户回报通常被定义为：
- en: Return on Account = Net Profit/(Maximum Drawdown + Required Margin)
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 账户回报 = 净利润 / (最大回撤 + 所需保证金)
- en: Since required margin varies over time, many people just eliminate this from
    the calculation by assuming it is equal to zero or some other arbitrary value.
    As a fitness function, return on account is nice to use, since it takes into account
    both the profit, and the risk it took to get that profit. The biggest drawback
    to using it is that it can give wildly different results from period to period
    using unanchored walk-forward analysis.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所需保证金随着时间变化，许多人只是假设它等于零或某个其他任意值，从而将其从计算中排除。作为适应度函数，账户回报很好用，因为它考虑了利润和获取该利润所需的风险。使用它的最大缺点是，在使用非锚定的前向分析时，结果可能会在不同的时期产生巨大差异。
- en: '![images](images/gbox.jpg) Anchored/Unanchored'
  id: totrans-378
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 锚定/非锚定'
- en: 'One subtle aspect of walk-forward analysis is the optimization window. You
    can go one of two ways with this window: you can move it with time, or you can
    keep the start point anchored. [Figure 13.3](#figure13-3) shows the difference
    between these two approaches.'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 前向分析的一个微妙方面是优化窗口。你可以选择两种方式来处理这个窗口：你可以随时间移动它，或者可以保持起点不变。[图 13.3](#figure13-3)展示了这两种方法的区别。
- en: '![images](images/c13f003.jpg)'
  id: totrans-380
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c13f003.jpg)'
- en: '[**FIGURE 13.3**](#figureanchor13-3) Anchored vs. Unanchored Walk-Forward Analysis'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 13.3**](#figureanchor13-3) 锚定与非锚定的前向分析'
- en: In general, the two methods will give similar results, especially at the beginning
    of the analysis. But as time goes on, the results will tend to diverge. This is
    because the anchored walk-forward is always taking into account results over the
    whole data set, while the unanchored results include results for only the most
    recent window. There may be times where one is more appropriate than the other,
    but I tend to use the unanchored method much more. I like that approach, since
    it ensures that only the most recent data is included in the optimization. I don’t
    necessarily want results from 10 years ago still impacting my optimization results
    today.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，这两种方法会给出相似的结果，特别是在分析开始时。但随着时间的推移，结果会趋向分歧。这是因为锚定的前行分析始终考虑整个数据集的结果，而无锚结果仅包括最近窗口的结果。某些情况下，一个方法可能比另一个更合适，但我更倾向于使用无锚方法。我喜欢这种方法，因为它确保优化只包含最近的数据。我并不希望十年前的结果仍然影响我今天的优化结果。
- en: One point of caution with using unanchored data, with certain fitness functions,
    is that the results you get might be faulty, depending on your walk-forward analysis
    software. If you are using a manual method, this should not be a problem, but
    if you use software, make sure that the calculations are based on the start and
    end dates in question, not on difference in fitness functions during the period.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 使用无锚数据时，有些适应度函数需要谨慎，结果可能会有误，具体取决于你的前行分析软件。如果你使用手动方法，这不应该是问题，但如果使用软件，请确保计算是基于相关的开始和结束日期，而不是在此期间适应度函数的差异。
- en: A simple example explains it well. Suppose you have the optimized results shown
    in [Table 13.2](#table7-1).
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的例子很好地解释了这一点。假设你有在[表 13.2](#table7-1)中展示的优化结果。
- en: '[**TABLE 13.2**](#tableanchor7-1) Many Performance Metrics Are Not Additive'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表 13.2**](#tableanchor7-1) 许多绩效指标不是可加的'
- en: '| Optimization Period | Net Profit | Max Drawdown | Return on Account = Net
    Profit/ Max Drawdown |'
  id: totrans-386
  prefs: []
  type: TYPE_TB
  zh: '| 优化周期 | 净利润 | 最大回撤 | 账户收益率 = 净利润/最大回撤 |'
- en: '| --- | --- | --- | --- |'
  id: totrans-387
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Year 1 | $12,000 | $6,000 | 2.0 |'
  id: totrans-388
  prefs: []
  type: TYPE_TB
  zh: '| 年 1 | $12,000 | $6,000 | 2.0 |'
- en: '| Year 2 |   $6,000 | $4,000 | 1.5 |'
  id: totrans-389
  prefs: []
  type: TYPE_TB
  zh: '| 年份 2 |   $6,000 | $4,000 | 1.5 |'
- en: '| Year 1– Year 2 | $18,000 | $6,000 | 3.0 |'
  id: totrans-390
  prefs: []
  type: TYPE_TB
  zh: '| 年 1– 年 2 | $18,000 | $6,000 | 3.0 |'
- en: Note in this example that while net profit is additive (the net profit in year
    1 plus the net profit in year 2 equals the combined net profit for year 1 + year
    2), the maximum drawdown and return on account are not. Some walk-forward software
    packages may assume your fitness function is additive (like net profit), so make
    sure you understand how the software works when using unanchored results. Your
    analysis could be completely flawed depending on the fitness function you choose.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中请注意，虽然净利润是可加的（第一年和第二年的净利润之和等于第一年加第二年的总净利润），但最大回撤和账户收益率却不是。有些前行分析软件可能假设你的适应度函数是可加的（像净利润），所以在使用无锚结果时，确保你理解软件的工作原理。根据你选择的适应度函数，你的分析可能完全错误。
- en: '![images](images/gbox.jpg) Running the Analysis'
  id: totrans-392
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 运行分析'
- en: Once you have all your walk-forward inputs defined, you simply run the analysis
    manually as I have shown in the earlier example, or automatically with the software.
    Either way, in the end, you will have the completed walk-forward analysis and
    equity curve for your strategy. At this point, you have to compare the results
    to your goals and objectives. If the system passes, you of course go on to the
    next step. If it fails, theoretically you should discard the strategy and start
    with something different. In reality, of course, that is extremely difficult to
    do. You have already invested a great deal of time in preliminary testing and
    in-depth testing, and it seems a shame that you should just discard your work.
    This is especially true if the results are close to your goal. Maybe lowering
    the goal or making a small change to the strategy and rerunning walk-forward might
    be the path to success. Or does that just lead to more bad habits and decisions?
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你定义了所有的前行输入，就可以像我在之前的例子中展示的那样手动运行分析，或者用软件自动运行。无论哪种方式，最终你都会得到完整的前行分析和你的策略的收益曲线。此时，你需要将结果与目标和指标进行比较。如果系统通过，你当然可以进入下一步。如果它失败，理论上你应该放弃这个策略，开始一个不同的策略。然而，实际上，这样做极其困难。你已经在初步测试和深入测试上投入了大量时间，似乎很可惜就这样放弃你的工作。如果结果接近你的目标，这种感觉尤其强烈。也许降低目标或者对策略做一些小改动并重新进行前行分析可能是成功的路径。或者这只是导致更多的不良习惯和决策呢？
- en: In general, I normally would discard a strategy at this point, rather than compromise
    my goals or change my strategy. But sometimes I do one or both of these things.
    Occasionally, that turned out to be a good decision, but likely more often than
    not it did not work out well. Remember, the more you touch (test) historical data,
    the more likely you are to fit your system to the data. Plus, when you relax your
    standards, you end up with something you really did not want. When real money
    is on the line, this may become a major point of contention for your psyche—why
    continue to trade a currently losing system that you had doubts about in the first
    place?
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下，我会在这个时候放弃策略，而不是妥协我的目标或改变策略。但有时我会这样做其中之一或两者。偶尔，这可能是个好决定，但往往并没有那么顺利。记住，你越多地接触（测试）历史数据，你的系统就越可能适应数据。而且，当你放宽标准时，最终得到的东西可能并不是你真正想要的。当真正的资金受到影响时，这可能会成为你心理上的一个重大争论点——为什么继续交易一个你一开始就对其有疑虑的目前亏损系统？
- en: One common mistake during walk-forward analysis is to surreptitiously optimize
    the *in* and *out* periods. Say, for example, that you run the walk-forward analysis
    with four-year in period, and one-year out period. Walk-forward results for that
    case are good, but not great, so you think “maybe I should use four years in,
    with two years out.” That case is 200 percent better and meets all your goals,
    so you decide “that’s the combination to use. Let’s go!”
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 在前向走动分析中，一个常见错误是偷偷优化*进*和*出*期。例如，假设你以四年的进期和一年的出期运行前向走动分析。那种情况下的前向走动结果不错，但不算出色，所以你想：“也许我应该使用四年的进期和两年的出期。”那个案例好200％，并且满足了你所有的目标，因此你决定“这就是要使用的组合。走吧！”
- en: Stop.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 停止。
- en: 'Do you realize what just happened? As soon as you selected a second set of
    in/out parameters, reran the results, and selected the best case, you just optimized.
    Sure, it is not a full optimization, since you only compared two cases, but it
    was optimization nevertheless. Remembering the rule that optimized results can’t
    be trusted, you have a dilemma here: accept the first run (4 year/1 year), and
    then discard the strategy because it did not meet your goals, or accept the second
    run, and pretend you never optimized.'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 你意识到刚刚发生了什么吗？一旦你选择了第二组进出参数，重新运行结果并选择最佳案例，你就进行了优化。虽然这不是全面的优化，因为你只比较了两个案例，但仍然算是优化。记住优化结果不能被信任的规则，你在这里面临一个两难选择：接受第一次运行（4年/1年），然后因为未达到目标而放弃策略，还是接受第二次运行，并假装你从未优化过。
- en: Once again, I’ll admit to doing the above on occasion, although I can’t recall
    it ever ending well. The big question in all this is “is there a way to test multiple
    in/out periods, and select the best one, while still maintaining walk-forward
    integrity?” The answer, thankfully, is yes. The way to do it is to create, in
    essence, a second walk-forward analysis inside of the first. The way to do this
    is to run the walk-forward analysis, as usual, but leave the last few years of
    data untouched. I typically will leave three years untouched. Then, with the walk-forward
    data I have, I select the best in/out pair I have, and then run it on the last
    three years of data. If it passes, then I go on to the next step. If it doesn’t,
    I discard the strategy. But, in either case, at least I have made some effort
    to select the best in/out combination. The downside to this approach is that you
    have optimized, and the more optimization you do, the worse off you generally
    are.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 我再次承认偶尔会这样做，尽管我不记得这曾有过好的结果。关键问题是“有没有办法测试多个进出期，并选择最佳的，同时保持前向走动的完整性？”答案幸运的是，是有的。做法本质上是在第一次分析内部创建第二次前向走动分析。具体做法是按常规运行前向走动分析，但保留最后几年的数据。我通常会保留三年的数据不动。然后，利用我拥有的前向走动数据，我选择最佳的进出组合，然后在最后三年的数据上运行。如果通过了，我就进入下一步。如果没有，我就放弃该策略。但在任何情况下，至少我已经努力选择了最佳的进出组合。这个方法的缺点是你进行了优化，而你越是进行优化，通常情况会越糟。
- en: 'This process would look like this:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程看起来是这样的：
- en: 1\. Years 2000–2008 >> run walk-foward analysis for different combinations of
    in/out periods, select the best in/out.
  id: totrans-400
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1\. 2000年至2008年 >> 运行不同的进出期组合的前向走动分析，选择最佳的进出组合。
- en: 2\. Years 2009–present >> run walk-forward analysis, using best in/out determined
    from Step 1.
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2\. 2009年至今 >> 运行前向走动分析，使用第一步确定的最佳进出组合。
- en: 3a. If walk-forward results from 2009–present look good, continue with development.
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3a. 如果2009年至今的前向走动结果良好，继续开发。
- en: 3b. If results do not look good, it is probably best to abandon strategy, rather
    than try again with another in/out pair.
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3b. 如果结果不佳，最好放弃该策略，而不是尝试另一个进出对。
- en: '[Figure 13.4](#figure13-4) depicts the approach of optimizing in/out periods,
    compared to a traditional walk-forward analysis.'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '[图13.4](#figure13-4)描绘了优化进出期的方法，与传统的前向分析相比。'
- en: '![images](images/c13f004.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c13f004.jpg)'
- en: '[**FIGURE 13.4**](#figureanchor13-4) Walk-Forward Test, Inside Another Walk-Forward
    Test'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图13.4**](#figureanchor13-4) 前向测试，嵌套在另一个前向测试中'
- en: '![images](images/gbox.jpg) Put the Walk-Forward Strategy Together'
  id: totrans-407
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 整合前向策略'
- en: 'Once you have completed the walk-forward analysis, analyzed the results, and
    found that your results compare favorably to your objectives, you are almost ready
    for the next step. There is just one more check to run, and that is with the completed
    walk-forward history strategy. The difference between the walk-forward history
    strategy and the optimizable strategy is shown next:'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了前向分析，分析了结果，并发现结果与目标相比相当良好，你就快准备好下一步了。只需再进行一次检查，那就是使用完成的前向历史策略。前向历史策略与可优化策略之间的区别如下：
- en: '**Optimizable Strategy**'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '**可优化策略**'
- en: '[PRE2]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Walk-Foward History Strategy**'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: '**前向历史策略**'
- en: '[PRE3]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The strategy with the walk-forward history changes the variables based on the
    date. In this way, you will have a seamless history for your strategy to run;
    you will not have to cut and paste results together to create the walk-forward
    history.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前向历史的策略根据日期改变变量。这样，你将拥有无缝的历史记录来运行你的策略；你不需要剪切和粘贴结果来创建前向历史。
- en: Note that the results you get from this strategy might be different from the
    results of a piece-by-piece analysis method. This is especially true for swing
    strategies that last for days or weeks. The reason this is so is that, based on
    the walk-forward parameters, variables might change in the middle of a trade,
    causing trades to be exited or reversed. To see if this is important for your
    strategy, then, it becomes critical to create a stand-alone walk-forward history
    strategy.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，你从该策略获得的结果可能与逐个分析方法的结果不同。这在持续数天或数周的波段策略中特别明显。之所以如此，是因为根据前向参数，变量可能在交易中途发生变化，导致交易被退出或反转。要查看这对你的策略是否重要，因此，创建一个独立的前向历史策略变得至关重要。
- en: CHAPTER 14
  id: totrans-415
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章
- en: Monte Carlo Analysis and Incubation
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 蒙特卡洛分析与孵化
- en: Once you have the walk-forward strategy set up, and you are satisfied with the
    results, it is time to evaluate the strategy in a Monte Carlo simulation. This
    is an important step because random simulations may show dramatically different
    profits and drawdown. It may be that the way the historical trades lined up, the
    maximum drawdown was very small. But since history isn’t likely to repeat itself,
    it is important to see what type of maximum drawdown you could possibly incur
    trading this strategy.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置了前向策略，并对结果满意，就该在蒙特卡洛模拟中评估该策略。这是一个重要步骤，因为随机模拟可能显示出截然不同的利润和回撤。历史交易的排列方式可能使最大回撤非常小。但由于历史不会重复，查看交易该策略时可能遭受的最大回撤类型非常重要。
- en: As stated earlier in Chapter 7, I use an Excel spreadsheet to do the Monte Carlo
    analysis. You can download this tool for yourself at the book resource web site
    ([www.wiley.com/go/algotradingsystems](http://www.wiley.com/go/algotradingsystems)).
    There are also numerous free and paid Monte Carlo simulators available on the
    Internet, should you choose to go that route. One good free simulator is Equity
    Monaco by NeoTick ([equitymonaco.software.informer.com/](http://equitymonaco.software.informer.com/)).
    A good pay tool is @Risk ([www.palisade.com/](http://www.palisade.com/)). All
    of these choices will give you the same basic results, and you might prefer the
    presentation of results and capabilities of one over the other. The key is to
    get simulation results that you can base your decision on.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 正如第7章之前所述，我使用Excel电子表格进行蒙特卡洛分析。你可以在书籍资源网站上下载这个工具 ([www.wiley.com/go/algotradingsystems](http://www.wiley.com/go/algotradingsystems))。网上还有许多免费的和付费的蒙特卡洛模拟器，如果你选择这种方式。一个不错的免费模拟器是NeoTick的Equity
    Monaco ([equitymonaco.software.informer.com/](http://equitymonaco.software.informer.com/))。一个好的付费工具是@Risk
    ([www.palisade.com/](http://www.palisade.com/))。所有这些选择将给你相同的基本结果，你可能更喜欢某个工具的结果展示和功能。关键是获得可以作为决策基础的模拟结果。
- en: If you use the simulator spreadsheet I created, you simply copy trade results
    from your strategy performance report, paste them in the spreadsheet, enter your
    initial capital, quitting-point capital, and number of trades in a year, and then
    press calculate. The spreadsheet will calculate the simulated equity curves for
    2,500 iterations, and present you with summary results. These results will be
    based on one year of trading. Sample output of the spreadsheet was shown earlier
    in Figure 7.2\. I typically focus on the return to max drawdown ratio (ret/DD),
    and I like to see values above 2.0 for an acceptable strategy. Anything below
    2.0 suggests that the strategy is taking on too much risk for the reward attained
    and might not be worth trading.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用我创建的模拟电子表格，只需从你的策略表现报告中复制交易结果，粘贴到电子表格中，输入你的初始资本、退出点资本和每年的交易次数，然后按计算。电子表格将计算2,500次迭代的模拟权益曲线，并向你提供摘要结果。这些结果将基于一年的交易。电子表格的示例输出在图7.2中显示过。我通常关注回报与最大回撤比率（ret/DD），我希望看到可接受策略的值高于2.0。低于2.0则表明该策略承担了过多风险，而获得的回报可能不值得交易。
- en: If you are proficient in writing macros in Excel, you can easily take the Monte
    Carlo spreadsheet I have created and modify it to suit your own needs. You could
    add position sizing, for example, or you could change which results are presented.
    In the end, the point of the simulation is to give you results that you can understand
    and interpret. I have told you what works for me; maybe that will work for you,
    but maybe you’ll think of something better.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你擅长编写Excel宏，可以轻松地使用我创建的蒙特卡罗电子表格，并根据自己的需要进行修改。你可以添加头寸规模，例如，或者更改呈现的结果。最终，模拟的目的在于给你提供可以理解和解释的结果。我告诉你什么对我有效；也许这对你有用，但也许你会想到更好的方法。
- en: '![images](images/gbox.jpg) Incubation'
  id: totrans-421
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 孵化'
- en: 'One of the most crucial steps in strategy development, in my opinion, is also
    the toughest psychologically to implement. Before I discuss this last step, let’s
    review where we have been in the strategy development process:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，策略开发中最关键的步骤之一，也是心理上最难以实施的步骤。在讨论这最后一步之前，让我们回顾一下我们在策略开发过程中所走的路：
- en: We have established goals and objectives for our completed strategy and also
    goals for the steps along the way. In this manner, we can quickly eliminate strategies
    before spending too much time on them.
  id: totrans-423
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们为完成的策略设定了目标和目的，并为各个步骤设定了目标。通过这种方式，我们可以快速排除策略，以避免花费太多时间。
- en: We have developed a trading idea for our strategy that we feel has an edge.
    We have also defined the market, time frame, and other important factors for our
    testing.
  id: totrans-424
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们为我们的策略制定了一个我们认为有优势的交易想法。我们还定义了市场、时间框架和其他重要因素，以便进行测试。
- en: We have performed limited testing with the strategy, and we are happy with the
    results. We believe we might have an edge.
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们对该策略进行了有限测试，并对结果感到满意。我们相信我们可能有优势。
- en: We have conducted in-depth testing, using walk-forward testing if possible.
    Again, we are happy with the performance results obtained.
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们进行了深入测试，尽可能使用步进测试。再次强调，我们对获得的表现结果感到满意。
- en: We have performed Monte Carlo testing, to help us establish probabilities for
    the strategy performance and also to give us realistic future scenarios of performance.
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们进行了蒙特卡罗测试，以帮助我们确定策略表现的概率，并为我们提供现实的未来表现情景。
- en: These completed five steps represent a lot of work and likely caused us to discard
    tens or hundreds of strategies before finding success. To get through the last
    step, Monte Carlo testing, is certainly an accomplishment. When this happens,
    you likely will be so excited you will want to trade immediately! That, of course,
    would be the wrong thing to do. Incubation is the right thing to do.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 这五个完成的步骤代表了大量的工作，并且可能导致我们在找到成功之前丢弃了数十或数百个策略。完成最后一步，即蒙特卡罗测试，肯定是一项成就。当这一切发生时，你可能会感到非常兴奋，想要立即交易！当然，这将是错误的做法。孵化才是正确的做法。
- en: What exactly is incubation? Simply put, it is watching and waiting. With incubation,
    you wait three to six months before you start live trading. During this time,
    you occasionally monitor the performance of the strategy, as if it is another
    out-of-sample test period. I like to check on my incubated strategies once per
    month.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 孵化到底是什么？简单来说，就是观察和等待。通过孵化，你需要在开始真实交易之前等待三到六个月。在此期间，你偶尔会监控策略的表现，就像另一个样本外测试期。我喜欢每月检查一次我的孵化策略。
- en: 'Why is it important to incubate a strategy? Here are a few reasons:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么孵化策略很重要？以下是几个原因：
- en: When you finish Monte Carlo testing, you are at an emotional high. Your “baby”
    has survived and has a lot of promise. You have a lot of emotional capital invested
    in this strategy, as well as your time and effort. You want it to succeed. You
    may even *need* it to succeed. Of course, this leads to a fragile emotional state.
    If you immediately start trading it with real money, you might not think clearly
    if things start out bad for the strategy, as so often seems to happen. This could
    lead you to quit the strategy early, or worse yet, haphazardly increase size when
    performance starts out bad (“doubling down”).
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你完成蒙特卡罗测试时，你会感到情绪高涨。你的“宝贝”存活下来，并充满潜力。你在这个策略上投入了大量的情感资本，以及你的时间和精力。你希望它成功，甚至可能*需要*它成功。当然，这导致了脆弱的情绪状态。如果你立即用真钱开始交易，一旦策略表现不佳，你可能会失去清晰的思维，这种情况常常发生。这可能导致你过早放弃策略，或者更糟的是，在表现不佳时胡乱增加规模（“加倍下注”）。
- en: By waiting for a while before live trading, you will forget about the blood,
    sweat, and tears you expended to create the strategy, and you will look at it
    more objectively. If it passes incubation, great—but if it doesn’t, you won’t
    be distraught. Remember, short-term hardship is sometimes the price for long-term
    success, and that definitely holds true with trading systems.
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在实时交易之前等待一段时间，你会忘记为创建策略付出的心血和泪水，从而更客观地看待它。如果它通过了孵化，太好了——但如果没有，你不会感到沮丧。记住，短期的困难有时是长期成功的代价，这在交易系统中绝对适用。
- en: As I have shown, the system development process is difficult and complicated.
    There are probably a thousand different mistakes you can make along the way. Some
    can be blatant, like overoptimizing, while others may be subtle, such as using
    hindsight bias to develop your strategy rules. The point is that, because of development
    mistakes, there can be no way to know for sure if you have done something wrong
    until you test your strategy on live, unseen data. Major mistakes will show up
    in live results almost immediately, and by keeping your cash on the sidelines
    during this period, you will save a great deal of money.
  id: totrans-433
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正如我所展示的，系统开发过程既困难又复杂。在这个过程中，你可能会犯下千百种不同的错误。有些错误可能显而易见，比如过度优化，而另一些可能微妙，比如使用事后偏见来制定你的策略规则。关键是，由于开发中的错误，在你在实时、未见的数据上测试策略之前，没有办法确切知道你是否做错了。重大错误几乎会在实时结果中立即显现，而在这一时期将现金闲置，你将节省大量资金。
- en: Incubating gives you a chance to see how a strategy performs in real time. You
    may find out that you do not like the strategy, even if it makes money. For example,
    maybe your strategy sells every pivot high. In historical back testing, that may
    not bother you. But in real time, watching your strategy fight every market high
    might not be your cup of tea. It is far better to realize that now, rather than
    after you commit money to trading it.
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 孵化给你机会看到策略在实时中的表现。你可能会发现，即使策略赚钱，你也不喜欢它。例如，也许你的策略在每个反转高点卖出。在历史回测中，这可能不会让你烦恼。但在实时中，看着你的策略在每个市场高点抗争，可能并不是你的菜。现在意识到这一点，远比在你投入资金后要好得多。
- en: I generally perform incubation without real money. This is because, over time,
    I have concluded that the way I place orders, the bar types I use, and so on all
    can be fairly well replicated by the strategy back-test engine. There are times,
    however, where you may want to commit real money on a small scale. For example,
    if your strategy relies on limit orders for entries, you may want to test with
    real money to ensure that your fills match strategy engine fills. With some software
    packages, this might not be the case. Also, if you use exotic bar types, back-test
    results and real-money results can be totally different. You might need a live
    real-money test to check this, but once you confirm an issue, you will be able
    to avoid those bar types in later strategies. Sometimes the only way to see if
    a back test is accurate is by testing the strategy with real money.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常在没有真钱的情况下进行孵化。这是因为，随着时间的推移，我得出的结论是，我下单的方式、使用的柱形类型等都可以被策略回测引擎很好地复制。然而，有时你可能会希望在小规模上投入真钱。例如，如果你的策略依赖于限价单进行入场，你可能希望用真钱测试，以确保你的成交匹配策略引擎的成交。在某些软件包中，情况可能并非如此。此外，如果你使用特殊的柱形类型，回测结果和真实交易结果可能会完全不同。你可能需要进行实时的真钱测试来检查这一点，但一旦确认问题，你就能够在以后的策略中避免这些柱形类型。有时，检验回测是否准确的唯一方法是用真钱测试策略。
- en: 'As I mentioned, I normally do not need to perform real-money testing during
    incubation. One reason is that I avoid back tests that show or contain the following:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 如我所提到的，我通常在孵化过程中不需要进行真实资金测试。一个原因是我避免那些显示或包含以下内容的回测：
- en: Any buy fills at the low of a bar or sell fills at the high of a bar. Rare will
    be the day this occurs in real life, but many unscrupulous system vendors and
    naive developers develop strategies that frequently show this phenomenon.
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在K线低点的买入成交或在K线高点的卖出成交。这在现实生活中很少发生，但许多不道德的系统供应商和天真的开发者会开发出频繁显示这一现象的策略。
- en: Limit orders that fill when price is touched. On occasion, maybe 0 to 30 percent
    of the time, you will get filled at your limit price, when it is just touched.
    Most of the time, though, the price has to penetrate your price to guarantee a
    fill.
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当价格被触及时成交的限价单。偶尔，也许在0到30%的情况下，你会在价格刚被触及时以限价成交。但大多数情况下，价格必须穿透你的价格才能保证成交。
- en: Any exotic bars, such as Renko, Kase, and even point-and-figure. Due to the
    way the bars are built from history, your strategy fills many times cannot be
    believed. Better to just avoid these bars, except for real-time discretionary
    trading.
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何异型K线，如Renko、Kase，甚至点数图。由于这些K线是根据历史构建的，你的策略成交很多时候是不可相信的。最好避免这些K线，除了在实时自由裁量交易中。
- en: Strategies that exit on same bar as entry or that have stops and targets so
    tight that a profit and loss exit could occur on the same bar. My experience is
    that it is easy to trick a strategy engine, even with tick data, when exits or
    entry and exits occur on the same bar. This is due to the assumptions the strategy
    engine must make regarding price travel. Usually, the results will be overly optimistic
    when compared to real live trading.
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略在同一根K线的入场和出场，或者止损和目标设置得如此紧凑，以至于在同一根K线上可能会发生盈亏出场。我的经验是，当出场或入场与出场发生在同一根K线时，欺骗策略引擎是很容易的，即使是使用逐笔数据。这是由于策略引擎必须对价格波动做出的假设。通常，与真实交易相比，结果会显得过于乐观。
- en: '![images](images/gbox.jpg) Evaluating Incubation'
  id: totrans-441
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 评估孵化'
- en: My goals with incubation are to give me reasonable assurance that I made no
    major mistakes during development, to remove my emotions from the process, and
    also to see if real-time performance is appealing enough to trade. Later in this
    book, I’ll share some techniques I use to see if these goals are indeed met.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 我对孵化的目标是让我有合理的保证，确保我在开发过程中没有重大错误，消除我在过程中的情绪，同时还要看看实时表现是否足够吸引人以进行交易。在本书后面，我会分享一些我用来检查这些目标是否确实达到的技巧。
- en: CHAPTER 15
  id: totrans-443
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第15章
- en: Diversification
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 多样化
- en: As you progress through the trading system development process numerous times,
    you’ll start to realize that you have an algorithmic strategy factory on your
    hands. Raw material comes in the door as strategy ideas for entry and exit. Machines,
    such as limited testing, walk-forward testing, and Monte Carlo simulation, work
    on your ideas and either shape it into a better product, or tear it to shreds.
    At the end of your factory, you end up with trading systems you can trade or garbage
    destined for the scrap heap. If you do this over and over, you’ll create a lot
    of garbage, but you’ll also have a stack of strategies to trade. That’s where
    diversification can be a big contributor.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你多次推进交易系统开发过程，你会开始意识到你手中有一个算法策略工厂。原材料以入场和出场的策略构思进来。机器，如有限测试、步行前进测试和蒙特卡罗模拟，会处理你的构思，要么将其塑造成更好的产品，要么将其撕得粉碎。在你的工厂末尾，你最终得到的是可以交易的交易系统或注定要报废的垃圾。如果你反复这样做，你会产生大量的垃圾，但也会有一堆可以交易的策略。这就是多样化可以大有作为的地方。
- en: I’m sure you’ve heard the old saw, “Put your eggs in one basket, then watch
    that basket!” In trading, this would be analogous to finding one trading system
    (the basket) and then putting all your money (eggs) into it. That is great if
    it works. I’m sure there are traders out there who concentrate on trading one
    system. I’m not one of them, though, and I do not recommend that you try to be
    one either. Why not? Well, the simple fact is that trading systems fail, and very
    few, if any, trading systems last forever. In addition, all trading systems go
    through drawdowns, and sometimes they recover and sometimes they don’t. Do you
    really want your money tied to the fortunes (or misfortunes) of one trading strategy?
    I sure don’t!
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信你听过那句老话：“把你的鸡蛋放在一个篮子里，然后看好那个篮子！”在交易中，这就像找到一个交易系统（那个篮子），然后把所有的钱（鸡蛋）都放进去。如果它有效，那当然很好。我相信有些交易者专注于交易一个系统，但我不是其中之一，也不推荐你试图成为这样的人。为什么呢？简单的事实是，交易系统会失败，很少有交易系统能永远存在。此外，所有交易系统都会经历回撤，有时它们会恢复，有时则不会。你真的想让你的钱与一个交易策略的运气（或厄运）绑定在一起吗？我可不想！
- en: 'To get around this issue, I take the opposite approach and use diversification.
    Instead of one basket (trading system), I spread my capital among numerous, uncorrelated
    trading systems. In effect, I have many baskets, and although it takes more effort
    to watch and track each basket, the benefits are clear:'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 为了绕过这个问题，我采取相反的方法，使用多元化。与其只用一个篮子（交易系统），不如把我的资本分散到多个不相关的交易系统中。实际上，我有许多篮子，虽然需要更多的精力来观察和追踪每个篮子，但好处显而易见：
- en: '*Less worry about a system’s failing.* When you trade one system, you are at
    the mercy of that system or the approach behind the system. If you have a trend-following
    approach and the market goes flat for a few years, you will be in drawdown until
    the market starts to trend. When you trade multiple systems with different styles,
    it is very likely that your countertrend systems will do good when your trend
    systems do bad, and vice versa.'
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*减少对系统失败的担忧。* 当你交易一个系统时，你就要受到该系统或其背后方法的制约。如果你采用趋势跟随的方法，而市场在几年内处于平盘状态，你将处于回撤状态，直到市场开始趋势。当你用不同风格的多个系统进行交易时，你的反趋势系统在趋势系统表现不佳时很可能会表现良好，反之亦然。'
- en: '*Fewer fill issues.* In trading one system, as your capital grows, so will
    your trading size. Eventually, your size will become large enough to affect your
    fills. Even trading 10 contracts in gold, for example, is enough that any stop-loss
    orders you have will likely experience a few extra ticks of slippage as your 10
    lot gets filled. However, if you trade numerous systems, your size on any one
    trade will be smaller, making fills less of an issue.'
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更少的成交问题。* 在交易一个系统时，随着资本的增长，你的交易规模也会增加。最终，你的规模会大到影响你的成交。例如，在黄金交易中，即使交易10手，你的止损订单可能会经历几次额外的滑点。然而，如果你交易多个系统，任何一次交易的规模都会较小，从而使成交问题减少。'
- en: '*Smoother equity curve.* When you diversify correctly, you will have different
    styles, different markets, and different time frames with your trading systems.
    These differences come together to produce a smoother equity curve, many times
    reducing drawdown, and almost always reducing overall volatility.'
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*更平滑的权益曲线。* 当你正确地进行多元化时，你将拥有不同的风格、不同的市场和不同的时间框架。这些差异结合在一起，产生更平滑的权益曲线，许多时候减少回撤，几乎总是降低整体波动性。'
- en: Diversification, done properly, is probably the closest thing I’ve ever seen
    to the so-called trading “Holy Grail.” The tricks behind diversification are then
    (1) how to design systems with diversification in mind and (2) how to measure
    that you actually have diversification. I’ll discuss each of these topics in this
    chapter.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 合理的多元化可能是我见过的最接近所谓交易“圣杯”的东西。多元化背后的技巧是（1）如何设计以多元化为目标的系统，以及（2）如何衡量你是否真正拥有多元化。我将在本章中讨论这两个主题。
- en: '![images](images/gbox.jpg) Designing with Diversification in Mind'
  id: totrans-452
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 以多元化为设计理念'
- en: In the next section, I describe simple ways to measure diversification, but
    I use these measures after the fact, not during the design process. This is because
    it is difficult to look at a trading system, identify its weak points, and then
    design a second complementary system to smooth the first one. It can be done,
    but I think that is the tough way. I take a much simpler approach, and it seems
    to work quite well.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我将描述一些简单的方法来衡量多样化，但我在事后使用这些衡量标准，而不是在设计过程中。这是因为很难查看一个交易系统，识别其弱点，然后设计一个第二个互补系统来平滑第一个系统。这是可以做到的，但我认为这是困难的方式。我采取了更简单的方法，并且似乎效果很好。
- en: 'If you look back at the initial stages of strategy development, you’ll recall
    that we identify certain characteristics of the system we are trading:'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你回顾策略开发的初始阶段，你会记得我们识别了我们交易系统的某些特征：
- en: Market
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 市场
- en: Bar type/size
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 柱类型/大小
- en: Any custom time sessions
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何自定义时间段
- en: Entry
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进入
- en: Exit
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 退出
- en: As it turns out, taking an initial strategy and varying a couple of these strategy
    characteristics will likely produce an uncorrelated system. It becomes as simple
    as doing something different with your trading idea!
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，采取初始策略并改变这些策略特征中的几个，可能会产生一个不相关的系统。这变得简单，就像用你的交易想法做一些不同的事情！
- en: A good example of this is with the two euro futures strategies I design in Part
    IV of this book. Although the market traded is exactly the same, I altered the
    bar size (105-minute bars versus 60-minute bars), the time session (one strategy
    trades at night, the other during the day), the entries (completely different
    entries for each strategy) and exits (different exits, where one system strives
    for small profits, and the other goes for outsized gains). These change cause
    completely different system behavior, leading to different results, and consequently
    diversification.
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的例子是我在本书第四部分设计的两个欧元期货策略。尽管交易的市场完全相同，但我改变了柱的大小（105分钟柱与60分钟柱）、时间段（一个策略在夜间交易，另一个在白天）、进入（每个策略的进入完全不同）和退出（不同的退出，其中一个系统追求小利润，而另一个则追求超额收益）。这些变化导致完全不同的系统行为，进而产生不同的结果，因此实现了多样化。
- en: '![images](images/gbox.jpg) Measuring Diversification'
  id: totrans-462
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 衡量多样化'
- en: Once we have two or more systems, how do we check that trading these two systems
    actually increase diversification? I generally use four methods to check.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有两个或更多系统，我们如何检查这两个系统的交易是否确实增加了多样化？我通常使用四种方法进行检查。
- en: Daily Return Correlation
  id: totrans-464
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每日收益相关性
- en: 'With this method, you simply run a correlation analysis in Excel on the daily
    returns of each system. For intraday systems, you could run the analysis on shorter
    time period bars, such as hourly. When I use daily results, I generally check
    the correlation over the entire history, and then over six-month to one-year periods.
    This analysis can easily be performed in Excel. I take the daily strategy results
    for each strategy, plot one as X and one as Y, and calculate the R² correlation
    coefficient. The lower the correlation coefficient, the better the diversification.
    If in all cases the correlation is much less than 1.0, I can safely assume the
    correlation is low, and therefore the diversification is high. One caveat, though:
    because of the fact that the longer term correlation is low does not mean that
    the systems will never be correlated. There could be weeks or months where the
    results are highly correlated. If you are aggressive with position sizing, you
    need to be extra careful—strategies that you assume are not correlated can suddenly
    become correlated and, instead of reducing your risk, may actually amplify it.
    A good example of this occurred during the financial crisis of 2008, where heretofore
    uncorrelated markets and approaches suddenly all moved in lockstep. Diversification
    might not help you much in periods of crisis.'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法，你只需在Excel中对每个系统的每日收益进行相关性分析。对于日内系统，你可以在较短时间段的柱子上运行分析，比如每小时。当我使用每日结果时，我通常检查整个历史期间的相关性，然后是六个月到一年的期间。这种分析可以很容易地在Excel中进行。我将每个策略的每日结果绘制成X和Y，并计算R²相关系数。相关系数越低，说明多样化越好。如果在所有情况下，相关性远低于1.0，我可以放心地假设相关性很低，因此多样化很高。不过，有一个警告：长期相关性低并不意味着系统永远不会相关。可能会有几周或几个月的结果高度相关。如果你在头寸大小上采取激进策略，你需要格外小心——你认为不相关的策略可能会突然变得相关，从而可能不仅无法降低风险，反而可能加大风险。一个很好的例子发生在2008年的金融危机中，当时之前不相关的市场和方法突然齐头并进。在危机时期，多样化可能对你帮助不大。
- en: Linearity of Equity Curve
  id: totrans-466
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 权益曲线的线性
- en: As I have stated previously, a perfectly linear equity curve is the ideal curve
    for a trading system. It is also a terrific way to measure the diversification
    effect. All you have to do is take the strategy’s equity curve, run a linear regression
    on it (which can be done in Excel), and report the correlation coefficient R²
    value. An R² value of 1 is ideal, as it represents a perfectly linear equity curve.
    An example of this measurement is shown in [Table 15.1](#table15-1) for the euro
    systems, which are discussed in later chapters. As you can see, the R² value for
    the combined equity is better than the R² for each of the pieces. Thus, combining
    these strategies into one system provides diversification, resulting in a smoother
    equity curve.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前所述，完美线性的权益曲线是交易系统的理想曲线。这也是衡量多样化效果的绝佳方法。你只需获取策略的权益曲线，对其进行线性回归（可以在Excel中完成），并报告相关系数R²值。R²值为1是理想的，因为它代表了完美的线性权益曲线。在后面的章节中讨论的欧元系统中，示例的测量结果见于[表15.1](#table15-1)。如你所见，组合权益的R²值优于各个部分的R²。因此，将这些策略组合成一个系统提供了多样化，导致了更平滑的权益曲线。
- en: '[**TABLE 15.1**](#tableanchor15-1) Using Correlation Measures for Diversification
    Check'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表15.1**](#tableanchor15-1) 使用相关性测量进行多样化检查'
- en: '| Strategy | R² Correlation Coefficient |'
  id: totrans-469
  prefs: []
  type: TYPE_TB
  zh: '| 策略 | R²相关系数 |'
- en: '| --- | --- |'
  id: totrans-470
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Euro night | 0.9370 |'
  id: totrans-471
  prefs: []
  type: TYPE_TB
  zh: '| 欧元夜 | 0.9370 |'
- en: '| Euro day | 0.9745 |'
  id: totrans-472
  prefs: []
  type: TYPE_TB
  zh: '| 欧元日 | 0.9745 |'
- en: '| Euro day + night | 0.9817 |'
  id: totrans-473
  prefs: []
  type: TYPE_TB
  zh: '| 欧元日 + 夜 | 0.9817 |'
- en: Maximum Drawdown
  id: totrans-474
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最大回撤
- en: Another way to measure the impact of diversification is through the maximum
    drawdown. Although trading multiple systems might not always lead to a reduced
    maximum drawdown, especially on an absolute basis, many times it does. This is
    easy to check if you have the equity curve for each system and the combined system.
    This is shown in [Table 15.2](#table15-2) for the euro systems.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 衡量多样化影响的另一种方法是通过最大回撤。尽管交易多个系统可能并不总是导致绝对回撤的减少，但许多情况下确实如此。如果你拥有每个系统和组合系统的权益曲线，这一点很容易检查。这在[表15.2](#table15-2)中展示了欧元系统。
- en: '[**TABLE 15.2**](#tableanchor15-2) Utilizing Drawdown for Diversification Check'
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表15.2**](#tableanchor15-2) 利用回撤进行多样化检查'
- en: '| Strategy | Maximum Drawdown |'
  id: totrans-477
  prefs: []
  type: TYPE_TB
  zh: '| 策略 | 最大回撤 |'
- en: '| --- | --- |'
  id: totrans-478
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Euro night | $3,008 |'
  id: totrans-479
  prefs: []
  type: TYPE_TB
  zh: '| 欧元夜 | $3,008 |'
- en: '| Euro day | $3,523 |'
  id: totrans-480
  prefs: []
  type: TYPE_TB
  zh: '| 欧元日 | $3,523 |'
- en: '| Euro day + night | $3,265 |'
  id: totrans-481
  prefs: []
  type: TYPE_TB
  zh: '| 欧元日 + 夜 | $3,265 |'
- en: In this case, the drawdown for the combined system is in between that of the
    euro day and euro night systems. This makes it a bit unclear as to whether diversification
    is occurring. But once we look at reward relative to risk, the answer is clear.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，组合系统的回撤介于欧元日和欧元夜系统之间。这使得多样化是否发生变得有些不清晰。但一旦我们查看相对风险的回报，答案就明确了。
- en: Monte Carlo, Return/Drawdown
  id: totrans-483
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 蒙特卡洛，收益/回撤
- en: Since measuring the drawdown by itself doesn’t always give a clear answer, I
    use Monte Carlo analysis to see whether the combined system is better on a risk-adjusted
    basis. I measure this by looking at the annual percentage return divided by the
    max percentage drawdown. Higher values mean that I am getting more reward for
    my risk. I also look at the probability of making money in a year for confirmation.
    When I run this analysis, the results are clear (see [Table 15.3](#table15-3)).
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 由于单独测量回撤并不总是给出明确的答案，我使用蒙特卡洛分析查看组合系统在风险调整后的表现是否更佳。我通过查看年百分比收益与最大百分比回撤的比率来衡量这一点。较高的值意味着我为风险获得了更多的回报。我还查看一年的盈利概率以作确认。当我运行此分析时，结果非常明确（见[表15.3](#table15-3)）。
- en: '[**TABLE 15.3**](#tableanchor15-3) Using Return/Drawdown and Probability of
    Profit for Diversification Check'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '[**表15.3**](#tableanchor15-3) 使用收益/回撤和盈利概率进行多样化检查'
- en: '| Strategy | Return/Drawdown | Probability of Profit in One Year |'
  id: totrans-486
  prefs: []
  type: TYPE_TB
  zh: '| 策略 | 收益/回撤 | 一年内盈利概率 |'
- en: '| --- | --- | --- |'
  id: totrans-487
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Euro night | 2.2 | 89% |'
  id: totrans-488
  prefs: []
  type: TYPE_TB
  zh: '| 欧元夜 | 2.2 | 89% |'
- en: '| Euro day | 5.2 | 97% |'
  id: totrans-489
  prefs: []
  type: TYPE_TB
  zh: '| 欧元日 | 5.2 | 97% |'
- en: '| Euro day + night | 6.7 | 98% |'
  id: totrans-490
  prefs: []
  type: TYPE_TB
  zh: '| 欧元日 + 夜 | 6.7 | 98% |'
- en: 'When looking at all the analysis results, note that the conclusion is pretty
    obvious: combining the two systems produces a smoother equity curve, smaller drawdown
    than the worst system by itself, a better return-to-risk ratio, and increased
    probability of profit. Clearly, diversification made the combined system better
    than each of its parts.'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看所有分析结果时，请注意结论非常明显：组合这两个系统产生了更平滑的权益曲线，相比于最糟糕系统单独表现出更小的回撤，更好的收益风险比以及更高的盈利概率。显然，多样化使组合系统优于其各部分。
- en: The really nice thing about this diversification technique is that it did not
    take any real mathematical effort to ensure that the systems were diversified.
    By simply taking care to make the strategies different, by some combination of
    different entries, exits, and other general parameters, diversification was practically
    ensured. This might not always be the case, but this is true enough of the time
    to make it a useful and simple technique.
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: 这个多样化技术的真正好处在于，它并没有耗费任何真正的数学努力来确保系统的多样化。通过仔细考虑使策略不同，结合不同的进出场和其他一般参数，多样化几乎是可以确保的。虽然这种情况并不总是如此，但在很多时候这确实是有效的，使其成为一种有用且简单的技术。
- en: One final benefit of diversification will help you increase the output of your
    strategy development factory. As I have shown, two good systems became a lot better
    by trading them together. Thus, it might mean that your individual system performance
    goals can be relaxed a bit, since diversification will later improve the performance.
    In this manner, you might be more successful creating many “decent” or “just good
    enough” strategies, rather than one “super-terrific” strategy. Since it is much,
    much easier to create good, but not great systems, you might get to your overall
    goal much more quickly by employing diversification.
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 多样化的一个最终好处将帮助你提高策略开发工厂的产出。正如我所展示的，两个优秀的系统通过共同交易变得更好。因此，这可能意味着你单个系统的绩效目标可以稍微放宽，因为多样化会在后期改善绩效。以这种方式，你可能在创建许多“不错”或“足够好的”策略时会更加成功，而不是只专注于一个“超级出色”的策略。因为创建良好的但不出色的系统要容易得多，因此通过采用多样化的方法，你可能更快实现你的总体目标。
- en: CHAPTER 16
  id: totrans-494
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第16章
- en: Position Sizing and Money Management
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 头寸规模和资金管理
- en: Up until this point I haven’t discussed position sizing or money management
    in any detail. That isn’t to say I don’t value it; I agree in large part with
    position-sizing guru and author Ralph Vince, who states that position sizing is
    one of the most important things in trading. The problem is some people take that
    view to the extreme, and believe that position sizing is the only thing that matters.
    That is simply not true. Use superb position sizing with a losing strategy, and
    you’ll still lose in the long run.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之前，我没有详细讨论头寸规模或资金管理。这并不是说我不重视这些问题；我在很大程度上同意头寸规模大师和作者拉尔夫·文斯的观点，他指出头寸规模是交易中最重要的事情之一。问题在于，有些人将这种观点推向极端，认为头寸规模是唯一重要的事情。这显然不是事实。使用出色的头寸规模管理搭配一个亏损的策略，你在长期内仍然会亏损。
- en: Many people have written books about position sizing and money management, and
    just like with general trading books, some are good and some are bad. The best
    ones I have found include Van Tharp’s *The Definitive Guide to Position Sizing*
    (Van Tharp Institute, 2013 [2nd ed.]) and the numerous books by Ralph Vince. Vince’s
    books are more mathematically based, and tough for inexperienced traders to understand
    and follow, but the underlying messages he puts forth are usually good ones. So
    in this chapter I won’t try to recreate the wheel; I’ll instead refer you to those
    authors for more in-depth information. In this chapter, I’ll discuss how I employ
    position sizing, both for a single system and on a portfolio level. But first,
    I’ll share with you my thoughts on general position-sizing issues.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人写过关于头寸规模和资金管理的书籍，就像一般的交易书一样，有些好，有些差。我发现最好的书包括范·萨普的*《头寸规模的权威指南*（范·萨普学院，2013年[第二版]）和拉尔夫·文斯的多本书籍。文斯的书籍更加数学化，对于没有经验的交易者来说难以理解和跟随，但他提出的基本观点通常都是正确的。因此在这一章中，我不会试图重新发明轮子；我会将你引导到那些作者那里，以获取更深入的信息。在这一章中，我将讨论如何进行头寸规模管理，既适用于单一系统，也适用于投资组合层面。但首先，我会与你分享我对一般头寸规模问题的看法。
- en: '![images](images/gbox.jpg) No Optimum Position Sizing'
  id: totrans-498
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 没有最佳头寸规模'
- en: In all my studies on position sizing, I have determined there is no optimum
    or one and only one correct way to position size, regardless of trading system.
    Some trading books out there claim that their unique method is the best, and then
    prove it to you through an example or two. This, of course, is bogus. For any
    given equity curve, you can try different position-sizing models and find one
    that is the best for that particular curve. But, you can’t then say that is the
    best way to position size for any system. A good case in point was a book written
    a while back (I will not mention the title) that developed a new position-sizing
    method. This method basically took more risk at the start of trading and, as the
    account grew, scaled back the position sizing. This works great when the equity
    curve does well at the beginning, which is what most of the book’s examples showed.
    What most people don’t know is that same author applied his “superb” method in
    real time and quickly blew out numerous accounts. This was likely because his
    account started out going down instead of up. So, don’t assume that a position-sizing
    method that works well with one trading system will work well with all trading
    systems.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 在我所有关于头寸大小的研究中，我已经确定，没有最佳或唯一正确的头寸大小方法，这与交易系统无关。一些交易书声称他们的独特方法是最好的，然后通过一两个例子证明这一点。当然，这种说法是虚假的。对于任何给定的收益曲线，你可以尝试不同的头寸大小模型，并找到最适合该特定曲线的模型。但是，你不能因此就说这是任何系统的最佳头寸大小方法。一个很好的例子是一本不久前出版的书（我不会提及书名），它开发了一种新的头寸大小方法。这种方法在交易开始时承担了更多风险，随着账户的增长，逐步缩减头寸大小。当收益曲线在开始时表现良好时，这种方法效果很好，而书中的大多数例子都是如此。然而，大多数人不知道的是，同一位作者在实时应用他的“卓越”方法时，迅速爆掉了多个账户。这很可能是因为他的账户一开始是下跌而不是上涨。因此，不要假设适用于一种交易系统的头寸大小方法在所有交易系统中都有效。
- en: '![images](images/gbox.jpg) Risk and Reward Are a Team'
  id: totrans-500
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 风险与收益是一个团队'
- en: Many people look for a magic position-sizing technique that provides extra reward,
    without any extra risk. In general, though, reward and risk go hand in hand—if
    you want more reward, you have to be willing to risk more. Where this gets a bit
    murky is in reviewing results. Based on the return and drawdown shown in an equity
    curve, it may look like you received a lot of extra reward (return) for no extra
    risk (drawdown). But you must remember that the risk taken at the start of the
    trade won’t show up in an equity curve. The risk is there; it was just never realized.
    No matter what the final results say, in the long run you’ll be better off assuming
    that when you want more reward, you have to be willing to risk more.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 很多人寻找一种神奇的头寸大小技术，能够在不增加任何额外风险的情况下提供额外收益。然而，通常情况下，收益与风险是相辅相成的——如果你想要更多的收益，就必须愿意承担更多的风险。审查结果时，这一点可能会变得有些模糊。根据收益曲线所示的回报和回撤，可能看起来你获得了很多额外的收益（回报），却没有承担额外的风险（回撤）。但你必须记住，交易开始时所承担的风险在收益曲线上并不会显现。风险是存在的，只是从未实现。无论最终结果如何，从长远来看，你最好假设，当你想要更多收益时，你必须愿意承担更多风险。
- en: '![images](images/gbox.jpg) Position Sizing Can Be Optimized'
  id: totrans-502
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 头寸大小可以优化'
- en: Many traders will develop a strategy, run it through all the development steps,
    and afterwards, test out 5 or 10 different position-sizing techniques, picking
    the best one. Many of these same people don’t realize that they have just optimized—not
    on a particular entry or exit parameter, but instead on the position-sizing method
    itself. Just as with optimizing trading strategies, just because one method was
    optimum on past data, it does not mean it will be optimum going forward. In fact,
    chances are it will not be the best. If you are dead set on testing different
    position-sizing techniques on a trading strategy, make sure you use Monte Carlo
    analysis. This will give you a much better indication as to which position-sizing
    method, if any, is better.
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: 很多交易者会制定策略，经过所有开发步骤后，再测试5到10种不同的头寸大小技术，选择最佳的。然而，许多人并没有意识到，他们刚刚优化的并不是特定的进场或出场参数，而是头寸大小方法本身。就像优化交易策略一样，过去的数据中某种方法表现最佳，并不意味着它在未来同样最佳。事实上，它很可能不会是最佳选择。如果你决心在交易策略上测试不同的头寸大小技术，请确保使用蒙特卡洛分析。这将更好地指示出哪种头寸大小方法（如果有的话）是更好的。
- en: '![images](images/gbox.jpg) Losing Systems Cannot Become Winners'
  id: totrans-504
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 亏损系统无法变成赢家'
- en: No matter what type of position-sizing approach you use, if your core trading
    strategy is a loser, no position-sizing method will save you. That is where it
    gets confusing, when certain trading gurus state that position sizing is all that
    matters. While they are espousing the importance of position sizing, they are
    not saying you can win with a losing system. If this idea was true, you would
    have more rich casino gamblers out there. No one, to my knowledge, has ever used
    position sizing to succeed long term in any casino game where they don’t have
    an edge. This doesn’t include cheating, or card counting, or any other method
    that gives you an advantage or edge. In those cases position sizing can help you
    immensely. If you have a terrible strategy, in the long run the choice of position-sizing
    technique is irrelevant; you will lose no matter how you size. Start with a strategy
    that gives you an edge, then apply position sizing.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你使用何种头寸规模方法，如果你的核心交易策略是失败者，那么没有任何头寸规模方法能够拯救你。这就变得令人困惑，当某些交易大师声称头寸规模是唯一重要的事情时。虽然他们宣扬头寸规模的重要性，但并没有说你可以用一个失败的系统获胜。如果这个想法是真的，那么外面就会有更多富有的赌场赌徒。据我所知，没人能通过头寸规模在任何没有优势的赌场游戏中长期成功。这不包括作弊、算牌或任何其他能让你获得优势的方法。在这些情况下，头寸规模可以对你大有帮助。如果你有一个糟糕的策略，从长远来看，头寸规模技术的选择是无关紧要的；无论你如何规模，你都将亏损。首先要有一个给你优势的策略，然后再应用头寸规模。
- en: '![images](images/gbox.jpg) Winning Systems Can Become Losers'
  id: totrans-506
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 胜利系统可能会变成失败者'
- en: 'You would think that since loser trading systems cannot become winning systems
    through position sizing, the opposite is also true: winning trading systems can
    never become losers when employing position sizing. Nothing, and I mean nothing,
    could be further from the truth. It is exceedingly easy to take a winning system,
    apply an overly aggressive or inappropriate position-sizing method, and still
    lose all your money. Over the years, I have seen many people do this. Most think
    that when they have a winning system, they must push “the pedal to the metal”
    and trade as aggressively as they can. Most of these same people crash in spectacular
    fashion during an inevitable future drawdown.'
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会认为，由于失败的交易系统无法通过头寸规模变成成功的系统，反之亦然：成功的交易系统在采用头寸规模时永远不会变成失败者。没有什么比这更离谱了。将一个成功的系统应用过于激进或不当的头寸规模方法，仍然可以轻易地让你失去所有资金。多年来，我见过许多人这样做。大多数人认为，当他们有一个成功的系统时，他们必须“全力以赴”，尽可能激进地交易。这些人在未来必然的回撤中往往以壮观的方式崩溃。
- en: '![images](images/gbox.jpg) The Fantasy of Size'
  id: totrans-508
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 规模的幻想'
- en: 'Almost every two-bit huckster out there selling a trading system will have
    some sort of sales pitch that goes like this: “If you use my method, you can get
    $5,000 profit per contract per year. So if you trade 100 contracts—all it takes
    is adding a few zeros to your order quantity—you’ll soon be making a very good
    living!” If you can’t immediately see through the transparency of this claim,
    I’ll explain the fallacy. First, the huckster assumes you’ll have enough margin
    in your account to actually trade 100 contracts. If you have determined that a
    $10,000 account is appropriate to trade one contract (which, by the way, is already
    considered aggressive by many traders), then you would need a $1 million trading
    account. If you had that much money in your account, you’d probably be smart enough
    to never listen to the huckster’s pitch in the first place! Remember, drawdown
    is always possible, and your account needs to consider that.'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个卖交易系统的小商贩都会有类似的销售说辞：“如果你使用我的方法，你每个合同每年可以获利$5,000。所以如果你交易100个合同——只需在订单数量上加几个零——你很快就能过上不错的生活！”如果你不能立刻看穿这个说法的透明性，我会解释这个谬论。首先，这个商贩假设你账户里有足够的保证金来实际交易100个合同。如果你已经确定$10,000的账户适合交易一个合同（顺便提一下，这在许多交易者看来已经算是激进了），那么你需要一个$1百万的交易账户。如果你账户里有这么多钱，你大概会聪明到根本不会听商贩的推销！请记住，资金回撤总是可能发生，你的账户需要考虑这一点。
- en: The second fallacy in the “trade 100 contracts” scenario is that most people
    could not handle it psychologically. Sure, if the equity curve is always increasing,
    trading 100 contracts and banking $500,000 a year is easy. But when you have 5
    losing trades in a row, and you lose $100,000, psychologically that could be a
    killer. Your best bet, therefore, is to ignore the hucksters and position size
    so that you slowly add on contracts, and acclimate yourself to the dollar amounts
    involved before you increase size again.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: “交易100合约”场景中的第二个谬论是大多数人心理上无法承受。确实，如果股权曲线始终上升，交易100合约并年赚50万美元是很容易的。但是当你连续5笔亏损交易，损失10万美元时，心理上的打击可能是致命的。因此，你最好的选择是忽视那些夸夸其谈的人，并合理配置仓位，以便慢慢增加合约，适应相关的金额，然后再扩大规模。
- en: '![images](images/gbox.jpg) Short Term—Go for Broke'
  id: totrans-511
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 短期—孤注一掷'
- en: If your edge is small, and you want to trade for only a very short time, just
    go crazy with position sizing. Chances are, over the short run, you probably will
    win. In the long run, you’ll be toast, but in the short run you’ll be profitable.
    A classic example of this is with a Martingale betting strategy. You begin by
    betting one coin. Every time you lose, you double your bet (two, four, eight,
    etc. coins). When you eventually win, you win back all your original bets, plus
    $1 profit. The interesting thing about this approach is that if you play it just
    once with no bet limit, you will almost always make $1 (i.e., winning one betting
    sequence). But if you play it over and over, your odds of overall success go to
    zero because eventually there will be a betting run of consecutive losses you
    cannot recover from. Of course, betting one sequence and then walking away is
    impossible for most people. Still, it is an option that is usually successful.
    When you add in bet limits for Martingale, the approach becomes even less attractive.
    I know quite a few former traders who tried Martingale over the years; note I
    described them as “former.”
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的优势很小，且只想短时间交易，那就疯狂地进行仓位管理。短期内，你可能会获胜。长期来看，你会失败，但短期内会盈利。马丁戈尔投注策略就是经典例子。你开始时投注一枚硬币，每次亏损就加倍投注（两枚、四枚、八枚等）。当你最终获胜时，你将收回所有原始投注，并赢得1美元利润。有趣的是，如果你无限制地玩一次，你几乎总能赢得1美元（即赢得一次投注序列）。但如果你一次次重复，你的整体成功几率将归零，因为最终会出现连续亏损的投注期，你无法恢复。当然，进行一次投注序列然后离开对大多数人来说是不可能的。但这通常是一个成功的选项。当你为马丁戈尔设置投注限制时，这种方法变得更不吸引人。我认识一些曾经交易过马丁戈尔的前交易员；请注意，我称他们为“前”。
- en: '![images](images/gbox.jpg) No Position Sizing = No Good!'
  id: totrans-513
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 不做仓位管理=没好处！'
- en: Whether it is fear of loss, lack of confidence or some other issue, many people
    who have winning trading systems never position size. Instead, they continue to
    trade the same size for years. This to me is almost as bad as being too aggressive
    with sizing. When you have a winning system, you have the goose with the golden
    egg. Take care of that goose, learn what it can eat to maximize egg production,
    but don’t overdo it. After all, you need to make full use of the goose while you
    have it.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是对损失的恐惧、自信心不足还是其他问题，许多拥有盈利交易系统的人从不进行仓位管理。相反，他们多年都维持相同的交易规模。在我看来，这几乎和仓位过于激进一样糟糕。当你拥有一个盈利系统时，你就拥有了产金蛋的鹅。好好照顾这只鹅，了解它需要什么以最大化产蛋，但不要过度。毕竟，在你拥有它的时候，你需要充分利用这只鹅。
- en: '![images](images/gbox.jpg) Strategy, Then Position Size, or Strategy and Position
    Size Together?'
  id: totrans-515
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 策略，然后进行仓位管理，还是策略和仓位管理一起？'
- en: For most of my development career, I have developed the strategy first, based
    on always trading a single contract. After development is completed, I then apply
    position sizing. This is a good way to go, especially when your final position
    sizing is for a portfolio of systems.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的大部分开发生涯中，我总是先基于交易单个合约来开发策略。在开发完成后，再应用仓位管理。这是一种很好的方法，特别是当你的最终仓位管理是针对一个系统组合时。
- en: 'Fellow trader Andrea Unger, who also trades for a living, disagrees with my
    approach. Considering that he has won the World Cup Championship of Futures Trading
    four times, I think I am safe in listening to him. His argument is as follows:
    when you develop a system trading a single contract, you’ll get a good system,
    but maybe not one that takes advantage of position sizing. For example, if you
    include position sizing in your development process, you are likely to end up
    with smaller losing trades, since that will allow you to trade with more contracts,
    leading to a higher net profit. This definitely makes sense, based on my own experience.
    One of my favorite trading systems I developed was based on one contract being
    traded. Unfortunately, that system has relatively large losses ($2,000 to $3,000
    per contract), making it tough to position size, unless the account is very large.
    Just think of the account size you need if you want to trade 10 contracts, where
    a $30,000 loss on one trade is possible. With a $300,000 account, one losing trade
    would lead to a 10 percent account loss. This is much too large a loss, even for
    the most reckless of traders. Therefore, in this case, maybe developing the system
    with position sizing would have suggested a parameter set where $500 maximum loss
    was optimum. This system would be much easier to apply position sizing for a smaller
    account.'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 另一位交易者安德烈亚·昂格（Andrea Unger），他也是以交易为生的，和我持不同观点。考虑到他曾四次获得期货交易世界杯冠军，我觉得听取他的意见是明智的。他的论点如下：当你开发一个只交易单一合约的系统时，你会得到一个不错的系统，但可能不会充分利用头寸大小。例如，如果在你的开发过程中包含头寸大小，你很可能会减少亏损交易，因为这将允许你以更多合约进行交易，从而实现更高的净利润。这一点根据我的经验是完全合理的。我开发的一个我最喜欢的交易系统就是基于交易一个合约的。不幸的是，该系统的相对损失较大（每个合约$2,000到$3,000），使得头寸大小变得困难，除非账户非常大。想想你需要的账户规模，如果你想交易10个合约，一个交易可能会造成$30,000的损失。对于一个$300,000的账户，一个亏损交易会导致10%的账户损失。这对于即使是最鲁莽的交易者来说也是太大的损失。因此，在这种情况下，也许使用头寸大小来开发系统会建议一个参数设置，其中$500的最大损失是最佳的。这个系统对于较小的账户来说，更容易应用头寸大小。
- en: So, even though I prefer not using position sizing during development, recognize
    that at least one (and probably many more) great traders do develop with position
    sizing. It might be worth trying both approaches on your development projects,
    to see which one you like the best.
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，尽管我在开发过程中倾向于不使用头寸大小，但要认识到至少有一位（可能还有更多）优秀交易者确实是通过头寸大小来开发的。尝试在你的开发项目中两种方法，看看哪一种你更喜欢，可能是值得的。
- en: '![images](images/gbox.jpg) Positioning Size—Single System'
  id: totrans-519
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 头寸大小—单一系统'
- en: Whenever I begin trading a new strategy, I almost always start at the smallest
    size possible, typically only one contract. Many people think the exact opposite;
    if you have an edge, you need to exploit it with big size as soon as possible.
    After all, what if the edge disappears? That is a good point, but in my experience,
    starting small is better. First, even with all the development, testing, and incubation,
    the system still might not have an edge, even though I think it does. Trading
    small will limit my loss in such a case. Second, I always become emotionally invested
    in strategies when I start trading—after all, I want to see my creation succeed—so
    trading a small size takes any emotion out of the equation. This new strategy
    becomes just another strategy in my portfolio. My final reason for starting small
    is that I want to increase size based on the profits of the strategy. If the strategy
    makes money, it will ramp up in size. If it stays flat or loses money, my downside
    is limited.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我开始交易一个新策略时，我几乎总是以尽可能小的规模开始，通常只交易一个合约。很多人认为恰恰相反；如果你有优势，你需要尽快用较大的规模来利用它。毕竟，优势如果消失了怎么办？这是一个好观点，但根据我的经验，先小规模交易更好。首先，即使经过所有的开发、测试和孵化，这个系统仍然可能没有优势，尽管我认为它有。小规模交易会在这种情况下限制我的损失。其次，我在开始交易时总会对策略产生情感投资——毕竟，我希望看到我的创造成功——所以小规模交易可以消除情感的干扰。这个新策略只会成为我投资组合中的另一个策略。我选择小规模交易的最后一个原因是，我希望根据策略的利润来增加规模。如果策略赚钱，它将会逐渐扩大规模。如果保持平稳或亏损，我的下行风险就会受到限制。
- en: 'Even though I start with one contract, I always know in advance what my sizing
    scheme will be as I build equity. Most of the time, I just use fixed fractional
    sizing:'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我从一个合约开始，但我总是提前知道在我建立股本时我的大小方案是什么。大多数时候，我只是使用固定的分数大小：
- en: '*N* = *int*(*x* * Equity/Largest Loss)'
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
  zh: '*N* = *int*(*x* * 股本/最大损失)'
- en: where
  id: totrans-523
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其中
- en: '*N* = Integer number of contracts (always round down)'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*N* = 合同的整数数量（总是向下取整）'
- en: '*int* = Integer function'
  id: totrans-525
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*int* = 整数函数'
- en: '*x* = Fraction of equity to bet on each trade'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*x* = 每笔交易所押的权益比例'
- en: Equity = Current account equity
  id: totrans-527
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 权益 = 当前账户权益
- en: Largest loss = Largest historical loss from walk-forward back testing
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大损失 = 来自前向回测的历史最大损失
- en: The only variable that is at my discretion is the fixed fraction *x.* Many traders
    will say that *x* can be no more than .02, or some other value. While I can’t
    argue with keeping the value of *x* low, I prefer to use Monte Carlo simulation
    to show me the best value of *x,* which for me is one that maximizes my return/drawdown
    ratio. This is, of course, subject to other constraints such as risk of ruin and
    maximum allowable drawdown. An example will make this clearer.
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一由我决定的变量是固定比例 *x.* 许多交易者会说 *x* 不能超过0.02或其他值。虽然我无法反对将 *x* 的值保持在较低水平，但我更倾向于使用蒙特卡罗模拟来向我展示最佳的
    *x* 值，这对我来说是最大化回报/回撤比的值。当然，这受到其他限制的影响，如破产风险和最大允许回撤。一个例子将使这一点更清晰。
- en: 'To look at the impact of fixed fractional sizing, I use the Monte Carlo simulation
    analysis of the euro system I will present later. I run the analysis with various
    values of the fixed fraction *x,* and look at the following charts:'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看固定分数大小的影响，我使用将要展示的欧元系统的蒙特卡罗模拟分析。我使用不同的固定比例 *x* 值运行分析，并查看以下图表：
- en: Median rate of return—I want as high as possible.
  id: totrans-531
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中位数回报率—我希望尽可能高。
- en: Return/DD ratio—I want as high as possible.
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 回报/回撤比—我希望尽可能高。
- en: Median max drawdown—I want this as low as possible.
  id: totrans-533
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中位数最大回撤—我希望这个尽可能低。
- en: Risk of ruin—I want this as low as possible.
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破产风险—我希望这个尽可能低。
- en: Obviously, since I am trying to maximize return and minimize drawdown, there
    has to be a happy medium somewhere. This depends not only on the results but also
    my personal preferences. For instance, if I did not care what the drawdown or
    risk of ruin was, I’d select the peak point on the return or return/DD chart.
    This corresponds to *x* = 0.32, and also is Ralph Vince’s optimal *f.* But, with
    *x* = 0.32, I’d have a 50 percent chance of having a max drawdown equal to or
    greater than 67.4 percent. Plus, my risk of ruin would be 21 percent. Wow! Those
    values are too high for me. But I will accept a 45 percent maximum drawdown and
    a 10 percent risk of ruin. Eliminating all chart points that do not meet these
    criteria result in a max value of *x* = 0.175, as shown in [Figure 16.1](#figure16-1).
    Therefore, I will use this value of *x* in my trading for this particular system.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，由于我试图最大化回报并最小化回撤，必须有一个平衡点。这不仅取决于结果，还取决于我的个人偏好。例如，如果我不关心回撤或破产风险，我会选择回报或回报/回撤图上的峰值。这对应于
    *x* = 0.32，也正是拉尔夫·文斯的最佳 *f.* 但是，*x* = 0.32 时，我有50%的机会出现最大回撤等于或大于67.4%。此外，我的破产风险将是21%。哇！这些数值对我来说太高了。但我会接受45%的最大回撤和10%的破产风险。去除所有不符合这些标准的图表点后，结果最大
    *x* 值为0.175，如 [图 16.1](#figure16-1) 所示。因此，我将在这个特定系统的交易中使用这个 *x* 值。
- en: '![images](images/c16f001.jpg)'
  id: totrans-536
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c16f001.jpg)'
- en: '[**FIGURE 16.1**](#figureanchor16-1) Single-System Position Sizing'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 16.1**](#figureanchor16-1) 单系统头寸大小'
- en: '![images](images/gbox.jpg) Positioning Size—Multiple Systems'
  id: totrans-538
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 头寸大小—多系统'
- en: Since I am trading multiple systems at any one time, I have to respect any correlation
    between the results. That is, I can’t independently determine the value of *x*
    for each system, and then just trade them together. Instead, I analyze all the
    systems together, and try all values of *x* for each of them. Just as with the
    single system, I want values of *x* for each system (each system will indeed have
    a different value of *x*) that maximizes my return/DD ratio, subject to maximum
    allowable drawdown and risk of ruin. An example of this process is shown in [Figure
    16.2](#figure16-2), where five different systems are traded at the same time.
    The values for *x* for each system maximizes the return/DD, subject to the loss
    constraints I have chosen.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我同时交易多个系统，我必须尊重结果之间的相关性。也就是说，我不能独立确定每个系统的 *x* 值，然后将它们一起交易。相反，我会将所有系统一起分析，并为每个系统尝试所有
    *x* 值。与单个系统一样，我希望每个系统的 *x* 值（每个系统的 *x* 值确实会不同）最大化我的回报/回撤比，同时遵循最大允许回撤和破产风险的限制。此过程的一个例子在
    [图 16.2](#figure16-2) 中展示，五个不同的系统同时交易。每个系统的 *x* 值在我选择的损失限制下最大化回报/回撤比。
- en: '![images](images/c16f002.jpg)'
  id: totrans-540
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c16f002.jpg)'
- en: '[**FIGURE 16.2**](#figureanchor16-2) Position Sizing, Multiple Systems'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 16.2**](#figureanchor16-2) 头寸大小，多系统'
- en: Obviously, I have just scratched the surface with position sizing, but I have
    given you an idea of how I approach it. As stated earlier, my philosophy is to
    go slow at first and let the system profits generate most of the extra capital
    needed for position sizing. This helps me keep the risk at a manageable level.
    Since I use fixed fractional sizing, you might wonder how you could employ a different
    sizing technique in your analysis. Simply take what I have shown here and modify
    it for your sizing approach, and conduct the same analysis. You’ll then have a
    logical analysis for whatever position-sizing method you decide to employ.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，我只是刚刚触及头寸大小的问题，但我给你提供了我处理它的思路。如前所述，我的哲学是最开始要慢慢来，让系统利润产生大部分所需的额外资本用于头寸大小。这有助于我保持风险在可控水平。由于我使用固定比例的头寸大小，你可能会想知道如何在你的分析中采用不同的大小技术。只需拿走我在这里展示的内容，并根据你的大小方法进行修改，然后进行相同的分析。这样，你就能为你决定采用的任何头寸大小方法提供一个合理的分析。
- en: CHAPTER 17
  id: totrans-543
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第17章
- en: Documenting the Process
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 记录过程
- en: As you can imagine, keeping track of all the strategies you create and run through
    this development process can quickly become a nightmare. Proper documentation
    is the key to successfully managing this effort. Currently, I use an Excel spreadsheet
    to manage my strategies. This is available on the book resource web site ([www.wiley.com/go/algotradingsystems](http://www.wiley.com/go/algotradingsystems))
    for you to download and use, and is also shown in [Figures 17.1](#figure17-1)
    and [17.2](#figure17-2). I have set it up to identify the items I feel are the
    most important. Of course, as you progress in system development, you will likely
    have different items you want to track. In that case, simply edit the spreadsheet
    to fit your own needs.
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所想，跟踪所有你创建并经历这一开发过程的策略可能很快会变成一场噩梦。适当的文档是成功管理这项工作的关键。目前，我使用Excel电子表格来管理我的策略。你可以在书籍资源网站上下载并使用这个文件（[www.wiley.com/go/algotradingsystems](http://www.wiley.com/go/algotradingsystems)），同时它也展示在[图17.1](#figure17-1)和[17.2](#figure17-2)中。我已将其设置为识别我认为最重要的项目。当然，随着你在系统开发中的进展，你可能会有不同的项目需要跟踪。在这种情况下，只需编辑电子表格以满足自己的需求。
- en: '![images](images/c17f001.jpg)'
  id: totrans-546
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c17f001.jpg)'
- en: '[**FIGURE 17.1**](#figureanchor17-1) Documenting the Development Process'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图17.1**](#figureanchor17-1) 记录开发过程'
- en: '![images](images/c17f002.jpg)'
  id: totrans-548
  prefs: []
  type: TYPE_IMG
  zh: '![images](images/c17f002.jpg)'
- en: '[**FIGURE 17.2**](#figureanchor17-2) Documenting the Development Process'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图17.2**](#figureanchor17-2) 记录开发过程'
- en: The items I track with the spreadsheet will be discussed in this chapter.
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 我在电子表格中跟踪的项目将在本章中讨论。
- en: '![images](images/gbox.jpg) Trading Goals'
  id: totrans-551
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 交易目标'
- en: I list all my goals for profit, drawdown, rate of return, number of trades,
    and so on. I find it much more difficult to accept systems that do not meet my
    goals when the goals are clearly written at the start!
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 我列出所有我的利润目标、回撤、收益率、交易次数等。我发现，当目标在开始时明确写出时，更难接受不符合我目标的系统！
- en: '![images](images/gbox.jpg) Trading Idea'
  id: totrans-553
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 交易想法'
- en: Here I list all the particulars of the strategy I am testing.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我列出了我正在测试的策略的所有细节。
- en: '*Strategy name.* Sounds simple, but having a unique name for every strategy
    helps you keep track of things. I use a standard naming convention, which allows
    me to easily find it in my trading software’s list of strategies.'
  id: totrans-555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*策略名称。* 听起来简单，但为每个策略起一个独特的名称有助于你跟踪事务。我使用标准命名约定，这使我能在交易软件的策略列表中轻松找到它。'
- en: KJD2013-10 BrkOut A
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: KJD2013-10 突破 A
- en: 'where:'
  id: totrans-557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其中：
- en: KJD = My initials—in a list of 1,000 strategies, you want to easily find the
    ones you wrote.
  id: totrans-558
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: KJD = 我的姓名首字母——在1,000个策略的列表中，你希望能够轻松找到自己编写的策略。
- en: 2013-10 = Year, followed by two-digit month. I created this strategy in October
    2013.
  id: totrans-559
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2013-10 = 年份，后跟两位数字的月份。我在2013年10月创建了这个策略。
- en: BrkOut = A simple description of the strategy. This example would be a breakout
    strategy.
  id: totrans-560
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: BrkOut = 对策略的简单描述。这个例子将是一个突破策略。
- en: A = Version of strategy. If I later change or add rules, the next version would
    be “B.” This serves a couple of purposes. First, it helps you keep track of how
    the strategy changed over time. Second, it reminds you how many changes you made
    to the strategy. If you consistently find yourself testing up to version “M,”
    for example, you are probably spending too much time revising your strategy. Remember,
    the risk of overfitting goes up with each version.
  id: totrans-561
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: A = 策略版本。如果我稍后更改或添加规则，下一个版本将是“B”。这有几个目的。首先，它帮助您跟踪策略随时间的变化。其次，它提醒您对策略所做的更改数量。例如，如果您发现自己一直在测试到版本“M”，您可能花费了过多时间修改策略。请记住，过拟合的风险随着每个版本的增加而增加。
- en: As part of this naming, I will also add a “W” to the end if the walk-forward
    version has a different code than the baseline version, and I will use “H” at
    the end to signify a historical walk-forward version of the strategy.
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为此命名的一部分，如果向前走版本的代码与基线版本不同，我将在末尾添加“W”，如果是策略的历史向前走版本，我将在末尾使用“H”。
- en: '*Strategy—general description.* In simple words, I will describe my strategy.'
  id: totrans-563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*策略—一般描述。* 简单来说，我将描述我的策略。'
- en: '*Edge.* What do I think my edge is? Enter it here. This is a good warning sign—if
    you do not have a clue what your edge is, you probably do not have one!'
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*优势。* 我认为我的优势是什么？请在此输入。这是一个良好的警示标志—如果您对自己的优势没有任何线索，您可能就没有优势！'
- en: '*Markets to test.* List the market or markets you plan to examine.'
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*市场测试。* 列出您计划检查的市场。'
- en: '*Bar size.* Enter the type of bar you are testing with.'
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*柱大小。* 输入您正在测试的柱类型。'
- en: '*Historical test period.* List the start and end dates for your analysis.'
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*历史测试期。* 列出您分析的开始和结束日期。'
- en: '*Market data streams.* List the data identifier you are using. For example,
    if I wanted to test the continuous gold contract, in TradeStation I would use
    “@GC.”'
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*市场数据流。* 列出您使用的数据标识符。例如，如果我想测试连续黄金合约，在TradeStation中我将使用“@GC”。'
- en: '*Market data customization.* If you use any special session times or anything
    else unique, enter it here.'
  id: totrans-569
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*市场数据自定义。* 如果您使用任何特殊的交易时间或其他独特的内容，请在此输入。'
- en: '*Entry rules.* Describe your entry rules. You can use plain English, pseudo
    code, or actual code. The idea is to archive the entry method for later reference.'
  id: totrans-570
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*入场规则。* 描述您的入场规则。您可以使用简单英语、伪代码或实际代码。目的是归档入场方法以供日后参考。'
- en: '*Exit rules.* Describe your exit rules in the same manner as your entry rules.'
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*退出规则。* 以与入场规则相同的方式描述您的退出规则。'
- en: '![images](images/gbox.jpg) Limited Testing'
  id: totrans-572
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 有限测试'
- en: 'Here I list all the particulars of the limited testing phase:'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里我列出了有限测试阶段的所有细节：
- en: '*Test period.* The one or two-year sample of historical data that I am using
    to perform the limited testing.'
  id: totrans-574
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*测试期间。* 我用来进行有限测试的一到两年的历史数据样本。'
- en: '*Entry testing.* Here, I will record the general results (e.g., excellent,
    good, poor) for the entry testing (fixed stop, fixed target, and/or fixed bar).'
  id: totrans-575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*入场测试。* 在这里，我将记录入场测试的一般结果（例如，优秀、良好、差）。'
- en: '*Exit testing.* Here, I will record the general results (e.g., excellent, good,
    poor) for the exit testing (similar-approach entry).'
  id: totrans-576
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*退出测试。* 在这里，我将记录退出测试的一般结果（例如，优秀、良好、差）（类似方法的入场）。'
- en: '*Core system testing.* General results of the whole system.'
  id: totrans-577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*核心系统测试。* 整个系统的一般结果。'
- en: '*Monkey testing.* If I perform any random “monkey” testing, I will record the
    results here.'
  id: totrans-578
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*随机测试。* 如果我进行任何随机“猴子”测试，我将在这里记录结果。'
- en: '*Limited testing—overall.* Based on all the limited tests run, does the system
    pass or fail?'
  id: totrans-579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*有限测试—整体。* 根据所有进行的有限测试，系统是通过还是失败？'
- en: '![images](images/gbox.jpg) Walk-Forward Testing'
  id: totrans-580
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 向前走测试'
- en: Assuming the strategy passes the limited testing phase, I now move on to the
    walk-forward testing step.
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 假设策略通过了有限测试阶段，我现在进入向前走测试步骤。
- en: '*In period.* The number of trading days in the in-sample periods.'
  id: totrans-582
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*内期。* 内样本期间的交易天数。'
- en: '*Out period.* The number of trading days in the out-sample periods.'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*外期。* 外样本期间的交易天数。'
- en: '*Fitness function.* List the fitness function used.'
  id: totrans-584
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*适应度函数。* 列出所使用的适应度函数。'
- en: '*Anchored/Unanchored.* Identify whether you are using anchored testing or unanchored
    testing.'
  id: totrans-585
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*固定/非固定。* 确定您是否使用固定测试或非固定测试。'
- en: '*Optimum in/out.* If you optimize the in/out periods, identify that here, and
    also provide information on the true out-of-sample date range.'
  id: totrans-586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*最佳进出。* 如果您优化了进出期间，请在此识别，并提供真实的外样本日期范围的信息。'
- en: '*Walk-forward historical strategy created.* If you create a strategy version
    specifically with walk-forward history, identify it here. I signify this by putting
    the letter “H” on the end of the strategy.'
  id: totrans-587
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建逐步历史策略。* 如果您专门创建了一个带有逐步历史的策略版本，请在此处识别它。我通过在策略末尾加上字母“H”来表示这一点。'
- en: '*Walk-forward testing—overall.* Based on all the walk-forward testing, does
    the system pass or fail?'
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*逐步测试—总体。* 基于所有逐步测试，系统是通过还是失败？'
- en: '![images](images/gbox.jpg) Monte Carlo Testing'
  id: totrans-589
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 蒙特卡罗测试'
- en: 'Assuming the strategy passes the walk-forward testing phase, I now move on
    to the Monte Carlo testing step:'
  id: totrans-590
  prefs: []
  type: TYPE_NORMAL
  zh: 假设策略通过了逐步测试阶段，我现在进入蒙特卡罗测试步骤：
- en: '*Start equity.* Enter the starting equity you are using for the simulation.'
  id: totrans-591
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*起始资金。* 输入您用于模拟的起始资金。'
- en: '*Quit equity.* Enter the equity level below which you will quit trading the
    strategy.'
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*退出资金。* 输入您将停止交易该策略的资金水平。'
- en: '*Number trades, 1 year.* Number of trades in one year of trading.'
  id: totrans-593
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*一年内交易数量。* 一年内的交易数量。'
- en: '*Return/DD ratio.* Enter this result from the Monte Carlo simulation.'
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*收益/回撤比。* 输入来自蒙特卡罗模拟的结果。'
- en: '*Monte Carlo testing—overall.* Based on all the Monte Carlo testing, does the
    system pass or fail?'
  id: totrans-595
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*蒙特卡罗测试—总体。* 基于所有蒙特卡罗测试，系统是通过还是失败？'
- en: '![images](images/gbox.jpg) Incubation Testing'
  id: totrans-596
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 孵化测试'
- en: 'Assuming the strategy passes the Monte Carlo phase, I now move on to the incubation
    testing step:'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: 假设策略通过了蒙特卡罗阶段，我现在进入孵化测试步骤：
- en: '*Meets goals.* Did the strategy pass or fail incubation?'
  id: totrans-598
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*达成目标。* 策略在孵化方面是通过还是失败？'
- en: '![images](images/gbox.jpg) Diversification Check'
  id: totrans-599
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 多样化检查'
- en: Applicable only to strategies that you plan to trade with other strategies.
    Was the current strategy developed with diversification in mind?
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 仅适用于您计划与其他策略一起交易的策略。当前策略是否考虑了多样化的开发？
- en: '*Meets goals.* Did the strategy pass or fail diversification?'
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*达成目标。* 策略在多样化方面是通过还是失败？'
- en: '![images](images/gbox.jpg) Position-Sizing Check'
  id: totrans-602
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 头寸大小检查'
- en: Since I usually test a strategy with “one trade per contract” rules, this is
    an easy check. If, however, I used a particular position sizing during development,
    it should not be the outcome of optimization and should be identified here (especially
    if it will be traded with other systems).
  id: totrans-603
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我通常以“每合约一笔交易”的规则测试策略，这个检查很简单。然而，如果我在开发过程中使用了特定的头寸大小，它不应该是优化的结果，并应在此处识别（特别是如果它将与其他系统交易）。
- en: '*Meets goals.* Was the strategy developed using one contract per trade, or
    some other position-sizing technique that did *not* involve optimization?'
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*达成目标。* 策略是通过每笔交易一个合约开发的，还是使用了其他未涉及优化的头寸大小技术？'
- en: '![images](images/gbox.jpg) Final Notes'
  id: totrans-605
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 最终说明'
- en: After testing and development is completed, enter any information you feel is
    appropriate. For example, you could list the date you started trading. If the
    strategy does not pass but you like the entry or exit rules, you could always
    identify that fact here. I have had strategies that failed, but I still liked
    a particular aspect of it. With the notes at the end, you can always refer to
    it later and easily remember, “Oh yes, I wanted to test this entry with soybeans,
    due to its high volatility.”
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试和开发完成后，输入您认为合适的任何信息。例如，您可以列出开始交易的日期。如果策略未通过，但您喜欢入场或出场规则，您可以在此处指出这一点。我有过一些失败的策略，但我仍然喜欢其某个特定方面。通过最后的说明，您可以稍后随时查阅，并轻松记住：“哦，是的，我想用大豆测试这个入场，因为它的高波动性。”
- en: '![images](images/gbox.jpg) One Final List'
  id: totrans-607
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '![images](images/gbox.jpg) 最后一份清单'
- en: The individual sheets provide an excellent way to manage each strategy. In addition,
    I also keep a list of entry and exit ideas. These might not be fully formed strategies,
    but they are ideas I can take and later use in a strategy. For example, if I see
    an intriguing entry idea in a book or trading magazine, and I cannot immediately
    test it, I’ll just add it to my entry list. This list serves two purposes. First,
    it functions as an idea manager, saving any idea you have for future testing.
    Second, having this list means you will never run out of ideas to test. Trust
    me, the list will grow far faster than you can test!
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 各个单独的表格提供了一种优秀的方式来管理每个策略。此外，我还保留了一个进场和退场想法的列表。这些可能不是完全成型的策略，但它们是我可以采纳并在以后用在策略中的想法。例如，如果我在书籍或交易杂志中看到一个有趣的进场想法，而我无法立即测试它，我会将其添加到我的进场列表中。这个列表有两个目的。首先，它作为一个想法管理器，保存你将来要测试的任何想法。其次，拥有这个列表意味着你永远不会缺少测试的想法。相信我，这个列表的增长速度远超你的测试速度！
