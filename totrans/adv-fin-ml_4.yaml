- en: '**19.3 First Generation: Price Sequences**'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.3 第一代：价格序列**'
- en: The first generation of microstructural models concerned themselves with estimating
    the bid-ask spread and volatility as proxies for illiquidity. They did so with
    limited data and without imposing a strategic or sequential structure to the trading
    process.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 第一代微观结构模型关注于估计买卖差价和波动率作为流动性的代理。他们在数据有限的情况下，未对交易过程施加战略或顺序结构。
- en: '**19.3.1 The Tick Rule**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.3.1 Tick 规则**'
- en: In a double auction book, quotes are placed for selling a security at various
    price levels (offers) or for buying a security at various price levels (bids).
    Offer prices always exceed bid prices, because otherwise there would be an instant
    match. A trade occurs whenever a buyer matches an offer, or a seller matches a
    bid. Every trade has a buyer and a seller, but only one side initiates the trade.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在双重拍卖书中，报价用于在不同价格水平上出售证券（出价）或在不同价格水平上购买证券（竞标）。出价价格始终高于竞标价格，因为否则将立即匹配。每当买方匹配出价或卖方匹配竞标时，就会发生交易。每笔交易都有买方和卖方，但只有一方发起交易。
- en: 'The tick rule is an algorithm used to determine a trade''s aggressor side.
    A buy-initiated trade is labeled “1”, and a sell-initiated trade is labeled “-1”,
    according to this logic:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Tick 规则是一种用于确定交易主动方的算法。根据该逻辑，买方发起的交易标记为“1”，卖方发起的交易标记为“-1”。
- en: '![](Image00839.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00839.jpg)'
- en: where *p [*t*]* is the price of the trade indexed by *t* = 1, …, *T* , and *b
    [0]* is arbitrarily set to 1\. A number of studies have determined that the tick
    rule achieves high classification accuracy, despite its relative simplicity (Aitken
    and Frino [1996]). Competing classification methods include Lee and Ready [1991]
    and Easley et al. [2016].
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *p [*t*]* 是按 *t* = 1, …, *T* 索引的交易价格，而 *b [0]* 被任意设定为 1。许多研究已确定，尽管相对简单，tick
    规则仍能实现高分类准确率（Aitken 和 Frino [1996]）。竞争分类方法包括 Lee 和 Ready [1991] 以及 Easley 等 [2016]。
- en: 'Transformations of the { *b [*t*]* } series can result in informative features.
    Such transformations include: (1) Kalman Filters on its future expected value,
    E [*t*] [ *b [*t* + 1]* ]; (2) structural breaks on such predictions (Chapter
    17), (3) entropy of the { *b [*t*]* } sequence (Chapter 18); (4) t-values from
    Wald-Wolfowitz''s tests of runs on { *b [*t*]* }; (5) fractional differentiation
    of the cumulative { *b [*t*]* } series, ![](Image00648.jpg) (Chapter 5); etc.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 对 { *b [*t*]* } 序列的变换可以产生有用的特征。这些变换包括：(1) 对其未来期望值 E [*t*] [ *b [*t* + 1]* ]
    的卡尔曼滤波；(2) 对这些预测的结构性断裂（第17章）；(3) { *b [*t*]* } 序列的熵（第18章）；(4) 对 { *b [*t*]* }
    进行的 Wald-Wolfowitz 的运行检验的 t 值；(5) 对累积 { *b [*t*]* } 序列的分数微分，![](Image00648.jpg)（第5章）；等等。
- en: '**19.3.2 The Roll Model**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.3.2 Roll 模型**'
- en: Roll [1984] was one of the first models to propose an explanation for the effective
    bid-ask spread at which a security trades. This is useful in that bid-ask spreads
    are a function of liquidity, hence Roll's model can be seen as an early attempt
    to measure the liquidity of a security. Consider a mid-price series { *m [*t*]*
    }, where prices follow a Random Walk with no drift,
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Roll [1984] 是首个提出证券有效买卖差价解释的模型之一。这是有用的，因为买卖差价是流动性的函数，因此 Roll 的模型可以被视为早期测量证券流动性的尝试。考虑中间价格序列
    { *m [*t*]* }，其中价格遵循随机游走且无漂移。
- en: '![](Image00375.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00375.jpg)'
- en: hence price changes Δ *m [*t*]* = *m [*t*]* − *m [*t* − 1]* are independently
    and identically drawn from a Normal distribution
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，价格变化 Δ *m [*t*]* = *m [*t*]* − *m [*t* − 1]* 是从正态分布独立且同分布地抽取的。
- en: '![](Image00262.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00262.jpg)'
- en: 'These assumptions are, of course, against all empirical observations, which
    suggest that financial time series have a drift, they are heteroscedastic, exhibit
    serial dependency, and their returns distribution is non-Normal. But with a proper
    sampling procedure, as we saw in Chapter 2, these assumptions may not be too unrealistic.
    The observed prices, { *p [*t*]* }, are the result of sequential trading against
    the bid-ask spread:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这些假设当然与所有实证观察相悖，这些观察表明金融时间序列存在漂移、异方差、表现出序列依赖性，其回报分布是非正态的。但通过适当的抽样程序，如我们在第2章中看到的，这些假设可能并不太不现实。观察到的价格
    { *p [*t*]* } 是对买卖差价进行顺序交易的结果：
- en: '![](Image00259.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00259.jpg)'
- en: 'where *c* is half the bid-ask spread, and *b [*t*]* ∈ { − 1, 1} is the aggressor
    side. The Roll model assumes that buys and sells are equally likely, ![](Image00435.jpg)
    , serially independent, E[ *b [*t*] b [*t*  − 1] * ] = 0, and independent from
    the noise, E[ *b [*t*] u [*t*] * ] = 0 *.* Given these assumptions, Roll derives
    the values of *c* and σ ² [   *u*   ] as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *c* 是买卖差价的一半，*b [*t*]* ∈ { − 1, 1} 是主动方。Roll 模型假设买卖双方的可能性相等，![](Image00435.jpg)，序列独立，E[
    *b [*t*] b [*t*  − 1] * ] = 0，并且与噪声独立，E[ *b [*t*] u [*t*] * ] = 0 *.* 在这些假设下，Roll
    推导出 *c* 和 σ ² [   *u*   ] 的值如下：
- en: '![](Image00498.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00498.jpg)'
- en: '![](Image00702.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00702.jpg)'
- en: resulting in ![](Image00684.jpg) and σ ² [   *u*   ] = σ ² [Δ *p [*t*] * ] +
    2σ[Δ *p [*t*] * , Δ *p [*t*  − 1] * ]. In conclusion, the bid-ask spread is a
    function of the serial covariance of price changes, and the true (unobserved)
    price's noise, excluding microstructural noise, is a function of the observed
    noise and the serial covariance of price changes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 导致 ![](Image00684.jpg) 和 σ ² [   *u*   ] = σ ² [Δ *p [*t*] * ] + 2σ[Δ *p [*t*]
    * , Δ *p [*t*  − 1] * ]。总之，买卖差价是价格变化的序列协方差的函数，而真实（未观察到的）价格噪声，排除微观结构噪声，是观察到的噪声和价格变化的序列协方差的函数。
- en: The reader may question the need for Roll's model nowadays, when datasets include
    bid-ask prices at multiple book levels. One reason the Roll model is still in
    use, despite its limitations, is that it offers a relatively direct way to determine
    the *effective* bid-ask spread of securities that are either rarely traded, or
    where the published quotes are not representative of the levels at which market
    makers’ are willing to provide liquidity (e.g., corporate, municipal, and agency
    bonds). Using Roll's estimates, we can derive informative features regarding the
    market's liquidity conditions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可能会质疑如今使用 Roll 模型的必要性，因为数据集中包含了多个书籍层次的买卖价格。尽管 Roll 模型存在局限性，但它仍在使用的一个原因是，它提供了一种相对直接的方法来确定那些交易较少的证券或其公开报价不能代表市场做市商愿意提供流动性的水平（例如公司债券、市政债券和机构债券）的*有效*买卖差价。使用
    Roll 的估计，我们可以推导出有关市场流动性状况的信息特征。
- en: '**19.3.3 High-Low Volatility Estimator**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.3.3 高低波动率估计器**'
- en: Beckers [1983] shows that volatility estimators based on high-low prices are
    more accurate than the standard estimators of volatility based on closing prices.
    Parkinson [1980] derives that, for continuously observed prices following a geometric
    Brownian motion,
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Beckers [1983] 显示，基于高低价格的波动率估计器比基于收盘价格的标准波动率估计器更准确。Parkinson [1980] 推导出，对于遵循几何布朗运动的连续观察价格，
- en: '![](Image00770.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00770.jpg)'
- en: '![](Image00008.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00008.jpg)'
- en: where *k [1]* = 4log[2], ![](Image00102.jpg) , *H [*t*] * is the high price
    for bar *t* , and *L [*t*] * is the low price for bar *t.* Then the volatility
    feature σ [*HL*] can be robustly estimated based on observed high-low prices.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *k [1]* = 4log[2]，![](Image00102.jpg)，*H [*t*] * 是柱 *t* 的最高价格，*L [*t*] *
    是柱 *t* 的最低价格。然后，基于观察到的高低价格，可以稳健地估计波动率特征 σ [*HL*]。
- en: '**19.3.4 Corwin and Schultz**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.3.4 Corwin 和 Schultz**'
- en: 'Building on the work of Beckers [1983], Corwin and Schultz [2012] introduce
    a bid-ask spread estimator from high and low prices. The estimator is based on
    two principles: First, high prices are almost always matched against the offer,
    and low prices are almost always matched against the bid. The ratio of high-to-low
    prices reflects fundamental volatility as well as the bid-ask spread. Second,
    the component of the high-to-low price ratio that is due to volatility increases
    proportionately with the time elapsed between two observations.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Beckers [1983] 的基础上，Corwin 和 Schultz [2012] 引入了一种基于高低价格的买卖差价估计器。该估计器基于两个原则：首先，最高价格几乎总是与出价匹配，而最低价格几乎总是与买价匹配。高低价格的比率反映了基本波动率以及买卖差价。其次，高低价格比率中由于波动性造成的部分与两个观察之间的时间推移成比例增加。
- en: Corwin and Schultz show that the spread, as a percentage of price, can be estimated
    as
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Corwin 和 Schultz 表明，作为价格百分比的差价可以估计为
- en: '![](Image00189.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00189.jpg)'
- en: where
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 其中
- en: '![](Image00283.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00283.jpg)'
- en: '![](Image00091.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00091.jpg)'
- en: '![](Image00161.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00161.jpg)'
- en: and *H [*t* − 1, *t*]* is the high price over 2 bars ( *t* − 1 and *t* ), whereas
    *L [*t* − 1, *t*]* is the low price over 2 bars ( *t* − 1 and *t* ). Because α
    [*t*] < 0⇒ *S [*t*]* < 0, the authors recommend setting negative alphas to 0 (see
    Corwin and Schultz [2012], p. 727). Snippet 19.1 implements this algorithm. The
    `corwinSchultz` function receives two arguments, a series dataframe with columns
    ( `High` , `Low` ), and an integer value `sl` that defines the sample length used
    to estimate β [*t*] .
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 并且 *H [*t* − 1, *t*]* 是两个时间段（*t* − 1 和 *t*）的最高价，而 *L [*t* − 1, *t*]* 是两个时间段的最低价（*t*
    − 1 和 *t*）。因为 α [*t*] < 0⇒ *S [*t*]* < 0，作者建议将负阿尔法设为0（见科尔温和舒尔茨 [2012]，第727页）。片段
    19.1 实现了该算法。`corwinSchultz` 函数接受两个参数，一个带有列（`High`，`Low`）的系列数据框，以及一个整数值 `sl`，用于定义估计
    β [*t*] 时使用的样本长度。
- en: '**SNIPPET 19.1 IMPLEMENTATION OF THE CORWIN-SCHULTZ ALGORITHM**'
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 19.1 科尔温-舒尔茨算法的实现**'
- en: '![](Image00114.jpg)'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00114.jpg)'
- en: Note that volatility does not appear in the final Corwin-Schultz equations.
    The reason is that volatility has been replaced by its high/low estimator. As
    a byproduct of this model, we can derive the Becker-Parkinson volatility as shown
    in Snippet 19.2.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，波动性未出现在最终的科尔温-舒尔茨方程中。原因是波动性已被其高/低估计器取代。作为该模型的副产品，我们可以推导出贝克-帕金森波动性，如片段 19.2
    所示。
- en: '**SNIPPET 19.2 ESTIMATING VOLATILITY FOR HIGH-LOW PRICES**'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 19.2 高低价波动性的估计**'
- en: '![](Image00056.jpg)'
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00056.jpg)'
- en: This procedure is particularly helpful in the corporate bond market, where there
    is no centralized order book, and trades occur through bids wanted in competition
    (BWIC). The resulting feature, bid-ask spread *S* , can be estimated recursively
    over a rolling window, and values can be smoothed using a Kalman filter.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该程序在公司债券市场中特别有用，因为该市场没有集中订单簿，交易通过竞标（BWIC）进行。由此产生的特征，买卖差价 *S* ，可以在滚动窗口中递归估计，并且可以使用卡尔曼滤波器进行平滑处理。
- en: '**19.4 Second Generation: Strategic Trade Models**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.4 第二代：战略交易模型**'
- en: Second generation microstructural models focus on understanding and measuring
    illiquidity. Illiquidity is an important informative feature in financial ML models,
    because it is a risk that has an associated premium. These models have a stronger
    theoretical foundation than first-generation models, in that they explain trading
    as the strategic interaction between informed and uninformed traders. In doing
    so, they pay attention to signed volume and order flow imbalance.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 第二代微观结构模型专注于理解和测量非流动性。非流动性是金融机器学习模型中的一个重要信息特征，因为它是一种具有相关溢价的风险。这些模型比第一代模型具有更强的理论基础，因为它们将交易解释为知情交易者与非知情交易者之间的战略互动。在此过程中，它们关注签名交易量和订单流不平衡。
- en: 'Most of these features are estimated through regressions. In practice, I have
    observed that the t-values associated with these microstructural estimates are
    more informative than the (mean) estimates themselves. Although the literature
    does not mention this observation, there is a good argument for preferring features
    based on t-values over features based on mean values: t-values are re-scaled by
    the standard deviation of the estimation error, which incorporates another dimension
    of information absent in mean estimates.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这些特征大多数是通过回归估计的。在实践中，我观察到与这些微观结构估计相关的 t 值比（均值）估计本身更具信息性。尽管文献中没有提到这一观察，但有充分理由偏好基于
    t 值的特征而非基于均值的特征：t 值是由估计误差的标准差重新缩放的，包含了均值估计中缺失的另一维信息。
- en: '**19.4.1 Kyle''s Lambda**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.4.1 凯尔的 Lambda**'
- en: 'Kyle [1985] introduced the following strategic trade model. Consider a risky
    asset with terminal value *v* ∼ *N* [ *p [0]* , Σ [0] ], as well as two traders:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 凯尔 [1985] 引入了以下战略交易模型。考虑一个风险资产，其终值 *v* ∼ *N* [ *p [0]* , Σ [0] ]，以及两个交易者：
- en: A noise trader who trades a quantity *u* = *N* [0, σ ² [*u*] ], independent
    of *v* .
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个噪音交易者以数量 *u* = *N* [0, σ ² [*u*] ] 进行交易，且与 *v* 独立。
- en: An informed trader who knows *v* and demands a quantity *x* , through a market
    order.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个知情交易者知道 *v* 并通过市场订单需求数量 *x*。
- en: The market maker observes the total order flow *y* = *x* + *u* , and sets a
    price *p* accordingly. In this model, market makers cannot distinguish between
    orders from noise traders and informed traders. They adjust prices as a function
    of the order flow imbalance, as that may indicate the presence of an informed
    trader. Hence, there is a positive relationship between price change and order
    flow imbalance, which is called market impact.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 市场做市商观察到总订单流 *y* = *x* + *u*，并相应地设定价格 *p*。在这个模型中，做市商无法区分噪音交易者和知情交易者的订单。他们根据订单流不平衡调整价格，因为这可能表明有知情交易者的存在。因此，价格变化与订单流不平衡之间存在正相关关系，这被称为市场影响。
- en: The informed trader conjectures that the market maker has a linear price adjustment
    function, *p* = λ *y* + μ, where λ is an inverse measure of liquidity. The informed
    trader's profits are π = ( *v* − *p* ) *x* , which are maximized at ![](Image00139.jpg)
    , with second order condition λ > 0.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 知情交易者推测市场做市商有一个线性的价格调整函数 *p* = λ *y* + μ，其中 λ 是流动性的逆测量。知情交易者的利润为 π = ( *v* −
    *p* ) *x*，在 ![](Image00139.jpg) 处最大化，且二阶条件为 λ > 0。
- en: 'Conversely, the market maker conjectures that the informed trader''s demand
    is a linear function of *v* : *x* = α + β *v* , which implies ![](Image00221.jpg)
    and ![](Image00287.jpg) . Note that lower liquidity means higher λ, which means
    lower demand from the informed trader.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，市场做市商推测知情交易者的需求是 *v* 的线性函数：*x* = α + β *v*，这意味着 ![](Image00221.jpg) 和 ![](Image00287.jpg)。注意，流动性降低意味着
    λ 增加，这意味着知情交易者的需求降低。
- en: Kyle argues that the market maker must find an equilibrium between profit maximization
    and market efficiency, and that under the above linear functions, the only possible
    solution occurs when
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 凯尔认为，市场做市商必须在利润最大化和市场效率之间找到平衡，在上述线性函数下，唯一可能的解决方案发生在
- en: '![](Image00421.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00421.jpg)'
- en: '![](Image00180.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00180.jpg)'
- en: '![](Image00623.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00623.jpg)'
- en: '![](Image00673.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00673.jpg)'
- en: Finally, the informed trader's expected profit can be rewritten as
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，知情交易者的预期利润可以重写为
- en: '![](Image00751.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00751.jpg)'
- en: 'The implication is that the informed trader has three sources of profit:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着知情交易者有三个利润来源：
- en: The security's mispricing.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 证券的错误定价。
- en: The variance of the noise trader's net order flow. The higher the noise, the
    easier the informed trader can conceal his intentions.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 噪音交易者净订单流的方差。噪音越大，知情交易者越容易隐藏他的意图。
- en: The reciprocal of the terminal security's variance. The lower the volatility,
    the easier to monetize the mispricing.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 终端证券方差的倒数。波动性越低，错误定价的货币化就越容易。
- en: In Kyle's model, the variable λ captures price impact. Illiquidity increases
    with uncertainty about *v* and decreases with the amount of noise. As a feature,
    it can be estimated by fitting the regression
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在凯尔的模型中，变量 λ 捕捉价格影响。流动性不足随着对 *v* 的不确定性增加而增加，并随着噪音的增加而减少。作为一个特征，它可以通过拟合回归进行估计。
- en: '![](Image00846.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00846.jpg)'
- en: where { *p [*t*]* } is the time series of prices, { *b [*t*]* } is the time
    series of aggressor flags, { *V [*t*]* } is the time series of traded volumes,
    and hence { *b [*t*] V [*t*]* } is the time series of signed volume or net order
    flow. [Figure 19.1](text00004.html#filepos0000987148) plots the histogram of Kyle's
    lambdas estimated on the E-mini S&P 500 futures series.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 { *p [*t*]* } 是价格的时间序列，{ *b [*t*]* } 是攻击者标志的时间序列，{ *V [*t*]* } 是交易量的时间序列，因此
    { *b [*t*] V [*t*]* } 是签名交易量或净订单流的时间序列。[图 19.1](text00004.html#filepos0000987148)
    绘制了在 E-mini S&P 500 期货系列上估计的凯尔的 λ 的直方图。
- en: '![](Image00663.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00663.jpg)'
- en: '[**Figure 19.1**](text00004.html#filepos0000986833) Kyle''s Lambdas Computed
    on E-mini S&P 500 Futures'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 19.1**](text00004.html#filepos0000986833) 凯尔在 E-mini S&P 500 期货上计算的 λ'
- en: '**19.4.2 Amihud''s Lambda**'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.4.2 Amihud的Lambda**'
- en: Amihud [2002] studies the positive relationship between absolute returns and
    illiquidity. In particular, he computes the daily price response associated with
    one dollar of trading volume, and argues its value is a proxy of price impact.
    One possible implementation of this idea is
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Amihud [2002] 研究了绝对收益与流动性不足之间的正相关关系。特别地，他计算了与一美元交易量相关的每日价格反应，并认为其值是价格影响的代理。这个思想的一个可能实现是
- en: '![](Image00171.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00171.jpg)'
- en: where *B [τ]* is the set of trades included in bar τ, ![](Image00459.jpg) is
    the closing price of bar τ, and *p [*t*] V [*t*] * is the dollar volume involved
    in trade *t* ∈ *B [τ] * . Despite its apparent simplicity, Hasbrouck [2009] found
    that daily Amihud's lambda estimates exhibit a high rank correlation to intraday
    estimates of effective spread.  [ Figure 19.2 ](text00004.html#filepos0000989018)
    plots the histogram of Amihud's lambdas estimated on the E-mini S&P 500 futures
    series.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *B [τ]* 是包含在时间柱 τ 中的交易集，![](Image00459.jpg) 是时间柱 τ 的收盘价，*p [*t*] V [*t*]
    * 是涉及交易 *t* ∈ *B [τ] * 的美元交易量。尽管其表面上看似简单，Hasbrouck [2009] 发现每日的 Amihud λ 估计与日内有效价差的估计之间存在高度秩相关。[图
    19.2](text00004.html#filepos0000989018) 绘制了在 E-mini S&P 500 期货系列上估计的 Amihud 的
    λ 的直方图。
- en: '![](Image00357.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00357.jpg)'
- en: '[**Figure 19.2**](text00004.html#filepos0000988701) Amihud''s lambdas estimated
    on E-mini S&P 500 futures'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 19.2**](text00004.html#filepos0000988701) 在 E-mini S&P 500 期货上估计的 Amihud
    的 λ'
- en: '**19.4.3 Hasbrouck''s Lambda**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.4.3 Hasbrouck 的 λ**'
- en: Hasbrouck [2009] follows up on Kyle's and Amihud's ideas, and applies them to
    estimating the price impact coefficient based on trade-and-quote (TAQ) data. He
    uses a Gibbs sampler to produce a Bayesian estimation of the regression specification
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Hasbrouck [2009] 跟进了 Kyle 和 Amihud 的思想，并将其应用于基于交易和报价（TAQ）数据的价格影响系数估计。他使用 Gibbs
    采样器生成回归规范的贝叶斯估计。
- en: '![](Image00439.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00439.jpg)'
- en: where *B [*i* , τ]* is the set of trades included in bar τ for security *i*
    , with *i* = 1, …, *I* , ![](Image00502.jpg) is the closing price of bar τ for
    security *i* , *b [*i*  ,  *t*] * ∈ { − 1, 1} indicates whether trade *t* ∈ *B
    [*i*  , τ] * was buy-initiated or sell-initiated; and *p [*i*  ,  *t*] V [*i*  ,  *t*]
    * is the dollar volume involved in trade *t* ∈ *B [*i*  , τ] * . We can then estimate
    λ [*i*] for every security *i* , and use it as a feature that approximates the
    effective cost of trading (market impact).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 *B [*i* , τ]* 是包含在安全 *i* 的时间柱 τ 中的交易集，*i* = 1, …, *I*，![](Image00502.jpg)
    是安全 *i* 的时间柱 τ 的收盘价，*b [*i*  ,  *t*] * ∈ { − 1, 1} 表示交易 *t* ∈ *B [*i*  , τ] *
    是买入启动还是卖出启动；而 *p [*i*  ,  *t*] V [*i*  ,  *t*] * 是涉及交易 *t* ∈ *B [*i*  , τ] * 的美元交易量。然后我们可以为每个安全
    *i* 估计 λ [*i*]，并将其用作近似交易有效成本（市场影响）的特征。
- en: Consistent with most of the literature, Hasbrouck recommends 5-minute time-bars
    for sampling ticks. However, for the reasons discussed in Chapter 2, better results
    can be achieved through stochastic sampling methods that are synchronized with
    market activity. [Figure 19.3](text00004.html#filepos0000992042) plots the histogram
    of Hasbrouck's lambdas estimated on the E-mini S&P 500 futures series.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数文献一致，Hasbrouck 推荐使用 5 分钟的时间柱来抽样价格波动。然而，正如第 2 章所讨论的，通过与市场活动同步的随机抽样方法可以获得更好的结果。[图
    19.3](text00004.html#filepos0000992042)绘制了在 E-mini S&P 500 期货系列上估计的 Hasbrouck
    的 λ 的直方图。
- en: '![](Image00605.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00605.jpg)'
- en: '[**Figure 19.3**](text00004.html#filepos0000991690) Hasbrouck''s lambdas estimated
    on E-mini S&P 500 futures'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 19.3**](text00004.html#filepos0000991690) 在 E-mini S&P 500 期货上估计的 Hasbrouck
    的 λ'
- en: '**19.5 Third Generation: Sequential Trade Models**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.5 第三代：顺序交易模型**'
- en: As we have seen in the previous section, strategic trade models feature a single
    informed trader who can trade at multiple times. In this section we will discuss
    an alternative kind of model, where randomly selected traders arrive at the market
    sequentially and independently.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一节中所见，战略交易模型以一个能够多次交易的单一知情交易者为特征。在本节中，我们将讨论一种替代模型，其中随机选择的交易者顺序独立地进入市场。
- en: Since their appearance, sequential trade models have become very popular among
    market makers. One reason is, they incorporate the sources of uncertainty faced
    by liquidity providers, namely the probability that an informational event has
    taken place, the probability that such event is negative, the arrival rate of
    noise traders, and the arrival rate of informed traders. With those variables,
    market makers must update quotes dynamically, and manage their inventories.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 自出现以来，顺序交易模型在市场制造商中变得非常流行。原因之一是，它们包含了流动性提供者面临的不确定性来源，即信息事件发生的概率、该事件是负面的概率、噪声交易者的到达率和知情交易者的到达率。考虑到这些变量，市场制造商必须动态更新报价，并管理他们的库存。
- en: '**19.5.1 Probability of Information-based Trading**'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.5.1 基于信息的交易概率**'
- en: Easley et al. [1996] use trade data to determine the probability of information-based
    trading (PIN) of individual securities. This microstructure model views trading
    as a game between market makers and position takers that is repeated over multiple
    trading periods.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Easley等人[1996]使用交易数据来确定个别证券的基于信息的交易概率（PIN）。这个微观结构模型将交易视为市场制造者和持仓者之间在多个交易期间重复进行的博弈。
- en: Denote a security's price as *S* , with present value *S [0]* . However, once
    a certain amount of new information has been incorporated into the price, *S*
    will be either *S [*B*]* (bad news) or *S [*G*]* (good news). There is a probability
    α that new information will arrive within the timeframe of the analysis, a probability
    δ that the news will be bad, and a probability (1 − δ) that the news will be good.
    These authors prove that the expected value of the security's price can then be
    computed at time *t* as
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 将某证券的价格表示为*S*，当前值为*S [0]*。然而，一旦某些新信息被纳入价格中，*S*将是*S [*B*]*（坏消息）或*S [*G*]*（好消息）。在分析的时间范围内，新信息到达的概率为α，坏消息的概率为δ，而好消息的概率为(1
    − δ)。这些作者证明，证券价格的期望值可以在时间*t*处计算为
- en: '![](Image00687.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00687.jpg)'
- en: Following a Poisson distribution, informed traders arrive at a rate μ, and uninformed
    traders arrive at a rate ε. Then, in order to avoid losses from informed traders,
    market makers reach breakeven at a bid level *B [*t*]* ,
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 按照泊松分布，知情交易者以速率μ到达，而不知情交易者以速率ε到达。然后，为了避免知情交易者的损失，市场制造者在竞标水平*B [*t*]* 达到盈亏平衡，
- en: '![](Image00743.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00743.jpg)'
- en: and the breakeven ask level *A [*t*]* at time *t* must be,
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 盈亏平衡的卖出价水平*A [*t*]*在时间*t*处必须为，
- en: '![](Image00013.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00013.jpg)'
- en: It follows that the breakeven bid-ask spread is determined as
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 由此，盈亏平衡的买卖价差被确定为
- en: '![](Image00106.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00106.jpg)'
- en: For the standard case when ![](Image00195.jpg) , we obtain
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当![](Image00195.jpg)时，我们得到
- en: '![](Image00796.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00796.jpg)'
- en: This equation tells us that the critical factor that determines the price range
    at which market makers provide liquidity is
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方程告诉我们，决定市场制造者提供流动性的价格区间的关键因素是
- en: '![](Image00382.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00382.jpg)'
- en: The subscript *t* indicates that the probabilities α and δ are estimated at
    that point in time. The authors apply a Bayesian updating process to incorporate
    information after each trade arrives to the market.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 下标*t*表示在该时间点估计的概率α和δ。作者应用贝叶斯更新过程，将每次交易到达市场后的信息纳入考虑。
- en: In order to determine the value *PIN [*t*]* , we must estimate four non-observable
    parameters, namely {α, δ, μ, ε}. A maximum-likelihood approach is to fit a mixture
    of three Poisson distributions,
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确定值*PIN [*t*]*，我们必须估计四个不可观察的参数，即{α, δ, μ, ε}。一种最大似然方法是拟合三个泊松分布的混合体，
- en: '![](Image00816.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00816.jpg)'
- en: where *V ^(*B*)* is the volume traded against the ask (buy-initiated trades),
    and *V ^(*S*)* is the volume traded against the bid (sell-initiated trades).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*V ^(*B*)*是以卖出价交易的交易量（买入发起交易），而*V ^(*S*)*是以买入价交易的交易量（卖出发起交易）。
- en: '**19.5.2 Volume-Synchronized Probability of Informed Trading**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.5.2 量化同步信息交易概率**'
- en: Easley et al. [2008] proved that
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Easley等人[2008]证明了
- en: '![](Image00524.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00524.jpg)'
- en: and in particular, for a sufficiently large μ,
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 特别地，对于足够大的μ，
- en: '![](Image00634.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00634.jpg)'
- en: Easley et al. [2011] proposed a high-frequency estimate of PIN, which they named
    volume-synchronized probability of informed trading (VPIN). This procedure adopts
    a *volume clock* , which synchronizes the data sampling with market activity,
    as captured by volume (see Chapter 2). We can then estimate
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Easley等人[2011]提出了一种高频PIN估计方法，他们称之为量化同步信息交易概率（VPIN）。该过程采用了*量化时钟*，它将数据采样与市场活动同步，这通过交易量来捕捉（见第2章）。我们可以估计
- en: '![](Image00497.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00497.jpg)'
- en: where *V ^(*B*) [τ]* is the sum of volumes from buy-initiated trades within
    volume bar τ, *V ^(*S*) [τ]* is the sum of volumes from sell-initiated trades
    within volume bar τ, and *n* is the number of bars used to produce this estimate.
    Because all volume bars are of the same size, *V* , we know that by construction
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*V ^(*B*) [τ]*是量化柱τ内买入发起交易的交易量总和，*V ^(*S*) [τ]*是量化柱τ内卖出发起交易的交易量总和，*n*是用于生成该估计的柱数。由于所有量化柱的大小相同*V*，我们知道通过构造
- en: '![](Image00683.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00683.jpg)'
- en: Hence, PIN can be estimated in high-frequency as
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，PIN可以高频估计为
- en: '![](Image00036.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00036.jpg)'
- en: 'For additional details and case studies of VPIN, see Easley et al. [2013].
    Using linear regressions, Andersen and Bondarenko [2013] concluded that VPIN is
    not a good predictor of volatility. However, a number of studies have found that
    VPIN indeed has predictive power: Abad and Yague [2012], Bethel et al. [2012],
    Cheung et al. [2015], Kim et al. [2014], Song et al. [2014], Van Ness et al. [2017],
    and Wei et al. [2013], to cite a few. In any case, linear regression is a technique
    that was already known to 18th-century mathematicians (Stigler [1981]), and economists
    should not be surprised when it fails to recognize complex non-linear patterns
    in 21st-century financial markets.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 有关VPIN的更多细节和案例研究，请参见Easley等人[2013]。Andersen和Bondarenko [2013]通过线性回归得出VPIN不是波动性的良好预测指标。然而，许多研究发现VPIN确实具有预测能力：Abad和Yague
    [2012]、Bethel等人[2012]、Cheung等人[2015]、Kim等人[2014]、Song等人[2014]、Van Ness等人[2017]和Wei等人[2013]等。无论如何，线性回归是一种18世纪数学家已经知道的技术（Stigler
    [1981]），经济学家不应感到惊讶，当它无法识别21世纪金融市场中的复杂非线性模式时。
- en: '**19.6 Additional Features from Microstructural Datasets**'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.6 来自微观结构数据集的附加特征**'
- en: The features we have studied in Sections 19.3 to 19.5 were suggested by market
    microstructure theory. In addition, we should consider alternative features that,
    although not suggested by the theory, we suspect carry important information about
    the way market participants operate, and their future intentions. In doing so,
    we will harness the power of ML algorithms, which can learn how to use these features
    without being specifically directed by theory.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第19.3到19.5节中研究的特征是由市场微观结构理论建议的。此外，我们还应考虑一些替代特征，尽管这些特征未被理论提出，但我们怀疑它们携带有关市场参与者运作方式及其未来意图的重要信息。在这样做时，我们将利用机器学习算法的力量，这些算法可以学习如何使用这些特征，而不需要理论的具体指导。
- en: '**19.6.1 Distibution of Order Sizes**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.6.1 顺序大小的分布**'
- en: Easley et al. [2016] study the frequency of trades per trade size, and find
    that trades with round sizes are abnormally frequent. For example, the frequency
    rates quickly decay as a function of trade size, with the exception of round trade
    sizes {5, 10, 20, 25, 50, 100, 200, …}. These authors attribute this phenomenon
    to so-called “mouse” or “GUI” traders, that is, human traders who send orders
    by clicking buttons on a GUI (Graphical User Interface). In the case of the E-mini
    S&P 500, for example, size 10 is 2.9 times more frequent than size 9; size 50
    is 10.9 times more likely than size 49; size 100 is 16.8 times more frequent than
    size 99; size 200 is 27.2 times more likely than size 199; size 250 is 32.5 times
    more frequent than size 249; size 500 is 57.1 times more frequent than size 499\.
    Such patterns are not typical of “silicon traders,” who usually are programmed
    to randomize trades to disguise their footprint in markets.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Easley等人[2016]研究了每个交易规模的交易频率，发现圆整规模的交易异常频繁。例如，频率率随着交易规模的增加迅速衰减，圆整交易规模{5, 10,
    20, 25, 50, 100, 200, …}除外。这些作者将这一现象归因于所谓的“鼠标”或“GUI”交易者，即通过点击GUI（图形用户界面）上的按钮发送订单的人类交易者。例如，在E-mini
    S&P 500中，大小为10的交易比大小为9的交易频率高出2.9倍；大小为50的交易比大小为49的交易频率高出10.9倍；大小为100的交易比大小为99的交易频率高出16.8倍；大小为200的交易比大小为199的交易频率高出27.2倍；大小为250的交易比大小为249的交易频率高出32.5倍；大小为500的交易比大小为499的交易频率高出57.1倍。这种模式对于“硅基交易者”而言并不典型，他们通常被编程为随机化交易，以掩盖他们在市场中的足迹。
- en: A useful feature may be to determine the normal frequency of round-sized trades,
    and monitor deviations from that expected value. The ML algorithm could, for example,
    determine if a larger-than-usual proportion of round-sized trades is associated
    with trends, as human traders tend to bet with a fundamental view, belief, or
    conviction. Conversely, a lower-than-usual proportion of round-sized trades may
    increase the likelihood that prices will move sideways, as silicon traders do
    not typically hold long-term views.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有用的特征可能是确定圆整规模交易的正常频率，并监测与该预期值的偏差。例如，机器学习算法可以确定通常比例较大的圆整规模交易是否与趋势相关，因为人类交易者往往倾向于基于基本面观点、信念或信念进行下注。相反，比例低于通常水平的圆整规模交易可能会增加价格横盘的可能性，因为硅基交易者通常不会持有长期观点。
- en: '**19.6.2 Cancellation Rates, Limit Orders, Market Orders**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.6.2 取消率、限价单、市场单**'
- en: Eisler et al. [2012] study the impact of market orders, limit orders, and quote
    cancellations. These authors find that small stocks respond differently than large
    stocks to these events. They conclude that measuring these magnitudes is relevant
    to model the dynamics of the bid-ask spread.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Eisler 等人 [2012] 研究市场订单、限价单和报价取消的影响。这些作者发现，小型股票对这些事件的反应与大型股票不同。他们得出结论，测量这些量与建模买卖价差的动态相关。
- en: 'Easley et al. [2012] also argue that large quote cancellation rates may be
    indicative of low liquidity, as participants are publishing quotes that do not
    intend to get filled. They discuss four categories of predatory algorithms:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Easley 等人 [2012] 还认为，大量的报价取消率可能表明流动性低，因为参与者发布的报价并不打算被成交。
- en: '**Quote stuffers:** They engage in “latency arbitrage.” Their strategy involves
    overwhelming an exchange with messages, with the sole intention of slowing down
    competing algorithms, which are forced to parse messages that only the originators
    know can be ignored.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**报价填塞者：** 他们参与“延迟套利”。他们的策略是用信息淹没交易所，唯一的目的是减缓竞争算法的速度，迫使其解析只有发起者知道可以忽略的消息。'
- en: '**Quote danglers:** This strategy sends quotes that force a squeezed trader
    to chase a price against her interests. O''Hara [2011] presents evidence of their
    disruptive activities.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**报价悬挂者：** 这一策略发送报价，迫使被挤压的交易者追逐与其利益相悖的价格。O''Hara [2011] 提供了其扰乱活动的证据。'
- en: '**Liquidity squeezers:** When a distressed large investor is forced to unwind
    her position, predatory algorithms trade in the same direction, draining as much
    liquidity as possible. As a result, prices overshoot and they make a profit (Carlin
    et al. [2007]).'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流动性挤压者：** 当一个处于困境的大型投资者被迫平仓时，掠夺性算法会朝同一方向交易，尽可能地抽取流动性。因此，价格会过度波动，从中获利（Carlin
    等人 [2007]）。'
- en: '**Pack hunters:** Predators hunting independently become aware of one another''s
    activities, and form a pack in order to maximize the chances of triggering a cascading
    effect (Donefer [2010], Fabozzi et al. [2011], Jarrow and Protter [2011]). NANEX
    [2011] shows what appears to be pack hunters forcing a stop loss. Although their
    individual actions are too small to raise the regulator''s suspicion, their collective
    action may be market-manipulative. When that is the case, it is very hard to prove
    their collusion, since they coordinate in a decentralized, spontaneous manner.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成群捕猎者：** 独立捕猎的掠夺者会意识到彼此的活动，并组成一个团队以最大化触发级联效应的机会（Donefer [2010]，Fabozzi 等人
    [2011]，Jarrow 和 Protter [2011]）。NANEX [2011] 显示了似乎是成群捕猎者强制止损的情况。尽管他们各自的行为太小，无法引起监管者的怀疑，但他们的集体行为可能是市场操控的。当这种情况发生时，很难证明他们的勾结，因为他们以去中心化、自发的方式进行协调。'
- en: These predatory algorithms utilize quote cancellations and various order types
    in an attempt to adversely select market makers. They leave different signatures
    in the trading record, and measuring the rates of quote cancellation, limit orders,
    and market orders can be the basis for useful features, informative of their intentions.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这些掠夺性算法利用报价取消和各种订单类型，试图对市场制造者进行不利选择。它们在交易记录中留下不同的特征，测量报价取消率、限价单和市场订单可以为其意图提供有用的特征基础。
- en: '**19.6.3 Time-Weighted Average Price Execution Algorithms**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.6.3 时间加权平均价格执行算法**'
- en: Easley et al. [2012] demonstrate how to recognize the presence of execution
    algorithms that target a particular time-weighted average price (TWAP). A TWAP
    algorithm is an algorithm that slices a large order into small ones, which are
    submitted at regular time intervals, in an attempt to achieve a pre-defined time-weighted
    average price. These authors take a sample of E-mini S&P 500 futures trades between
    November 7, 2010, and November 7, 2011\. They divide the day into 24 hours, and
    for every hour, they add the volume traded at each second, irrespective of the
    minute. Then they plot these aggregate volumes as a surface where the x-axis is
    assigned to volume per second, the y-axis is assigned to hour of the day, and
    the z-axis is assigned to the aggregate volume. This analysis allows us to see
    the distribution of volume within each minute as the day passes, and search for
    low-frequency traders executing their massive orders on a chronological time-space.
    The largest concentrations of volume within a minute tend to occur during the
    first few seconds, for almost every hour of the day. This is particularly true
    at 00:00–01:00 GMT (around the open of Asian markets), 05:00–09:00 GMT (around
    the open of U.K. and European equities), 13:00–15:00 GMT (around the open of U.S.
    equities), and 20:00–21:00 GMT (around the close of U.S. equities).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Easley 等 [2012] 演示了如何识别针对特定时间加权平均价格（TWAP）的执行算法的存在。TWAP算法是一种将大订单分割成小订单的算法，这些小订单在固定时间间隔内提交，以试图实现预定义的时间加权平均价格。这些作者以2010年11月7日至2011年11月7日期间的E-mini
    S&P 500期货交易为样本。他们将一天分为24小时，并为每个小时统计每秒的交易量，而不考虑分钟。然后，他们将这些总交易量绘制成一个表面，其中x轴表示每秒的交易量，y轴表示一天中的小时，z轴表示总交易量。这一分析使我们能够看到一天中每分钟内交易量的分布，并寻找在时间-空间上执行其大额订单的低频交易者。在几乎每天的每个小时内，分钟内交易量的最大集中往往发生在前几秒。这在00:00–01:00
    GMT（亚洲市场开盘时）、05:00–09:00 GMT（英国和欧洲股票开盘时）、13:00–15:00 GMT（美国股票开盘时）和20:00–21:00
    GMT（美国股票收盘时）尤为明显。
- en: A useful ML feature may be to evaluate the order imbalance at the beginning
    of every minute, and determine whether there is a persistent component. This can
    then be used to front-run large institutional investors, while the larger portion
    of their TWAP order is still pending.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有用的机器学习特征可能是评估每分钟开始时的订单不平衡，并确定是否存在持续的成分。这可以用于提前跟踪大型机构投资者，同时他们的TWAP订单的大部分仍在待处理。
- en: '**19.6.4 Options Markets**'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.6.4 期权市场**'
- en: Muravyev et al. [2013] use microstructural information from U.S. stocks and
    options to study events where the two markets disagree. They characterize such
    disagreement by deriving the underlying bid-ask range implied by the put-call
    parity quotes and comparing it to the actual bid-ask range of the stock. They
    conclude that disagreements tend to be resolved in favor of stock quotes, meaning
    that option *quotes* do not contain economically significant information. At the
    same time, they do find that option *trades* contain information not included
    in the stock price. These findings will not come as a surprise to portfolio managers
    used to trade relatively illiquid products, including stock options. Quotes can
    remain irrational for prolonged periods of time, even as sparse prices are informative.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: Muravyev 等 [2013] 利用美国股票和期权的微观结构信息研究两个市场不一致的事件。他们通过推导由看跌-看涨平价报价隐含的基础买卖差价范围并将其与股票的实际买卖差价范围进行比较，来表征这种不一致性。他们得出结论，争议往往倾向于股票报价，这意味着期权的
    *报价* 不包含经济上显著的信息。同时，他们确实发现期权的 *交易* 包含了股票价格中未包含的信息。这些发现对于习惯于交易相对流动性较低产品（包括股票期权）的投资组合经理来说并不意外。报价可能在较长时间内保持非理性，即使稀疏的价格也很有信息量。
- en: Cremers and Weinbaum [2010] find that stocks with relatively expensive calls
    (stocks with both a high volatility spread and a high change in the volatility
    spread) outperform stocks with relatively expensive puts (stocks with both a low
    volatility spread and a low change in the volatility spread) by 50 basis points
    per week. This degree of predictability is larger when option liquidity is high
    and stock liquidity is low.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: Cremers 和 Weinbaum [2010] 发现，相对昂贵的看涨期权的股票（同时具有高波动率差和高波动率差变化的股票）每周的表现优于相对昂贵的看跌期权的股票（同时具有低波动率差和低波动率差变化的股票）50个基点。当期权流动性较高而股票流动性较低时，这种可预测性更强。
- en: In line with these observations, useful features can be extracted from computing
    the put-call implied stock price, derived from option trades. Futures prices only
    represent mean or expected future values. But option prices allow us to derive
    the entire distribution of outcomes being priced. An ML algorithm can search for
    patterns across the Greek letters quoted at various strikes and expiration dates.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 与这些观察一致，可以通过计算从期权交易衍生的买权-卖权隐含股价提取有用特征。期货价格仅代表平均或预期的未来值。但期权价格使我们能够推导出被定价的结果的整个分布。机器学习算法可以在不同执行价格和到期日的希腊字母中搜索模式。
- en: '**19.6.5 Serial Correlation of Signed Order Flow**'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.6.5 签名订单流的序列相关性**'
- en: 'Toth et al. [2011] study the signed order flow of London Stock Exchange stocks,
    and find that order signs are positively autocorrelated for many days. They attribute
    this observation to two candidate explanations: Herding and order splitting. They
    conclude that on timescales of less than a few hours, the persistence of order
    flow is overwhelmingly due to splitting rather than herding.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Toth等人 [2011] 研究了伦敦证券交易所股票的签名订单流，发现订单符号在许多天内是正自相关的。他们将这一观察归因于两个候选解释：羊群效应和订单分拆。他们得出结论，在几小时以下的时间尺度上，订单流的持续性主要是由于分拆而非羊群效应。
- en: Given that market microstructure theory attributes the persistency of order
    flow imbalance to the presence of informed traders, it makes sense to measure
    the strength of such persistency through the serial correlation of the signed
    volumes. Such a feature would be complementary to the features we studied in Section
    19.5.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于市场微观结构理论将订单流不平衡的持续性归因于知情交易者的存在，通过签名成交量的序列相关性来衡量这种持续性的强度是合理的。这一特征将与我们在第19.5节中研究的特征相辅相成。
- en: '**19.7 What Is Microstructural Information?**'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**19.7 什么是微观结构信息？**'
- en: Let me conclude this chapter by addressing what I consider to be a major flaw
    in the market microstructure literature. Most articles and books on this subject
    study asymmetric information, and how strategic agents utilize it to profit from
    market makers. But how is information exactly defined in the context of trading?
    Unfortunately, there is no widely accepted definition of information in a microstructural
    sense, and the literature uses this concept in a surprisingly loose, rather informal
    way (López de Prado [2017]). This section proposes a proper definition of information,
    founded on signal processing, that can be applied to microstructural studies.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 让我通过讨论我认为市场微观结构文献中的一个主要缺陷来结束本章。大多数关于这个主题的文章和书籍研究的是不对称信息，以及战略性参与者如何利用这些信息从市场制造商中获利。但是，在交易的背景下，信息究竟是如何定义的呢？不幸的是，在微观结构意义上，并没有广泛接受的信息定义，文献中以一种令人惊讶的松散且相对非正式的方式使用这一概念（López
    de Prado [2017]）。本节提出一个基于信号处理的适当信息定义，可以应用于微观结构研究。
- en: Consider a features matrix *X* = { *X [*t*]* } [*t* = 1, …, *T*] that contains
    information typically used by market makers to determine whether they should provide
    liquidity at a particular level, or cancel their passive quotes. For example,
    the columns could be all of the features discussed in this chapter, like VPIN,
    Kyle's lambda, cancellation rates, etc. Matrix *X* has one row for each decision
    point. For example, a market maker may reconsider the decision to either provide
    liquidity or pull out of the market every time 10,000 contracts are traded, or
    whenever there is a significant change in prices (recall sampling methods in Chapter
    2), etc. First, we derive an array *y* = { *y [*t*]* } [*t* = 1, …, *T*] that
    assigns a label 1 to an observation that resulted in a market-making profit, and
    labels as 0 an observation that resulted in a market-making loss (see Chapter
    3 for labeling methods). Second, we fit a classifier on the training set ( *X*
    , *y* ). Third, as new out-of-sample observations arrive τ > *T* , we use the
    fit classifier to predict the label ![](Image00438.jpg) . Fourth, we derive the
    cross-entropy loss of these predictions, *L [τ] * , as described in Chapter 9,
    Section 9.4\. Fifth, we fit a kernel density estimator (KDE) on the array of negative
    cross-entropy losses, { − *L [*t*] * } [*t*  =  *T*  + 1, …, τ] , to derive its
    cumulative distribution function, *F.* Sixth, we estimate the microstructural
    information at time *t* as φ [τ] = *F* [ − *L [τ] * ], where φ [τ] ∈ (0, 1).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个特征矩阵*X* = {*X [*t*]*} [*t* = 1, …, *T*]，其中包含做市商通常用来判断是否在特定水平提供流动性或取消被动报价的信息。例如，列可以是本章讨论的所有特征，如VPIN、凯尔的λ、取消率等。矩阵*X*每个决策点有一行。例如，做市商可能在每次交易10,000份合约时，或在价格发生显著变化时（回忆第二章中的抽样方法）重新考虑提供流动性或退出市场的决定等。首先，我们导出一个数组*y*
    = {*y [*t*]*} [*t* = 1, …, *T*]，将标记1分配给导致做市获利的观察，并将标记0分配给导致做市亏损的观察（请参见第三章的标记方法）。其次，我们在训练集（*X*，*y*）上拟合一个分类器。第三，当新的样本外观察到来时τ
    > *T*，我们使用拟合的分类器预测标签！[](Image00438.jpg)。第四，我们计算这些预测的交叉熵损失*L [τ]*，如第9章第9.4节所述。第五，我们在负交叉熵损失数组{−*L
    [*t*]*}[*t* = *T* + 1, …, τ]上拟合一个核密度估计器（KDE），以导出其累积分布函数*F*。第六，我们在时间*t*处估计微观结构信息为φ
    [τ] = *F* [−*L [τ]*]，其中φ [τ] ∈ (0, 1)。
- en: This microstructural information can be understood as the complexity faced by
    market makers’ decision models. Under normal market conditions, market makers
    produce *informed forecasts* with low cross-entropy loss, and are able to profit
    from providing liquidity to position takers. However, in the presence of (asymmetrically)
    informed traders, market makers produce *uninformed forecasts* , as measured by
    high cross-entropy loss, and they are adversely selected. In other words, microstructural
    information can only be defined and measured relative to the predictive power
    of market makers. The implication is that {φ [τ] } should become an important
    feature in your financial ML toolkit.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这种微观结构信息可以理解为市场做市商决策模型面临的复杂性。在正常市场条件下，做市商以低交叉熵损失生成*有信息的预测*，并能够通过向持仓者提供流动性获利。然而，在存在（非对称）有信息交易者的情况下，做市商生成*无信息的预测*，其高交叉熵损失表明他们受到不利选择。换句话说，微观结构信息只能相对于做市商的预测能力来定义和测量。其含义是{φ
    [τ]}应成为您金融机器学习工具包中的一个重要特征。
- en: Consider the events of the flash crash of May 6, 2010\. Market makers wrongly
    predicted that their passive quotes sitting on the bid could be filled and sold
    back at a higher level. The crash was not caused by a single inaccurate prediction,
    but by the accumulation of thousands of prediction errors (Easley et al. [2011]).
    If market makers had monitored the rising cross-entropy loss of their predictions,
    they would have recognized the presence of informed traders and the dangerously
    rising probability of adverse selection. That would have allowed them to widen
    the bid-ask spread to levels that would have stopped the order flow imbalance,
    as sellers would no longer have been willing to sell at those discounts. Instead,
    market makers kept providing liquidity to sellers at exceedingly generous levels,
    until eventually they were forced to stop-out, triggering a liquidity crisis that
    shocked markets, regulators, and academics for months and years.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑 2010 年 5 月 6 日闪电崩盘的事件。市场制造商错误地预测他们在买价上的被动报价能够被成交，并以更高的价格卖出。崩盘并非由单一的错误预测造成，而是由数千个预测错误的积累（Easley
    等人 [2011]）。如果市场制造商监控了他们预测的交叉熵损失上升，他们会意识到有知情交易者的存在，以及不利选择的概率危险地上升。这将使他们能够扩大买卖价差，达到停止订单流失衡的水平，因为卖方将不再愿意以这些折扣出售。相反，市场制造商一直在以极其慷慨的水平向卖方提供流动性，直到最终被迫平仓，触发了一场流动性危机，震惊了市场、监管机构和学术界数月甚至数年。
- en: '**Exercises**'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习**'
- en: From a time series of E-mini S&P 500 futures tick data,
  id: totrans-141
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从 E-mini 标普 500 期货的逐笔数据时间序列中，
- en: Apply the tick rule to derive the series of trade signs.
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用逐笔规则推导交易符号系列。
- en: Compare to the aggressor's side, as provided by the CME (FIX tag 5797). What
    is the accuracy of the tick rule?
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与 CME 提供的攻击方数据进行比较（FIX 标签 5797）。逐笔规则的准确性如何？
- en: Select the cases where FIX tag 5797 disagrees with the tick rule.
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 FIX 标签 5797 与逐笔规则不一致的情况。
- en: Can you see anything distinct that would explain the disagreement?
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你能看到任何不同之处来解释这种分歧吗？
- en: Are these disagreements associated with large price jumps? Or high cancelation
    rates? Or thin quoted sizes?
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些分歧与大幅价格跳跃有关吗？或者高撤单率？或者薄报价规模？
- en: Are these disagreements more likely to occur during periods of high or low market
    activity?
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些分歧在高市场活动期还是低市场活动期更可能发生？
- en: Compute the Roll model on the time series of E-mini S&P 500 futures tick data.
  id: totrans-148
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 E-mini 标普 500 期货逐笔数据的时间序列上计算 Roll 模型。
- en: What are the estimated values of σ ² [*u*] and *c* ?
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: σ ² [*u*] 和 *c* 的估计值是多少？
- en: Knowing that this contract is one of the most liquid products in the world,
    and that it trades at the tightest possible bid-ask spread, are these values in
    line with your expectations?
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 了解到该合约是全球最具流动性的产品之一，并且其交易具有最紧的买卖价差，这些值是否符合你的预期？
- en: 'Compute the high-low volatility estimator ( Section19.3.3.) on E-mini S&P 500
    futures:'
  id: totrans-151
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算 E-mini 标普 500 期货的高低波动率估计器（第 19.3.3 节）：
- en: Using weekly values, how does this differ from the standard deviation of close-to-close
    returns?
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用每周值，这与收盘到收盘收益的标准差有什么不同？
- en: Using daily values, how does this differ from the standard deviation of close-to-close
    returns?
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用每日值，这与收盘到收盘收益的标准差有什么不同？
- en: Using dollar bars, for an average of 50 bars per day, how does this differ from
    the standard deviation of close-to-close returns?
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用美元柱，每天平均 50 根柱，这与收盘到收盘收益的标准差有什么不同？
- en: Apply the Corwin-Schultz estimator to a daily series of E-mini S&P 500 futures.
  id: totrans-155
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将 Corwin-Schultz 估计应用于 E-mini 标普 500 期货的每日序列。
- en: What is the expected bid-ask spread?
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预期的买卖价差是多少？
- en: What is the implied volatility?
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 隐含波动率是什么？
- en: Are these estimates consistent with the earlier results, from exercises 2 and
    3?
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些估计与练习 2 和 3 的早期结果一致吗？
- en: 'Compute Kyle''s lambda from:'
  id: totrans-159
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算凯尔的 λ：
- en: tick data.
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 逐笔数据。
- en: a time series of dollar bars on E-mini S&P 500 futures, where
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 E-mini 标普 500 期货上形成一个美元柱的时间序列，其中
- en: '*b [*t*]* is the volume-weighted average of the trade signs.'
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*b [*t*]* 是交易符号的成交量加权平均。'
- en: '*V [*t*]* is the sum of the volumes in that bar.'
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*V [*t*]* 是该柱中的成交量总和。'
- en: Δ*p [*t*]* is the change in price between two consecutive bars.
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Δ*p [*t*]* 是两个连续柱之间价格的变化。
- en: Repeat exercise 5, this time applying Hasbrouck's lambda. Are results consistent?
  id: totrans-165
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 重复练习 5，这次应用哈斯布鲁克的 λ。结果一致吗？
- en: Repeat exercise 5, this time applying Amihud's lambda. Are results consistent?
  id: totrans-166
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 重复练习 5，这次应用阿米哈德的 λ。结果一致吗？
- en: Form a time series of volume bars on E-mini S&P 500 futures,
  id: totrans-167
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在 E-mini 标普 500 期货上形成一个成交量柱的时间序列，
- en: Compute the series of VPIN on May 6, 2010 (flash crash).
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算2010年5月6日的VPIN系列（闪电崩盘）。
- en: Plot the series of VPIN and prices. What do you see?
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绘制VPIN和价格的系列。你看到了什么？
- en: Compute the distribution of order sizes for E-mini S&P 500 futures
  id: totrans-170
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算E-mini S&P 500期货的订单大小分布。
- en: Over the entire period.
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在整个期间。
- en: For May 6, 2010.
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关于2010年5月6日。
- en: Conduct a Kolmogorov-Smirnov test on both distributions. Are they significantly
    different, at a 95% confidence level?
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对两个分布进行Kolmogorov-Smirnov检验。它们在95%的置信水平下显著不同吗？
- en: Compute a time series of daily quote cancellations rates, and the portion of
    market orders, on the E-mini S&P 500 futures dataset.
  id: totrans-174
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算E-mini S&P 500期货数据集中每日报价取消率和市场订单部分的时间序列。
- en: What is the correlation between these two series? Is it statistically significant?
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这两个系列之间的相关性是什么？它在统计上显著吗？
- en: What is the correlation between the two series and daily volatility? Is this
    what you expected?
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这两个系列与每日波动性之间的相关性是什么？这是否是你预期的结果？
- en: 'On the E-mini S&P 500 futures tick data:'
  id: totrans-177
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在E-mini S&P 500期货的逐笔数据上：
- en: Compute the distribution of volume executed within the first 5 seconds of every
    minute.
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每分钟前5秒内执行的交易量分布。
- en: Compute the distribution of volume executed every minute.
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每分钟执行的交易量分布。
- en: Compute the Kolmogorov-Smirnov test on both distributions. Are they significantly
    different, at a 95% confidence level?
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对两个分布进行Kolmogorov-Smirnov检验。它们在95%的置信水平下显著不同吗？
- en: 'On the E-mini S&P 500 futures tick data:'
  id: totrans-181
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在E-mini S&P 500期货的逐笔数据上：
- en: Compute the first-order serial correlation of signed volumes.
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算签名交易量的一阶序列相关性。
- en: Is it statistically significant, at a 95% confidence level?
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在95%的置信水平下，它在统计上显著吗？
- en: '**References**'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**'
- en: 'Abad, D. and J. Yague (2012): “From PIN to VPIN.” *The Spanish Review of Financial
    Economics* , Vol. 10, No. 2, pp.74-83.'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Abad, D. 和 J. Yague (2012): “从PIN到VPIN。” *西班牙金融经济评论*，第10卷，第2期，页码74-83。'
- en: 'Aitken, M. and A. Frino (1996): “The accuracy of the tick test: Evidence from
    the Australian Stock Exchange.” *Journal of Banking and Finance* , Vol. 20, pp.
    1715–1729.'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Aitken, M. 和 A. Frino (1996): “逐笔测试的准确性：来自澳大利亚证券交易所的证据。” *银行与金融学期刊*，第20卷，页码1715–1729。'
- en: 'Amihud, Y. and H. Mendelson (1987): “Trading mechanisms and stock returns:
    An empirical investigation.” *Journal of Finance* , Vol. 42, pp. 533–553.'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Amihud, Y. 和 H. Mendelson (1987): “交易机制与股票收益：一项实证研究。” *金融学期刊*，第42卷，页码533–553。'
- en: 'Amihud, Y. (2002): “Illiquidity and stock returns: Cross-section and time-series
    effects.” *Journal of Financial Markets* , Vol. 5, pp. 31–56.'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Amihud, Y. (2002): “流动性不足与股票收益：横截面与时间序列效应。” *金融市场期刊*，第5卷，页码31–56。'
- en: 'Andersen, T. and O. Bondarenko (2013): “VPIN and the Flash Crash.” *Journal
    of Financial Markets* , Vol. 17, pp.1-46.'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Andersen, T. 和 O. Bondarenko (2013): “VPIN与闪电崩盘。” *金融市场期刊*，第17卷，页码1-46。'
- en: 'Beckers, S. (1983): “Variances of security price returns based on high, low,
    and closing prices.” *Journal of Business* , Vol. 56, pp. 97–112.'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Beckers, S. (1983): “基于高、低和收盘价格的证券价格收益的方差。” *商业期刊*，第56卷，页码97–112。'
- en: 'Bethel, E. W., Leinweber. D., Rubel, O., and K. Wu (2012): “Federal market
    information technology in the post–flash crash era: Roles for supercomputing.”
    *Journal of Trading* , Vol. 7, No. 2, pp. 9–25.'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Bethel, E. W.、Leinweber, D.、Rubel, O. 和 K. Wu (2012): “闪电崩盘后时代的联邦市场信息技术：超级计算的角色。”
    *交易期刊*，第7卷，第2期，页码9–25。'
- en: 'Carlin, B., M. Sousa Lobo, and S. Viswanathan (2005): “Episodic liquidity crises.
    Cooperative and predatory trading.” *Journal of Finance* , Vol. 42, No. 5 (October),
    pp. 2235–2274.'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Carlin, B.、M. Sousa Lobo 和 S. Viswanathan (2005): “偶发流动性危机：合作与掠夺性交易。” *金融学期刊*，第42卷，第5期（10月），页码2235–2274。'
- en: 'Cheung, W., R. Chou, A. Lei (2015): “Exchange-traded barrier option and VPIN.”
    *Journal of Futures Markets* , Vol. 35, No. 6, pp. 561-581.'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Cheung, W.、R. Chou、A. Lei (2015): “交易所交易障碍期权与VPIN。” *期货市场期刊*，第35卷，第6期，页码561-581。'
- en: 'Corwin, S. and P. Schultz (2012): “A simple way to estimate bid-ask spreads
    from daily high and low prices.” *Journal of Finance* , Vol. 67, No. 2, pp. 719–760.'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Corwin, S. 和 P. Schultz (2012): “从每日高低价格估算买卖差价的一种简单方法。” *金融学期刊*，第67卷，第2期，页码719–760。'
- en: 'Cremers, M. and D. Weinbaum (2010): “Deviations from put-call parity and stock
    return predictability.” *Journal of Financial and Quantitative Analysis* , Vol.
    45, No. 2 (April), pp. 335–367.'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Cremers, M. 和 D. Weinbaum (2010): “偏离期权平价与股票收益可预测性。” *金融与数量分析期刊*，第45卷，第2期（4月），页码335–367。'
- en: 'Donefer, B. (2010): “Algos gone wild. Risk in the world of automated trading
    strategies.” *Journal of Trading* , Vol. 5, pp. 31–34.'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Donefer, B. (2010): “算法失控：自动交易策略世界中的风险。” *交易期刊*，第5卷，页码31–34。'
- en: 'Easley, D., N. Kiefer, M. O''Hara, and J. Paperman (1996): “Liquidity, information,
    and infrequently traded stocks.” *Journal of Finance* , Vol. 51, No. 4, pp. 1405–1436.'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Easley, D., N. Kiefer, M. O''Hara 和 J. Paperman (1996): “流动性、信息与不常交易的股票。” *金融期刊*，第51卷，第4期，第1405–1436页。'
- en: 'Easley, D., R. Engle, M. O''Hara, and L. Wu (2008): “Time-varying arrival rates
    of informed and uninformed traders.” *Journal of Financial Econometrics* , Vol.
    6, No. 2, pp. 171–207.'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Easley, D., R. Engle, M. O''Hara 和 L. Wu (2008): “信息与无信息交易者的到达率随时间变化。” *金融计量经济学期刊*，第6卷，第2期，第171–207页。'
- en: 'Easley, D., M. López de Prado, and M. O''Hara (2011): “The microstructure of
    the flash crash.” *Journal of Portfolio Management* , Vol. 37, No. 2 (Winter),
    pp. 118–128.'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Easley, D., M. López de Prado 和 M. O''Hara (2011): “闪崩的微观结构。” *投资组合管理期刊*，第37卷，第2期（冬季），第118–128页。'
- en: 'Easley, D., M. López de Prado, and M. O''Hara (2012a): “Flow toxicity and liquidity
    in a high frequency world.” *Review of Financial Studies* , Vol. 25, No. 5, pp.
    1457–1493.'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Easley, D., M. López de Prado 和 M. O''Hara (2012a): “高频世界中的流动性毒性与流动性。” *金融研究评论*，第25卷，第5期，第1457–1493页。'
- en: 'Easley, D., M. López de Prado, and M. O''Hara (2012b): “The volume clock: Insights
    into the high frequency paradigm.” *Journal of Portfolio Management* , Vol. 39,
    No. 1, pp. 19–29.'
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Easley, D., M. López de Prado 和 M. O''Hara (2012b): “成交量时钟：高频范式的洞察。” *投资组合管理期刊*，第39卷，第1期，第19–29页。'
- en: 'Easley, D., M. López de Prado, and M. O''Hara (2013): *High-Frequency Trading:
    New Realities for Traders, Markets and Regulators* , 1st ed. Risk Books.'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Easley, D., M. López de Prado 和 M. O''Hara (2013): *高频交易：交易者、市场与监管者的新现实*，第1版。风险书籍。'
- en: 'Easley, D., M. López de Prado, and M. O''Hara (2016): “Discerning information
    from trade data.” *Journal of Financial Economics* , Vol. 120, No. 2, pp. 269–286.'
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Easley, D., M. López de Prado 和 M. O''Hara (2016): “从交易数据中辨别信息。” *金融经济学期刊*，第120卷，第2期，第269–286页。'
- en: 'Eisler, Z., J. Bouchaud, and J. Kockelkoren (2012): “The impact of order book
    events: Market orders, limit orders and cancellations.” *Quantitative Finance*
    , Vol. 12, No. 9, pp. 1395–1419.'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Eisler, Z., J. Bouchaud 和 J. Kockelkoren (2012): “订单簿事件的影响：市场订单、限价订单和取消。” *定量金融*，第12卷，第9期，第1395–1419页。'
- en: 'Fabozzi, F., S. Focardi, and C. Jonas (2011): “High-frequency trading. Methodologies
    and market impact.” *Review of Futures Markets* , Vol. 19, pp. 7–38.'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Fabozzi, F., S. Focardi 和 C. Jonas (2011): “高频交易。方法论与市场影响。” *期货市场评论*，第19卷，第7–38页。'
- en: 'Hasbrouck, J. (2007): *Empirical Market Microstructure* , 1st ed. Oxford University
    Press.'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Hasbrouck, J. (2007): *实证市场微观结构*，第1版。牛津大学出版社。'
- en: 'Hasbrouck, J. (2009): “Trading costs and returns for US equities: Estimating
    effective costs from daily data.” *Journal of Finance* , Vol. 64, No. 3, pp. 1445–1477.'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Hasbrouck, J. (2009): “美国股票的交易成本与回报：从每日数据中估计有效成本。” *金融期刊*，第64卷，第3期，第1445–1477页。'
- en: 'Jarrow, R. and P. Protter (2011): “A dysfunctional role of high frequency trading
    in electronic markets.” *International Journal of Theoretical and Applied Finance*
    , Vol. 15, No. 3.'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Jarrow, R. 和 P. Protter (2011): “高频交易在电子市场中的功能失调角色。” *理论与应用金融国际期刊*，第15卷，第3期。'
- en: 'Kim, C., T. Perry, and M. Dhatt (2014): “Informed trading and price discovery
    around the clock.” *Journal of Alternative Investments* , Vol 17, No. 2, pp. 68-81.'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Kim, C., T. Perry 和 M. Dhatt (2014): “全天候的信息交易与价格发现。” *替代投资期刊*，第17卷，第2期，第68-81页。'
- en: 'Kyle, A. (1985): “Continuous auctions and insider trading.” *Econometrica*
    , Vol. 53, pp. 1315–1336.'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Kyle, A. (1985): “连续拍卖与内幕交易。” *计量经济学*，第53卷，第1315–1336页。'
- en: 'Lee, C. and M. Ready (1991): “Inferring trade direction from intraday data.”
    *Journal of Finance* , Vol. 46, pp. 733–746.'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Lee, C. 和 M. Ready (1991): “从日内数据推断交易方向。” *金融期刊*，第46卷，第733–746页。'
- en: 'López de Prado, M. (2017): “Mathematics and economics: A reality check.” *Journal
    of Portfolio Management* , Vol. 43, No. 1, pp. 5–8.'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'López de Prado, M. (2017): “数学与经济学：现实检查。” *投资组合管理期刊*，第43卷，第1期，第5–8页。'
- en: 'Muravyev, D., N. Pearson, and J. Broussard (2013): “Is there price discovery
    in equity options?” *Journal of Financial Economics* , Vol. 107, No. 2, pp. 259–283.'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Muravyev, D., N. Pearson 和 J. Broussard (2013): “股票期权中存在价格发现吗？” *金融经济学期刊*，第107卷，第2期，第259–283页。'
- en: 'NANEX (2011): “Strange days: June 8, 2011—NatGas Algo.” NANEX blog. Available
    at [www.nanex.net/StrangeDays/06082011.html](http://www.nanex.net/StrangeDays/06082011.html)
    .'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'NANEX (2011): “奇怪的日子：2011年6月8日—NatGas算法。” NANEX博客。可在[www.nanex.net/StrangeDays/06082011.html](http://www.nanex.net/StrangeDays/06082011.html)查看。'
- en: 'O''Hara, M. (1995): *Market Microstructure* , 1st ed. Blackwell, Oxford.'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'O''Hara, M. (1995): *市场微观结构*，第1版。布莱克威尔，牛津。'
- en: 'O''Hara, M. (2011): “What is a quote?” *Journal of Trading* , Vol. 5, No. 2
    (Spring), pp. 10–15.'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'O''Hara, M. (2011): “什么是报价？” *交易期刊*，第5卷，第2期（春季），第10–15页。'
- en: 'Parkinson, M. (1980): “The extreme value method for estimating the variance
    of the rate of return.” *Journal of Business* , Vol. 53, pp. 61–65.'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Parkinson, M. (1980): “极值法估计收益率方差。” *商业期刊* , 第53卷，页61–65。'
- en: 'Patzelt, F. and J. Bouchaud (2017): “Universal scaling and nonlinearity of
    aggregate price impact in financial markets.” Working paper. Available at [https://arxiv.org/abs/1706.04163.](https://arxiv.org/abs/1706.04163.)'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Patzelt, F. 和 J. Bouchaud (2017): “金融市场中集体价格影响的普遍缩放性和非线性。” 工作论文。可在 [https://arxiv.org/abs/1706.04163.](https://arxiv.org/abs/1706.04163.)
    获取。'
- en: 'Roll, R. (1984): “A simple implicit measure of the effective bid-ask spread
    in an efficient market.” *Journal of Finance* , Vol. 39, pp. 1127–1139.'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Roll, R. (1984): “在有效市场中有效买卖价差的简单隐含测量。” *金融期刊* , 第39卷，页1127–1139。'
- en: 'Stigler, Stephen M. (1981): “Gauss and the invention of least squares.” *Annals
    of Statistics* , Vol. 9, No. 3, pp. 465–474.'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Stigler, Stephen M. (1981): “高斯与最小二乘法的发明。” *统计年鉴* , 第9卷，第3期，页465–474。'
- en: 'Song, J, K. Wu and H. Simon (2014): “Parameter analysis of the VPIN (volume
    synchronized probability of informed trading) metric.” In Zopounidis, C., ed.,
    *Quantitative Financial Risk Management: Theory and Practice* , 1 ^(st) ed. Wiley.'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Song, J, K. Wu 和 H. Simon (2014): “VPIN（量化同步信息交易概率）指标的参数分析。” 在 Zopounidis,
    C. 主编, *定量金融风险管理：理论与实践* , 第1版，Wiley出版。'
- en: 'Toth, B., I. Palit, F. Lillo, and J. Farmer (2011): “Why is order flow so persistent?”
    Working paper. Available at [https://arxiv.org/abs/1108.1632.](https://arxiv.org/abs/1108.1632.)'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Toth, B., I. Palit, F. Lillo 和 J. Farmer (2011): “为什么订单流如此持续？” 工作论文。可在 [https://arxiv.org/abs/1108.1632.](https://arxiv.org/abs/1108.1632.)
    获取。'
- en: 'Van Ness, B., R. Van Ness, and S. Yildiz (2017): “The role of HFTs in order
    flow toxicity and stock price variance, and predicting changes in HFTs’ liquidity
    provisions.” *Journal of Economics and Finance* , Vol. 41, No. 4, pp. 739–762.'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Van Ness, B., R. Van Ness 和 S. Yildiz (2017): “HFT在订单流毒性和股票价格方差中的作用，以及预测HFT流动性提供的变化。”
    *经济与金融期刊* , 第41卷，第4期，页739–762。'
- en: 'Wei, W., D. Gerace, and A. Frino (2013): “Informed trading, flow toxicity and
    the impact on intraday trading factors.” *Australasian Accounting Business and
    Finance Journal* , Vol. 7, No. 2, pp. 3–24.'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Wei, W., D. Gerace 和 A. Frino (2013): “知情交易、流动毒性及其对日内交易因素的影响。” *澳大利亚会计商业与金融期刊*
    , 第7卷，第2期，页3–24。'
- en: '**PART 5**'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '**第5部分**'
- en: '**High-Performance Computing Recipes**'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '**高性能计算秘籍**'
- en: '[Chapter 20 Multiprocessing and Vectorization](text00004.html#filepos0001034475)'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[第20章 多处理与向量化](text00004.html#filepos0001034475)'
- en: '[Chapter 21 Brute Force and Quantum Computers](text00004.html#filepos0001074501)'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[第21章 暴力破解与量子计算机](text00004.html#filepos0001074501)'
- en: '[Chapter 22 High-Performance Computational Intelligence and Forecasting Technologies](text00004.html#filepos0001099298)'
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[第22章 高性能计算智能与预测技术](text00004.html#filepos0001099298)'
- en: '**CHAPTER 20**'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**第20章**'
- en: '**Multiprocessing and Vectorization**'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '**多处理与向量化**'
- en: '**20.1 Motivation**'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.1 动机**'
- en: Multiprocessing is essential to ML. ML algorithms are computationally intensive,
    and they will require an efficient use of all your CPUs, servers, and clusters.
    For this reason, most of the functions presented throughout this book were designed
    for asynchronous multiprocessing. For example, we have made frequent use of a
    mysterious function called `mpPandasObj` , without ever defining it. In this chapter
    we will explain what this function does. Furthermore, we will study in detail
    how to develop multiprocessing engines. The structure of the programs presented
    in this chapter is agnostic to the hardware architecture used to execute them,
    whether we employ the cores of a single server or cores distributed across multiple
    interconnected servers (e.g., in a high-performance computing cluster or a cloud).
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 多处理对机器学习至关重要。机器学习算法计算密集，需要高效利用所有的CPU、服务器和集群。因此，本书中介绍的大多数功能都是为异步多处理设计的。例如，我们频繁使用一个神秘的函数`mpPandasObj`，而从未定义它。在本章中，我们将解释该函数的功能。此外，我们将详细研究如何开发多处理引擎。本章介绍的程序结构与执行它们所用的硬件架构无关，无论我们使用单个服务器的核心还是分布在多个互连服务器上的核心（例如，在高性能计算集群或云中）。
- en: '**20.2 Vectorization Example**'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.2 向量化示例**'
- en: Vectorization, also known as array programming, is the simplest example of parallelization,
    whereby an operation is applied at once to the entire set of values. As a minimal
    example, suppose that you need to do a brute search through a 3-dimensional space,
    with 2 nodes per dimension. The un-vectorized implementation of that Cartesian
    product will look something like Snippet 20.1\. How would this code look if you
    had to search through 100 dimensions, or if the number of dimensions was defined
    by the user during runtime?
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 向量化，也称为数组编程，是并行化的最简单示例，其中操作一次性应用于整个值集。举个简单的例子，假设你需要在一个三维空间中进行暴力搜索，每个维度有 2 个节点。未向量化的笛卡尔积实现将类似于片段
    20.1。假如你需要在 100 个维度中搜索，或者如果维度的数量在运行时由用户定义，这段代码会是什么样子呢？
- en: '**SNIPPET 20.1 UN-VECTORIZED CARTESIAN PRODUCT**'
  id: totrans-236
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 20.1 未向量化的笛卡尔积**'
- en: '![](Image00730.jpg)'
  id: totrans-237
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00730.jpg)'
- en: 'A vectorized solution would replace all explicit iterators (e.g., `For. . .loops`
    ) with matrix algebra operations or compiled iterators or generators. Snippet 20.2
    implements the vectorized version of Snippet 20.1\. The vectorized version is
    preferable for four reasons: (1) slow nested `For. . .loops` are replaced with
    fast iterators; (2) the code infers the dimensionality of the mesh from the dimensionality
    of `dict0` ; (3) we could run 100 dimensions without having to modify the code,
    or need 100 `For. . .loops` ; and (4) under the hood, Python can run operations
    in C or C + + .'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 向量化的解决方案将用矩阵代数操作或编译的迭代器或生成器替换所有显式迭代器（例如，`For. . .loops`）。片段 20.2 实现了片段 20.1
    的向量化版本。向量化版本有四个优点：（1）慢速的嵌套 `For. . .loops` 被快速迭代器替换；（2）代码从 `dict0` 的维度推断网格的维度；（3）我们可以在不修改代码的情况下运行
    100 个维度，而无需 100 个 `For. . .loops`；（4）在内部，Python 可以在 C 或 C++ 中运行操作。
- en: '**SNIPPET 20.2 VECTORIZED CARTESIAN PRODUCT**'
  id: totrans-239
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 20.2 向量化的笛卡尔积**'
- en: '![](Image00313.jpg)'
  id: totrans-240
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00313.jpg)'
- en: '**20.3 Single-Thread vs. Multithreading vs. Multiprocessing**'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.3 单线程与多线程与多进程**'
- en: A modern computer has multiple CPU sockets. Each CPU has many cores (processors),
    and each core has several threads. Multithreading is the technique by which several
    applications are run in parallel on two or more threads under the same core. One
    advantage of multithreading is that, because the applications share the same core,
    they share the same memory space. That introduces the risk that several applications
    may write on the same memory space at the same time. To prevent that from happening,
    the Global Interpreter Lock (GIL) assigns write access to one thread per core
    at a time. Under the GIL, Python's multithreading is limited to one thread per
    processor. For this reason, Python achieves parallelism through multiprocessing
    rather than through actual multithreading. Processors do not share the same memory
    space, hence multiprocessing does not risk writing to the same memory space; however,
    that also makes it harder to share objects between processes.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 现代计算机拥有多个 CPU 插槽。每个 CPU 有多个核心（处理器），每个核心有多个线程。多线程是一种在同一核心的两个或多个线程上并行运行多个应用程序的技术。多线程的一个优势是，由于应用程序共享同一个核心，它们共享同一个内存空间。这引入了多个应用程序可能同时写入同一内存空间的风险。为防止这种情况发生，全局解释器锁（GIL）一次只为每个核心分配一个线程的写入权限。在
    GIL 的限制下，Python 的多线程只能在每个处理器上使用一个线程。因此，Python 通过多进程而非实际的多线程实现并行处理。处理器不共享同一内存空间，因此多进程不会存在写入同一内存空间的风险；然而，这也使得在进程之间共享对象变得更加困难。
- en: Python functions implemented for running on a single-thread will use only a
    fraction of a modern computer's, server's, or cluster's power. Let us see an example
    of how a simple task can be run inefficiently when implemented for single-thread
    execution. Snippet 20.3 finds the earliest time 10,000 Gaussian processes of length
    1,000 touch a symmetric double barrier of width 50 times the standard deviation.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 为单线程执行而实现的 Python 函数只会利用现代计算机、服务器或集群的部分性能。让我们看看一个简单任务在单线程执行时如何低效地运行的例子。片段 20.3
    找到 10,000 个长度为 1,000 的高斯过程首次触碰宽度为标准差 50 倍的对称双障碍的最早时间。
- en: '**SNIPPET 20.3 SINGLE-THREAD IMPLEMENTATION OF A ONE-TOUCH DOUBLE BARRIER**'
  id: totrans-244
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 20.3 单线程实现的一次触摸双障碍**'
- en: '![](Image00364.jpg)'
  id: totrans-245
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00364.jpg)'
- en: Compare this implementation with Snippet 20.4\. Now the code splits the previous
    problem into 24 tasks, one per processor. The tasks are then run asynchronously
    in parallel, using 24 processors. If you run the same code on a cluster with 5000
    CPUs, the elapsed time will be about 1/5000 of the single-thread implementation.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 将此实现与代码片段20.4进行比较。现在代码将之前的问题分为24个任务，每个处理器一个。然后，任务在24个处理器上异步并行运行。如果在一个拥有5000个CPU的集群上运行相同的代码，经过的时间将大约是单线程实现的1/5000。
- en: '**SNIPPET 20.4 MULTIPROCESSING IMPLEMENTATION OF A ONE-TOUCH DOUBLE BARRIER**'
  id: totrans-247
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**代码片段20.4 一次触摸双障碍的多处理实现**'
- en: '![](Image00825.jpg)'
  id: totrans-248
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00825.jpg)'
- en: Moreover, you could implement the same code to multiprocess a vectorized function,
    as we did with function `applyPtSlOnT1` in Chapter 3, where parallel processes
    execute subroutines that include vectorized pandas objects. In this way, you will
    achieve two levels of parallelization at once. But why stop there? You could achieve
    three levels of parallelization at once by running multiprocessed instances of
    vectorized code in an HPC cluster, where each node in the cluster provides the
    third level of parallelization. In the next sections, we will explain how multiprocessing
    works.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你可以实现相同的代码来多处理一个向量化函数，正如我们在第3章中对函数`applyPtSlOnT1`所做的那样，其中并行进程执行包括向量化pandas对象的子例程。这样，你将同时实现两个层次的并行化。但为什么止步于此？你还可以通过在HPC集群中运行向量化代码的多进程实例一次性实现三个层次的并行化，其中集群中的每个节点提供第三层并行化。在接下来的部分中，我们将解释多处理的工作原理。
- en: '**20.4 Atoms and Molecules**'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.4 原子和分子**'
- en: When preparing jobs for parallelization, it is useful to distinguish between
    atoms and molecules. Atoms are indivisible tasks. Rather than carrying out all
    these tasks sequentially in a single thread, we want to group them into molecules,
    which can be processed in parallel using multiple processors. Each molecule is
    a subset of atoms that will be processed sequentially, by a callback function,
    using a single thread. Parallelization takes place at the molecular level.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备并行化作业时，区分原子和分子是很有用的。原子是不可分割的任务。我们希望将这些任务分组为分子，而不是在单个线程中顺序执行所有任务，这样可以使用多个处理器并行处理。每个分子是将由回调函数顺序处理的一组原子，使用单个线程。并行化在分子级别进行。
- en: '**20.4.1 Linear Partitions**'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.4.1 线性划分**'
- en: The simplest way to form molecules is to partition a list of atoms in subsets
    of equal size, where the number of subsets is the minimum between the number of
    processors and the number of atoms. For *N* subsets we need to find the *N + 1*
    indices that enclose the partitions. This logic is demonstrated in Snippet 20.5.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 形成分子最简单的方法是将原子列表分成相等大小的子集，其中子集的数量是处理器数量与原子数量之间的最小值。对于*N*个子集，我们需要找到*N + 1*个索引来划分分区。这个逻辑在代码片段20.5中得到了展示。
- en: '**SNIPPET 20.5 THE** `**LINPARTS**` **FUNCTION**'
  id: totrans-254
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**代码片段20.5 `**LINPARTS**` 函数**'
- en: '![](Image00255.jpg)'
  id: totrans-255
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00255.jpg)'
- en: It is common to encounter operations that involve two nested loops. For example,
    computing a SADF series (Chapter 17), evaluating multiple barrier touches (Chapter
    3), or computing a covariance matrix on misaligned series. In these situations,
    a linear partition of the atomic tasks would be inefficient, because some processors
    would have to solve a much larger number of operations than others, and the calculation
    time will depend on the heaviest molecule. A partial solution is to partition
    the atomic tasks in a number of jobs that is a multiple of the number of processors,
    then front-load the jobs queue with the heavy molecules. In this way, the light
    molecules will be assigned to processors that have completed the heavy molecules
    first, keeping all CPUs busy until the job queue is depleted. In the next section,
    we will discuss a more complete solution. [Figure 20.1](text00004.html#filepos0001043753)
    plots a linear partition of 20 atomic tasks of equal complexity into 6 molecules.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 通常会遇到涉及两个嵌套循环的操作。例如，计算SADF序列（第17章）、评估多个障碍触摸（第3章），或计算未对齐系列的协方差矩阵。在这些情况下，原子任务的线性划分会低效，因为某些处理器必须解决比其他处理器更多的操作，计算时间将取决于最重的分子。一个部分解决方案是将原子任务划分为处理器数量的倍数，然后优先加载重分子到作业队列中。这样，轻分子将被分配给那些首先完成重分子的处理器，确保所有CPU在作业队列耗尽之前保持忙碌。在下一节中，我们将讨论更完整的解决方案。[图20.1](text00004.html#filepos0001043753)绘制了20个复杂度相等的原子任务线性划分为6个分子的情况。
- en: '![](Image00085.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00085.jpg)'
- en: '[**Figure 20.1**](text00004.html#filepos0001043446) A linear partition of 20
    atomic tasks into 6 molecules'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 20.1**](text00004.html#filepos0001043446) 20 个原子任务的线性划分为 6 个分子'
- en: '**20.4.2 Two-Nested Loops Partitions**'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.4.2 双重嵌套循环划分**'
- en: Consider two nested loops, where the outer loop iterates *i* = 1, …, *N* and
    the inner loop iterates *j* = 1, …, *i* . We can order these atomic tasks {( *i*
    , *j* )|1 ≤ *j* ≤ *i* , *i* = 1, …, *N* } as a *lower* triangular matrix (including
    the main diagonal). This entails ![](Image00321.jpg) operations, where ![](Image00700.jpg)
    are off-diagonal and *N* are diagonal. We would like to parallelize these tasks
    by partitioning the atomic tasks into *M* subsets of rows, { *S [*m*] * } [*m*  =
    1, …,  *M*] , each composed of approximately ![](Image00302.jpg) tasks. The following
    algorithm determines the rows that constitute each subset (a molecule).
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑两个嵌套循环，外循环迭代 *i* = 1, …, *N*，内循环迭代 *j* = 1, …, *i*。我们可以将这些原子任务 {( *i* , *j*
    )|1 ≤ *j* ≤ *i* , *i* = 1, …, *N* } 排序为一个 *下* 三角矩阵（包括主对角线）。这需要 ![](Image00321.jpg)
    次操作，其中 ![](Image00700.jpg) 是非对角线操作，*N* 是对角线操作。我们希望通过将原子任务划分为 *M* 个子集 { *S [*m*]*
    } [*m*  = 1, …,  *M*] 来并行化这些任务，每个子集大约包含 ![](Image00302.jpg) 个任务。以下算法确定构成每个子集（一个分子）的行。
- en: The first subset, *S [1]* , is composed of the first *r [1]* rows, that is,
    *S [1]* = {1, …, *r [1]* }, for a total number of items ![](Image00442.jpg) .
    Then, *r [1] * must satisfy the condition ![](Image00505.jpg) . Solving for *r
    [1] * , we obtain the positive root
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个子集 *S [1]* 由前 *r [1]* 行组成，即 *S [1]* = {1, …, *r [1]* }，总共有 ![](Image00442.jpg)
    个项目。然后，*r [1]* 必须满足条件 ![](Image00505.jpg)。解出 *r [1]*，我们得到正根。
- en: '![](Image00611.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00611.jpg)'
- en: The second subset contains rows *S [2]* = { *r [1]* + 1, …, *r [2]* }, for a
    total number of items ![](Image00351.jpg) . Then, *r [2] * must satisfy the condition
    ![](Image00780.jpg) . Solving for *r [2] * , we obtain the positive root
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个子集包含行 *S [2]* = { *r [1]* + 1, …, *r [2]* }，总共有 ![](Image00351.jpg) 个项目。然后，*r
    [2]* 必须满足条件 ![](Image00780.jpg)。解出 *r [2]*，我们得到正根。
- en: '![](Image00017.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00017.jpg)'
- en: We can repeat the same argument for a future subset *S [*m*]* = { *r [*m* −
    1]* + 1, …, *r [*m*]* }, with a total number of items ![](Image00110.jpg) . Then,
    *r [*m*] * must satisfy the condition ![](Image00201.jpg) . Solving for *r [*m*]
    * , we obtain the positive root
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对未来的子集 *S [*m*]* = { *r [*m* − 1]* + 1, …, *r [*m*]* } 重复相同的论点，总共有 ![](Image00110.jpg)
    个项目。然后，*r [*m*]* 必须满足条件 ![](Image00201.jpg)。解出 *r [*m*]*，我们得到正根。
- en: '![](Image00294.jpg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00294.jpg)'
- en: And it is easy to see that *r [*m*]* reduces to *r [1]* where *r [*m* − 1]*
    = *r [0]* = 0 *.* Because row numbers are positive integers, the above results
    are rounded to the nearest natural number. This may mean that some partitions’
    sizes may deviate slightly from the ![](Image00386.jpg) target. Snippet 20.6 implements
    this logic.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 很容易看出 *r [*m*]* 约简为 *r [1]*，其中 *r [*m* − 1]* = *r [0]* = 0 *.* 由于行号是正整数，上述结果取整为最接近的自然数。这可能意味着某些划分的大小可能会稍微偏离
    ![](Image00386.jpg) 目标。片段 20.6 实现了这一逻辑。
- en: '**SNIPPET 20.6 THE** `**NESTEDPARTS**` **FUNCTION**'
  id: totrans-268
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 20.6 THE** `**NESTEDPARTS**` **FUNCTION**'
- en: '![](Image00018.jpg)'
  id: totrans-269
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00018.jpg)'
- en: If the outer loop iterates *i* = 1, …, *N* and the inner loop iterates *j* =
    *i* , …, *N* , we can order these atomic tasks {( *i* , *j* )|1 ≤ *i* ≤ *j* .,
    *j* = 1, …, *N* } as an *upper* triangular matrix (including the main diagonal).
    In this case, the argument `upperTriang = True` must be passed to function `nestedParts`
    . For the curious reader, this is a special case of the bin packing problem. [Figure
    20.2](text00004.html#filepos0001051311) plots a two-nested loops partition of
    atoms of increasing complexity into molecules. Each of the resulting 6 molecules
    involves a similar amount of work, even though some atomic tasks are up to 20
    times harder than others.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 如果外循环迭代 *i* = 1, …, *N*，内循环迭代 *j* = *i* , …, *N*，我们可以将这些原子任务 {( *i* , *j* )|1
    ≤ *i* ≤ *j* ., *j* = 1, …, *N* } 排序为一个 *上* 三角矩阵（包括主对角线）。在这种情况下，必须将参数 `upperTriang
    = True` 传递给函数 `nestedParts`。对于好奇的读者，这是一个特殊的装箱问题案例。[图 20.2](text00004.html#filepos0001051311)
    绘制了原子到分子的双重嵌套循环划分，复杂性逐渐增加。最终得到的 6 个分子涉及类似数量的工作，尽管一些原子任务的难度可能高达其他任务的 20 倍。
- en: '![](Image00844.jpg)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00844.jpg)'
- en: '[**Figure 20.2**](text00004.html#filepos0001050863) A two-nested loops partition
    of atoms into molecules'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 20.2**](text00004.html#filepos0001050863) 原子到分子的双重嵌套循环划分'
- en: '**20.5 Multiprocessing Engines**'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.5 多进程引擎**'
- en: It would be a mistake to write a parallelization wrapper for each multiprocessed
    function. Instead, we should develop a library that can parallelize unknown functions,
    regardless of their arguments and output structure. That is the goal of a multiprocessing
    engine. In this section, we will study one such engine, and once you understand
    the logic, you will be ready to develop your own, including all sorts of customized
    properties.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 为每个多进程函数编写一个并行化封装是错误的。相反，我们应该开发一个可以并行化未知函数的库，无论它们的参数和输出结构如何。这就是多处理引擎的目标。在这一部分，我们将研究一个这样的引擎，一旦你理解了逻辑，你将准备好开发自己的引擎，包括各种定制属性。
- en: '**20.5.1 Preparing the Jobs**'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.5.1 准备作业**'
- en: 'In previous chapters we have made frequent use of the `mpPandasObj` . That
    function receives six arguments, of which four are optional:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们频繁使用了`mpPandasObj`。该函数接收六个参数，其中四个是可选的：
- en: '`func` : A callback function, which will be executed in parallel'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`func` : 一个回调函数，将在并行中执行'
- en: '`pdObj` : A tuple containing:'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pdObj` : 包含的元组：'
- en: The name of the argument used to pass molecules to the callback function
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于将分子传递给回调函数的参数名称
- en: A list of indivisible tasks (atoms), which will be grouped into molecules
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一份不可分割的任务（原子）列表，将被分组为分子
- en: '`numThreads` : The number of threads that will be used in parallel (one processor
    per thread)'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`numThreads` : 将在并行中使用的线程数量（每个线程一个处理器）'
- en: '`mpBatches` : Number of parallel batches (jobs per core)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mpBatches` : 并行批次的数量（每个核心的作业数）'
- en: '`linMols` : Whether partitions will be linear or double-nested'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`linMols` : 分区将是线性还是双重嵌套'
- en: '`kargs` : Keyword arguments needed by `func`'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kargs` : `func`所需的关键字参数'
- en: Snippet 20.7 lists how `mpPandasObj` works. First, atoms are grouped into molecules,
    using `linParts` (equal number of atoms per molecule) or `nestedParts` (atoms
    distributed in a lower-triangular structure). When `mpBatches` is greater than
    1, there will be more molecules than cores. Suppose that we divide a task into
    10 molecules, where molecule 1 takes twice as long as the rest. If we run this
    process in 10 cores, 9 of the cores will be idle half of the runtime, waiting
    for the first core to process molecule 1\. Alternatively, we could set `mpBatches =10`
    so as to divide that task in 100 molecules. In doing so, every core will receive
    equal workload, even though the first 10 molecules take as much time as the next
    20 molecules. In this example, the run with `mpBatches =10` will take half of
    the time consumed by `mpBatches =1` .
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 片段20.7列出了`mpPandasObj`的工作原理。首先，原子被分组为分子，使用`linParts`（每个分子相同数量的原子）或`nestedParts`（原子分布在下三角结构中）。当`mpBatches`大于1时，分子的数量将超过核心的数量。假设我们将任务分为10个分子，其中分子1的处理时间是其余分子的两倍。如果我们在10个核心上运行该过程，9个核心将在运行时的一半处于闲置状态，等待第一个核心处理分子1。另一方面，我们可以将`mpBatches
    =10`设置为将该任务分为100个分子。这样，每个核心将接收到相等的工作负载，即使前10个分子的处理时间与接下来的20个分子相同。在这个例子中，使用`mpBatches
    =10`的运行时间将是`mpBatches =1`所消耗时间的一半。
- en: Second, we form a list of jobs. A job is a dictionary containing all the information
    needed to process a molecule, that is, the callback function, its keyword arguments,
    and the subset of atoms that form the molecule. Third, we will process the jobs
    sequentially if `numThreads = =1` (see Snippet 20.8), and in parallel otherwise
    (see Section 20.5.2). The reason that we want the option to run jobs sequentially
    is for debugging purposes. It is not easy to catch a bug when programs are run
    in multiple processors. ^([1](text00004.html#filepos0001073132)) Once the code
    is debugged, we will want to use `numThreads > 1` . Fourth, we stitch together
    the output from every molecule into a single list, series, or dataframe.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们形成作业列表。作业是一个字典，包含处理分子所需的所有信息，即回调函数、其关键字参数以及构成分子的原子子集。第三，如果`numThreads = =1`（见片段20.8），我们将顺序处理作业，否则并行处理（见20.5.2节）。我们希望顺序运行作业的选项是出于调试目的。在多个处理器中运行程序时，很难捕获错误。^([1](text00004.html#filepos0001073132))
    一旦代码调试完成，我们将希望使用`numThreads > 1`。第四，我们将每个分子的输出拼接成一个单一的列表、系列或数据框。
- en: '**SNIPPET 20.7 THE** `**MPPANDASOBJ**` **, USED AT VARIOUS POINTS IN THE BOOK**'
  id: totrans-287
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段20.7 **`**MPPANDASOBJ**`**，在书中多个地方使用'
- en: '![](Image00639.jpg)'
  id: totrans-288
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00639.jpg)'
- en: In Section 20.5.2 we will see the multiprocessing counterpart to function `processJobs_`
    of Snippet 20.8.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 在20.5.2节中，我们将看到片段20.8的`processJobs_`函数的多进程对应项。
- en: '**SNIPPET 20.8 SINGLE-THREAD EXECUTION, FOR DEBUGGING**'
  id: totrans-290
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段20.8 单线程执行，用于调试**'
- en: '![](Image00712.jpg)'
  id: totrans-291
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00712.jpg)'
- en: '**20.5.2 Asynchronous Calls**'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.5.2 异步调用**'
- en: Python has a parallelization library called `multiprocessing` . This library
    is the basis for multiprocessing engines such as `joblib` , ^([2](text00004.html#filepos0001073443))
    which is the engine used by many `sklearn` algorithms. ^([3](text00004.html#filepos0001073702))
    Snippet 20.9 illustrates how to do an asynchronous call to Python's `multiprocessing`
    library. The `reportProgress` function keeps us informed about the percentage
    of jobs completed.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: Python有一个名为`multiprocessing`的并行化库。这个库是多进程引擎的基础，例如`joblib`，^([2](text00004.html#filepos0001073443))
    这是许多`sklearn`算法使用的引擎。^([3](text00004.html#filepos0001073702)) 示例20.9说明了如何异步调用Python的`multiprocessing`库。`reportProgress`函数让我们了解已完成工作的百分比。
- en: '**SNIPPET 20.9 EXAMPLE OF ASYNCHRONOUS CALL TO PYTHON''S MULTIPROCESSING LIBRARY**'
  id: totrans-294
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**示例20.9 异步调用Python的多进程库的例子**'
- en: '![](Image00805.jpg)'
  id: totrans-295
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00805.jpg)'
- en: '**20.5.3 Unwrapping the Callback**'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.5.3 解包回调**'
- en: 'In Snippet 20.9, the instruction `pool.imap_unordered()` parallelized `expandCall`
    , by running each item in `jobs` (a molecule) in a single thread. Snippet 20.10
    lists `expandCall` , which unwraps the items (atoms) in the job (molecule), and
    executes the callback function. This little function is the trick at the core
    of the multiprocessing engine: It transforms a dictionary into a task. Once you
    understand the role it plays, you will be able to develop your own engines.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例20.9中，指令`pool.imap_unordered()`通过在单个线程中运行`jobs`（一个分子）中的每个项目并行化`expandCall`。示例20.10列出了`expandCall`，它解包工作（分子）中的项目（原子），并执行回调函数。这个小函数是多进程引擎核心的技巧：它将字典转化为任务。一旦你理解了它的角色，你就能够开发自己的引擎。
- en: '**SNIPPET 20.10 PASSING THE JOB (MOLECULE) TO THE CALLBACK FUNCTION**'
  id: totrans-298
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**示例20.10 将任务（分子）传递给回调函数**'
- en: '![](Image00040.jpg)'
  id: totrans-299
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00040.jpg)'
- en: '**20.5.4 Pickle/Unpickle Objects**'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.5.4 序列化/反序列化对象**'
- en: Multiprocessing must pickle methods in order to assign them to different processors.
    The problem is, bound methods are not pickable. ^([4](text00004.html#filepos0001074097))
    The work around is to add functionality to your engine, that tells the library
    how to deal with this kind of objects. Snippet 20.11 contains the instructions
    that should be listed at the top of your multiprocessing engine library. If you
    are curious about the precise reason this piece of code is needed, you may want
    to read Ascher et al. [2005], Section 7.5.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 多进程必须序列化方法，以便将其分配给不同的处理器。问题是，绑定的方法是不可序列化的。^([4](text00004.html#filepos0001074097))
    解决办法是为你的引擎添加功能，告诉库如何处理这种对象。示例20.11包含应列在多进程引擎库顶部的指令。如果你对这段代码的具体原因感到好奇，可能想要阅读Ascher等人[2005]，第7.5节。
- en: '**SNIPPET 20.11 PLACE THIS CODE AT THE BEGINNING OF YOUR ENGINE**'
  id: totrans-302
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**示例20.11 将此代码放在你的引擎开头**'
- en: '![](Image00132.jpg)'
  id: totrans-303
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00132.jpg)'
- en: '**20.5.5 Output Reduction**'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.5.5 输出减少**'
- en: Suppose that you divide a task into 24 molecules, with the goal that the engine
    assigns each molecule to one available core. Function `processJobs` in Snippet
    20.9 will capture the 24 outputs and store them in a list. This approach is effective
    in problems that do not involve large outputs. If the outputs must be combined
    into a single output, first we will wait until the last molecule is completed,
    and then we will process the items in the list. The latency added by this post-processing
    should not be significant, as long as the outputs are small in size and number.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你将一个任务分成24个分子，目标是让引擎将每个分子分配给一个可用的核心。代码段`processJobs`将在示例20.9中捕获这24个输出并将其存储在一个列表中。这种方法在输出不大的问题中是有效的。如果输出必须合并为一个单一输出，首先我们将等待最后一个分子完成，然后处理列表中的项目。只要输出的大小和数量不大，这种后处理所增加的延迟应该不会显著。
- en: 'However, when the outputs consume a lot of RAM, and they need to be combined
    into a single output, storing all those outputs in a list may cause a memory error.
    It would be better to perform the output reduction operation on the fly, as the
    results are returned asynchronously by `func` , rather than waiting for the last
    molecule to be completed. We can address this concern by improving processJobs.
    In particular, we are going to pass three additional arguments that determine
    how the molecular outputs must be *reduced* into a single output. Snippet 20.12
    lists an enhanced version of `processJobs` , which contains three new arguments:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当输出消耗大量RAM，并且需要合并成单个输出时，将所有这些输出存储在列表中可能会导致内存错误。在结果由`func`异步返回时，动态执行输出减少操作会更好，而不是等到最后一个分子完成。我们可以通过改善processJobs来解决这个问题。特别是，我们将传递三个额外参数，以确定如何将分子输出*减少*为单个输出。片段20.12列出了增强版本的`processJobs`，其中包含三个新参数：
- en: '`redux` : This is a callback to the function that carries out the reduction.
    For example, `redux = pd.DataFrame.add` , if output dataframes ought to be summed
    up.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`redux` : 这是一个回调，用于执行减少操作的函数。例如，如果输出数据框应相加，则`redux = pd.DataFrame.add`。'
- en: '`reduxArgs` : This is a dictionary that contains the keyword arguments that
    must be passed to `redux` (if any). For example, if `redux = pd.DataFrame.join`
    , then a possibility is `reduxArgs = {‘how’:‘outer’}` .'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reduxArgs` : 这是一个字典，包含必须传递给`redux`的关键字参数（如果有的话）。例如，如果`redux = pd.DataFrame.join`，则可能是`reduxArgs
    = {''how'':''outer''}`。'
- en: '`reduxInPlace` : A boolean, indicating whether the `redux` operation should
    happen *in-place* or not. For example, `redux = dict.update` and `redux = list.append`
    require `reduxInPlace = True` , since appending a list and updating a dictionary
    are both in-place operations.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reduxInPlace` : 一个布尔值，指示`redux`操作是否应在*原地*发生。例如，`redux = dict.update`和`redux
    = list.append`需要`reduxInPlace = True`，因为附加列表和更新字典都是原地操作。'
- en: '**SNIPPET 20.12 ENHANCING** `**PROCESSJOBS**` **TO PERFORM ON-THE-FLY OUTPUT
    REDUCTION**'
  id: totrans-310
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段20.12 增强** `**PROCESSJOBS**` **以执行动态输出减少**'
- en: '![](Image00225.jpg)'
  id: totrans-311
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00225.jpg)'
- en: Now that `processJobsRedux` knows what to do with the outputs, we can also enhance
    `mpPandasObj` from Snippet 20.7\. In Snippet 20.13, the new function `mpJobList`
    passes the three output reduction arguments to `processJobsRedux` . This eliminates
    the need to process an outputed list, as `mpPandasObj` did, hence saving memory
    and time.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`processJobsRedux`知道如何处理输出，我们还可以增强Snippet 20.7中的`mpPandasObj`。在Snippet 20.13中，新函数`mpJobList`将三个输出减少参数传递给`processJobsRedux`。这消除了像`mpPandasObj`那样处理输出列表的需要，从而节省了内存和时间。
- en: '**SNIPPET 20.13 ENHANCING** `**MPPANDASOBJ**` **TO PERFORM ON-THE-FLY OUTPUT
    REDUCTION**'
  id: totrans-313
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段20.13 增强** `**MPPANDASOBJ**` **以执行动态输出减少**'
- en: '![](Image00316.jpg)'
  id: totrans-314
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00316.jpg)'
- en: '**20.6 Multiprocessing Example**'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '**20.6 多进程示例**'
- en: 'What we have presented so far in this chapter can be used to speed-up, by several
    orders of magnitude, many lengthy and large-scale mathematical operations. In
    this section we will illustrate an additional motivation for multiprocessing:
    memory management.'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们在本章中介绍的内容可以大幅加速许多冗长且大规模的数学运算。在这一节中，我们将说明多进程的另一个动机：内存管理。
- en: Suppose that you have conducted a spectral decomposition of a covariance matrix
    of the form *Z* ' *Z* , as we did in Chapter 8, Section 8.4.2, where *Z* has size
    *TxN* . This has resulted in an eigenvectors matrix *W* and an eigenvalues matrix
    Λ, such that *Z* ' *ZW* = *W* Λ. Now you would like to derive the orthogonal principal
    components that explain a user-defined portion of the total variance, 0 ≤ τ ≤
    1\. In order to do that, we compute ![](Image00407.jpg) , where ![](Image00474.jpg)
    contains the first *M* ≤ *N* columns of *W* , such that ![](Image00556.jpg) .
    The computation of ![](Image00658.jpg) can be parallelized by noting that
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你已经对形式为*Z* ' *Z*的协方差矩阵进行了谱分解，正如我们在第8章第8.4.2节所做的，其中*Z*的大小为*TxN*。这产生了一个特征向量矩阵*W*和一个特征值矩阵Λ，使得*Z*
    ' *ZW* = *W* Λ。现在你想要推导出解释用户定义部分总方差的正交主成分，0 ≤ τ ≤ 1。为此，我们计算！[](Image00407.jpg)，其中！[](Image00474.jpg)包含*W*的前*M*
    ≤ *N*列，使得！[](Image00556.jpg)。计算！[](Image00658.jpg)可以通过注意来并行化。
- en: '![](Image00341.jpg)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00341.jpg)'
- en: where *Z [*b*]* is a sparse *TxN* matrix with only *TxN [*b*]* items (the rest
    are empty), ![](Image00827.jpg) is a *NxM* matrix with only *N [*b*] xM* items
    (the rest are empty), and ![](Image00064.jpg) . This sparsity is created by dividing
    the set of columns into a partition of *B* subsets of columns, and loading into
    *Z [*b*] * only the *b* th subset of the columns. This notion of sparsity may
    sound a bit complicated at first, however Snippet 20.14 demonstrates how pandas
    allows us to implement it in a seamless way. Function `getPCs` receives ![](Image00155.jpg)
    through the argument `eVec` . The argument `molecules` contains a subset of the
    file names in `fileNames` , where each file represents *Z [*b*] * . The key concept
    to grasp is that we compute the dot product of a *Z [*b*] * with the slice of
    the rows of ![](Image00248.jpg) defined by the columns in *Z [*b*] * , and that
    molecular results are aggregated on the fly ( `redux = pd.DataFrame.add` ).
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 其中*Z [*b*]*是一个稀疏的*TxN*矩阵，仅有*TxN [*b*]*项（其余为空），![](Image00827.jpg)是一个*NxM*矩阵，仅有*N
    [*b*] xM*项（其余为空），以及![](Image00064.jpg)。这种稀疏性是通过将列集合分割为*B*个列子集的分区创建的，仅将列的*b*个子集加载到*Z
    [*b*]*中。这种稀疏性的概念乍一看可能有点复杂，但代码片段20.14展示了pandas如何使我们以无缝的方式实现它。函数`getPCs`通过参数`eVec`接收![](Image00155.jpg)。参数`molecules`包含`fileNames`中的文件名子集，每个文件代表*Z
    [*b*]*。关键概念是我们计算*Z [*b*]*与由*Z [*b*]*中的列定义的![](Image00248.jpg)的行切片的点积，而分子结果会即时聚合（`redux
    = pd.DataFrame.add`）。
- en: '**SNIPPET 20.14 PRINCIPAL COMPONENTS FOR A SUBSET OF THE COLUMNS**'
  id: totrans-320
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**代码片段20.14 针对部分列的主成分**'
- en: '![](Image00197.jpg)'
  id: totrans-321
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00197.jpg)'
- en: 'This approach presents two advantages: First, because `getPCs` loads dataframes
    *Z [*b*]* sequentially, for a sufficiently large *B* , the RAM is not exhausted.
    Second, `mpJobList` executes the molecules in parallel, hence speeding up the
    calculations.'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法有两个优点：首先，因为`getPCs`顺序加载数据框*Z [*b*]*，对于足够大的*B*，内存不会被耗尽。第二，`mpJobList`并行执行分子，从而加快计算速度。
- en: In real life ML applications, we often encounter datasets where *Z* contains
    billions of datapoints. As this example demonstrates, parallelization is not only
    beneficial in terms of reducing run time. Many problems could not be solved without
    parallelization, as a matter of memory limitations, even if we were willing to
    wait longer.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际的机器学习应用中，我们经常会遇到*Z*包含数十亿个数据点的数据集。正如这个例子所示，并行化不仅在减少运行时间方面有益。许多问题由于内存限制而无法解决，即使我们愿意等待更长时间。
- en: '**Exercises**'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习**'
- en: Run Snippets 20.1 and 20.2 with `timeit` . Repeat 10 batches of 100 executions.
    What is the minimum elapsed time for each snippet?
  id: totrans-325
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用`timeit`运行代码片段20.1和20.2。重复100次执行的10个批次。每个代码片段的最小耗时是多少？
- en: The instructions in Snippet 20.2 are very useful for unit testing, brute force
    searches, and scenario analysis. Can you remember where else in the book have
    you seen them? Where else could they have been used?
  id: totrans-326
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 代码片段20.2中的指令对于单元测试、穷举搜索和情景分析非常有用。你能记得书中还在哪里见过它们吗？它们还有可能被用于哪里？
- en: Adjust Snippet 20.4 to form molecules using a two-nested loops scheme, rather
    than a linear scheme.
  id: totrans-327
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 调整代码片段20.4，以使用两个嵌套循环方案形成分子，而不是线性方案。
- en: 'Compare with `timeit` :'
  id: totrans-328
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 与`timeit`比较：
- en: Snippet 20.4, by repeating 10 batches of 100 executions. What is the minimum
    elapsed time for each snippet?
  id: totrans-329
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代码片段20.4，通过重复100次执行的10个批次来实现。每个代码片段的最小耗时是多少？
- en: Modify Snippet 20.4 (from exercise 3), by repeating 10 batches of 100 executions.
    What is the minimum elapsed time for each snippet?
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改代码片段20.4（来自练习3），通过重复100次执行的10个批次来实现。每个代码片段的最小耗时是多少？
- en: Simplify Snippet 20.4 by using `mpPandasObj` .
  id: totrans-331
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过使用`mpPandasObj`简化代码片段20.4。
- en: Modify `mpPandasObj` to handle the possibility of forming molecules using a
    two-nested loops scheme with an upper triangular structure.
  id: totrans-332
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 修改`mpPandasObj`以处理使用两个嵌套循环方案形成分子的可能性，采用上三角结构。
- en: '**Reference**'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考**'
- en: 'Ascher, D., A. Ravenscroft, and A. Martelli (2005): *Python Cookbook* , 2nd
    ed. O''Reilly Media.'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Ascher, D., A. Ravenscroft, and A. Martelli (2005): *Python Cookbook*，第2版。O''Reilly
    Media。'
- en: '**Bibliography**'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**'
- en: 'Gorelick, M. and I. Ozsvald (2008): *High Performance Python* , 1st ed. O''Reilly
    Media.'
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Gorelick, M.和I. Ozsvald (2008): *高性能Python*，第1版。O''Reilly Media。'
- en: 'López de Prado, M. (2017): “Supercomputing for finance: A gentle introduction.”
    Lecture materials, Cornell University. Available at [https://ssrn.com/abstract=2907803.](https://ssrn.com/abstract=2907803.)'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'López de Prado, M. (2017): “金融领域的超级计算：温和入门。”康奈尔大学讲座材料。可在[https://ssrn.com/abstract=2907803.](https://ssrn.com/abstract=2907803.)'
- en: 'McKinney, W. (2012): *Python for Data Analysis* , 1st ed. O''Reilly Media.'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'McKinney, W. (2012): *Python数据分析*，第1版。O''Reilly Media。'
- en: 'Palach, J. (2008): *Parallel Programming with Python* , 1st ed. Packt Publishing.'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Palach, J. (2008): *用Python进行并行编程*，第1版。Packt Publishing。'
- en: 'Summerfield, M. (2013): *Python in Practice: Create Better Programs Using Concurrency,
    Libraries, and Patterns* , 1st ed. Addison-Wesley.'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Summerfield, M. (2013): *Python实战：使用并发、库和模式创建更好的程序*，第1版。Addison-Wesley。'
- en: 'Zaccone, G. (2015): *Python Parallel Programming Cookbook* , 1st ed. Packt
    Publishing.'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Zaccone, G. (2015): *Python并行编程食谱*，第1版。Packt Publishing。'
- en: '**Notes**'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '**注释**'
- en: ^([1](text00004.html#filepos0001055345))    *Heisenbugs* , named after Heisenberg's
    uncertainty principle, describe bugs that change their behavior when scrutinized.
    Multiprocessing bugs are a prime example.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](text00004.html#filepos0001055345))    *海森堡效应*，以海森堡的不确定性原理命名，描述了在仔细观察时会改变行为的错误。多处理的错误就是一个典型例子。
- en: ^([2](text00004.html#filepos0001056787))     [https://pypi.python.org/pypi/joblib](https://pypi.python.org/pypi/joblib)
    .
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](text00004.html#filepos0001056787))     [https://pypi.python.org/pypi/joblib](https://pypi.python.org/pypi/joblib)。
- en: ^([3](text00004.html#filepos0001056984))     [http://scikit-learn.org/stable/developers/performance.html#multi-core-parallelism-using-joblib-parallel](http://scikit-learn.org/stable/developers/performance.html#multi-core-parallelism-using-joblib-parallel)
    .
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](text00004.html#filepos0001056984))     [http://scikit-learn.org/stable/developers/performance.html#multi-core-parallelism-using-joblib-parallel](http://scikit-learn.org/stable/developers/performance.html#multi-core-parallelism-using-joblib-parallel)。
- en: ^([4](text00004.html#filepos0001058995))     [http://stackoverflow.com/questions/1816958/cant-pickle-type-instancemethod-when-using-pythons-multiprocessing-pool-ma](http://stackoverflow.com/questions/1816958/cant-pickle-type-instancemethod-when-using-pythons-multiprocessing-pool-ma)
    .
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](text00004.html#filepos0001058995))     [http://stackoverflow.com/questions/1816958/cant-pickle-type-instancemethod-when-using-pythons-multiprocessing-pool-ma](http://stackoverflow.com/questions/1816958/cant-pickle-type-instancemethod-when-using-pythons-multiprocessing-pool-ma)。
- en: '**CHAPTER 21**'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '**第21章**'
- en: '**Brute Force and Quantum Computers**'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '**暴力搜索与量子计算机**'
- en: '**21.1 Motivation**'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.1 动机**'
- en: Discrete mathematics appears naturally in multiple ML problems, including hierarchical
    clustering, grid searches, decisions based on thresholds, and integer optimization.
    Sometimes, these problems do not have a known analytical (closed-form) solution,
    or even a heuristic to approximate it, and our only hope is to search for it through
    brute force. In this chapter, we will study how a financial problem, intractable
    to modern supercomputers, can be reformulated as an integer optimization problem.
    Such a representation makes it amenable to quantum computers. From this example
    the reader can infer how to translate his particular financial ML intractable
    problem into a quantum brute force search.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 离散数学自然地出现在多个机器学习问题中，包括层次聚类、网格搜索、基于阈值的决策和整数优化。有时，这些问题没有已知的解析（封闭形式）解决方案，甚至没有可以近似的启发式方法，我们唯一的希望就是通过暴力搜索来寻找解决方案。在本章中，我们将研究一个对现代超级计算机来说无法解决的金融问题如何被重新表述为一个整数优化问题。这种表示方式使其适合量子计算机。通过这个例子，读者可以推断出如何将他特定的金融机器学习难题转化为量子暴力搜索。
- en: '**21.2 Combinatorial Optimization**'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.2 组合优化**'
- en: Combinatorial optimization problems can be described as problems where there
    is a finite number of feasible solutions, which result from combining the discrete
    values of a finite number of variables. As the number of feasible combinations
    grows, an exhaustive search becomes impractical. The traveling salesman problem
    is an example of a combinatorial optimization problem that is known to be NP hard
    (Woeginger [2003]), that is, the category of problems that are at least as hard
    as the hardest problems solvable is nondeterministic polynomial time.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 组合优化问题可以描述为存在有限个可行解的问题，这些解是通过组合有限个变量的离散值而得出的。随着可行组合数量的增加，穷举搜索变得不切实际。旅行推销员问题就是一个已知为NP困难的组合优化问题的例子（Woeginger
    [2003]），即问题类别至少和最难的可解问题一样困难，并且是非确定性多项式时间内的。
- en: What makes an exhaustive search impractical is that standard computers evaluate
    and store the feasible solutions sequentially. But what if we could evaluate and
    store all feasible solutions at once? That is the goal of quantum computers. Whereas
    the bits of a standard computer can only adopt one of two possible states ({0,
    1}) at once, quantum computers rely on qubits, which are memory elements that
    may hold a *linear superposition* of both states. In theory, quantum computers
    can accomplish this thanks to quantum mechanical phenomena. In some implementations,
    qubits can support currents flowing in two directions at once, hence providing
    the desired superposition. This linear superposition property is what makes quantum
    computers ideally suited for solving NP-hard combinatorial optimization problems.
    See Williams [2010] for a general treatise on the capabilities of quantum computers.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 使得全面搜索不切实际的原因在于标准计算机是顺序评估和存储可行解的。但如果我们能够一次性评估和存储所有可行解呢？这正是量子计算机的目标。标准计算机的位只能在两个可能状态（{0,
    1}）中选择一个，而量子计算机依赖于量子位（qubits），这是一种可以同时持有两种状态的 *线性叠加* 的存储元素。理论上，量子计算机能够做到这一点，得益于量子力学现象。在某些实现中，量子位可以支持两个方向的电流同时流动，从而提供所需的叠加。这种线性叠加特性使得量子计算机特别适合解决
    NP 难的组合优化问题。有关量子计算机能力的一般论述，请参见 Williams [2010]。
- en: The best way to understand this approach is through a particular example. We
    will now see how a dynamic portfolio optimization problem subject to generic transaction
    cost functions can be represented as a combinatorial optimization problem, tractable
    to quantum computers. Unlike Garleanu and Pedersen [2012], we will not assume
    that the returns are drawn from an IID Gaussian distribution. This problem is
    particularly relevant to large asset managers, as the costs from excessive turnover
    and implementation shortfall may critically erode the profitability of their investment
    strategies.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 理解这种方法的最佳方式是通过一个特定的例子。我们将看到一个动态投资组合优化问题如何在一般交易成本函数的约束下，被表示为一个组合优化问题，从而使量子计算机能够处理。与
    Garleanu 和 Pedersen [2012] 不同，我们不假设收益来自 IID 正态分布。这个问题对大型资产管理者尤其相关，因为过度周转和执行短缺所带来的成本可能会严重侵蚀其投资策略的盈利能力。
- en: '**21.3 The Objective Function**'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.3 目标函数**'
- en: Consider a set on assets *X* = { *x [*i*]* }, *i* = 1, …, *N* , with returns
    following a multivariate Normal distribution at each time horizon *h* = 1, …,
    *H* , with varying mean and variance. We will assume that the returns are multivariate
    Normal, time-independent, however not identically distributed through time. We
    define a trading trajectory as an *NxH* matrix ω that determines the proportion
    of capital allocated to each of the *N* assets over each of the *H* horizons.
    At a particular horizon *h* = 1, …, *H* , we have a forecasted mean μ [*h*] ,
    a forecasted variance *V [*h*]* and a forecasted transaction cost function τ [*h*]
    [ω]. This means that, given a trading trajectory ω, we can compute a vector of
    expected investment returns *r* , as
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一组资产 *X* = { *x [*i*]* }, *i* = 1, …, *N*，其收益在每个时间阶段 *h* = 1, …, *H* 下遵循多元正态分布，且均值和方差各不相同。我们假设收益是多元正态分布，与时间无关，但在时间上并非同分布。我们将交易轨迹定义为一个
    *NxH* 矩阵 ω，该矩阵决定在每个 *H* 阶段对每个 *N* 资产分配的资本比例。在特定阶段 *h* = 1, …, *H* 下，我们有一个预测均值
    μ [*h*]、一个预测方差 *V [*h*]* 和一个预测交易成本函数 τ [*h*] [ω]。这意味着，给定交易轨迹 ω，我们可以计算预期投资收益的向量
    *r* ，为
- en: '![](Image00164.jpg)'
  id: totrans-357
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00164.jpg)'
- en: 'where τ[ω] can adopt any functional form. Without loss of generality, consider
    the following:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 τ[ω] 可以采用任何功能形式。为简化起见，考虑以下情况：
- en: '![](Image00598.jpg)'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_IMG
  zh: '![](Image00598.jpg)'
- en: '![](Image00148.jpg) , for *h* = 2, …, *H*'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '![](Image00148.jpg)，对于 *h* = 2, …, *H*。'
- en: ω* [*n*] is the initial allocation to instrument n, *n* = 1, …, *N*
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ω[*n*] 是对工具 n 的初始分配，*n* = 1, …, *N*。
- en: τ[ω] is an *Hx1* vector of transaction costs. In words, the transaction costs
    associated with each asset are the sum of the square roots of the changes in capital
    allocations, re-scaled by an asset-specific factor *C [*h*]* = { *c [*n* , *h*]*
    } [*n* = 1, …, *N*] that changes with *h.* Thus, *C [*h*]* is an *Nx1* vector
    that determines the relative transaction cost across assets.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: τ[ω] 是一个 *Hx1* 的交易成本向量。用通俗的话来说，与每项资产相关的交易成本是资本分配变化平方根的总和，经过一个与资产相关的特定因子 *C [*h*]*
    = { *c [*n* , *h*]* } [*n* = 1, …, *N*] 重新缩放，该因子会随 *h* 而变化。因此，*C [*h*]* 是一个 *Nx1*
    的向量，用于确定各资产之间的相对交易成本。
- en: The Sharpe Ratio (Chapter 14) associated with *r* can be computed as (μ [*h*]
    being net of the risk-free rate)
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 与 *r* 相关的夏普比率（第 14 章）可以计算为（μ [*h*] 为净风险无风险利率）
- en: '![](Image00626.jpg)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00626.jpg)'
- en: '**21.4 The Problem**'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.4 问题**'
- en: We would like to compute the optimal trading trajectory that solves the problem
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望计算出能够解决该问题的最佳交易轨迹。
- en: '![](Image00214.jpg)'
  id: totrans-367
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00214.jpg)'
- en: 'This problem attempts to compute a global dynamic optimum, in contrast to the
    static optimum derived by mean-variance optimizers (see Chapter 16). Note that
    non-continuous transaction costs are embedded in *r* . Compared to standard portfolio
    optimization applications, this is not a convex (quadratic) programming problem
    for at least three reasons: (1) Returns are not identically distributed, because
    μ [*h*] and *V [*h*]* change with *h.* (2) Transaction costs τ [*h*] [ω] are non-continuous
    and changing with *h.* (3) The objective function *SR* [ *r* ] is not convex.
    Next, we will show how to calculate solutions without making use of any analytical
    property of the objective function (hence the generalized nature of this approach).'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 该问题试图计算全局动态最优解，与均值方差优化器（见第 16 章）导出的静态最优解形成对比。注意，非连续的交易成本嵌入在 *r* 中。与标准的投资组合优化应用相比，这至少有三个原因使其不是一个凸（二维）规划问题：（1）收益并非同分布，因为
    μ [*h*] 和 *V [*h*]* 随 *h* 而变化。（2）交易成本 τ [*h*] [ω] 是非连续的，并随 *h* 而变化。（3）目标函数 *SR*
    [ *r* ] 不是凸的。接下来，我们将展示如何在不利用目标函数的任何分析性质的情况下计算解决方案（因此这种方法的广义性质）。
- en: '**21.5 An Integer Optimization Approach**'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.5 整数优化方法**'
- en: The generality of this problem makes it intractable to standard convex optimization
    techniques. Our solution strategy is to discretize it so that it becomes amenable
    to integer optimization. This in turn allows us to use quantum computing technology
    to find the optimal solution.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 该问题的普遍性使得使用标准的凸优化技术变得不可行。我们的解决策略是对其进行离散化，以便使其适合整数优化。这反过来又使我们能够利用量子计算技术找到最优解。
- en: '**21.5.1 Pigeonhole Partitions**'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.5.1 鸽笼划分**'
- en: Suppose that we count the number of ways that *K* units of capital can be allocated
    among *N* assets, where we assume *K* > *N* . This is equivalent to finding the
    number of non-negative integer solutions to *x [1]* + … + *x [*N*]* = *K* , which
    has the nice combinatorial solution ![](Image00735.jpg) . This bears a similarity
    to the classic integer partitioning problem in number theory for which Hardy and
    Ramanujan (and later, Rademacher) proved an asymptotic expression (see Johansson
    [2012]). While order does not matter in the partition problem, order is very relevant
    to the problem we have at hand. For example, if *K* = 6 and *N* = 3, partitions
    (1, 2, 3) and (3, 2, 1) must be treated as different (obviously (2, 2, 2) does
    not need to be permutated).  [ Figure 21.1 ](text00004.html#filepos0001085945)
    illustrates how order is important when allocating 6 units of capital to 3 different
    assets. This means that we must consider all distinct permutations of each partition.
    Even though there is a nice combinatorial solution to find the number of such
    allocations, it may still be computationally intensive to find as *K* and *N*
    grow large. However, we can use Stirling's approximation to easily arrive at an
    estimate.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们计算 *K* 单位资本在 *N* 资产之间的分配方式，其中我们假设 *K* > *N*。这等同于寻找非负整数解 *x [1]* + … + *x
    [*N*]* = *K* 的数量，该方程有一个很好的组合解 ![](Image00735.jpg)。这与数论中经典的整数划分问题相似，哈代和拉马努金（后来还有拉德马克）证明了一个渐近表达式（见约翰逊
    [2012]）。虽然在划分问题中顺序并不重要，但在我们面临的问题中，顺序非常相关。例如，如果 *K* = 6 且 *N* = 3，则划分 (1, 2, 3)
    和 (3, 2, 1) 必须视为不同（显然 (2, 2, 2) 不需要排列）。 [图 21.1](text00004.html#filepos0001085945)
    说明了在将 6 单位资本分配给 3 个不同资产时顺序的重要性。这意味着我们必须考虑每个划分的所有不同排列。尽管有一个很好的组合解来找到这些分配的数量，但随着
    *K* 和 *N* 的增大，计算可能仍然非常复杂。然而，我们可以使用斯特林近似法来轻松得到一个估算值。
- en: '![](Image00343.jpg)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00343.jpg)'
- en: '[**Figure 21.1**](text00004.html#filepos0001085231) Partitions (1, 2, 3) and
    (3, 2, 1) must be treated as different'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 21.1**](text00004.html#filepos0001085231) 划分 (1, 2, 3) 和 (3, 2, 1) 必须视为不同。'
- en: Snippet 21.1 provides an efficient algorithm to generate the set of all partitions,
    ![](Image00365.jpg) , where ![](Image00261.jpg) are the natural numbers including
    zero (whole numbers).
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 片段 21.1 提供了一种高效的算法来生成所有划分的集合，![](Image00365.jpg)，其中 ![](Image00261.jpg) 是包括零的自然数（整数）。
- en: '**SNIPPET 21.1 PARTITIONS OF** ***K*** **OBJECTS INTO** ***N*** **SLOTS**'
  id: totrans-376
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 21.1 将** ***K*** **个对象划分到** ***N*** **个槽位中**'
- en: '![](Image00400.jpg)'
  id: totrans-377
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00400.jpg)'
- en: '**21.5.2 Feasible Static Solutions**'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.5.2 可行静态解**'
- en: We would like to compute the set of all feasible solutions at any given horizon
    *h* , which we denote Ω. Consider a partition set of *K* units into *N* assets,
    *p ^(*K* , *N*)* . For each partition { *p [*i*]* } [*i* = 1, …, *N*] ∈ *p ^(*K*
    , *N*)* , we can define a vector of absolute weights such that ![](Image00415.jpg)
    , where ![](Image00430.jpg) (the full-investment constraint). This full-investment
    (without leverage) constraint implies that every weight can be either positive
    or negative, so for every vector of absolute weights {|ω [*i*] |} [*i*  = 1, …,  *N*]
    we can generate 2 ^(*N*) vectors of (signed) weights. This is accomplished by
    multiplying the items in {|ω [*i*] |} [*i*  = 1, …,  *N*] with the items of the
    Cartesian product of { − 1, 1} with *N* repetitions. Snippet 21.2 shows how to
    generate the set Ω of all vectors of weights associated with all partitions, ![](Image00443.jpg)
    .
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望计算在任何给定时间点 *h* 的所有可行解的集合，记作 Ω。考虑将 *K* 单位划分为 *N* 资产的划分集合 *p ^(*K* , *N*)*。对于每个划分
    { *p [*i*]* } [*i* = 1, …, *N*] ∈ *p ^(*K* , *N*)*，我们可以定义一个绝对权重向量，使得 ![](Image00415.jpg)，其中
    ![](Image00430.jpg)（全投资约束）。这个全投资（无杠杆）约束意味着每个权重可以是正数或负数，因此对于每个绝对权重向量 {|ω [*i*]
    |} [*i* = 1, …, *N*]，我们可以生成 2 ^(*N*) 个（有符号）权重向量。这是通过将 {|ω [*i*] |} [*i* = 1, …,
    *N*] 中的项目与 {−1, 1} 的笛卡尔积项目进行 *N* 次重复相乘来完成的。片段 21.2 展示了如何生成与所有划分相关的权重向量集合 Ω，![](Image00443.jpg)。
- en: '**SNIPPET 21.2 SET Ω OF ALL VECTORS ASSOCIATED WITH ALL PARTITIONS**'
  id: totrans-380
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 21.2 与所有划分相关的所有向量集合 Ω**'
- en: '![](Image00725.jpg)'
  id: totrans-381
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00725.jpg)'
- en: '**21.5.3 Evaluating Trajectories**'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.5.3 评估轨迹**'
- en: Given the set of all vectors Ω, we define the set of all possible trajectories
    Φ as the Cartesian product of Ω with *H* repetitions. Then, for every trajectory
    we can evaluate its transaction costs and SR, and select the trajectory with optimal
    performance across Φ. Snippet 21.3 implements this functionality. The object `params`
    is a list of dictionaries that contain the values of *C* , μ, *V.*
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 给定所有向量 Ω 的集合，我们定义所有可能轨迹的集合 Φ 为 Ω 的笛卡尔积，重复 *H* 次。然后，对于每条轨迹，我们可以评估其交易成本和 SR，并选择在
    Φ 中表现最优的轨迹。片段 21.3 实现了这一功能。对象 `params` 是一个包含 *C*、μ、*V* 值的字典列表。
- en: '**SNIPPET 21.3 EVALUATING ALL TRAJECTORIES**'
  id: totrans-384
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**片段 21.3 评估所有轨迹**'
- en: '![](Image00467.jpg)'
  id: totrans-385
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00467.jpg)'
- en: Note that this procedure selects an globally optimal trajectory without relying
    on convex optimization. A solution will be found even if the covariance matrices
    are ill-conditioned, transaction cost functions are non-continuous, etc. The price
    we pay for this generality is that calculating the solution is extremely computationally
    intensive. Indeed, evaluating all trajectories is similar to the traveling-salesman
    problem. Digital computers are inadequate for this sort of NP-complete or NP-hard
    problems; however, quantum computers have the advantage of evaluating multiple
    solutions at once, thanks to the property of linear superposition.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，该过程选择了一个全球最优轨迹，而不依赖于凸优化。即使协方差矩阵条件不良，交易成本函数不连续等，仍然会找到解决方案。我们为这种通用性付出的代价是计算解决方案极其耗费计算资源。实际上，评估所有轨迹类似于旅行推销员问题。数字计算机不适合这种
    NP 完全或 NP 困难的问题；然而，量子计算机因线性叠加特性而能够同时评估多个解。
- en: The approach presented in this chapter set the foundation for Rosenberg et al.
    [2016], which solved the optimal trading trajectory problem using a quantum annealer.
    The same logic can be applied to a wide range on financial problems involving
    path dependency, such as a trading trajectory. Intractable ML algorithm can be
    discretized and translated into a brute force search, intended for a quantum computer.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提出的方法为 Rosenberg 等人 [2016] 的研究奠定了基础，该研究利用量子退火器解决了最优交易轨迹问题。同样的逻辑可以应用于涉及路径依赖的大范围金融问题，如交易轨迹。难以处理的
    ML 算法可以离散化并转化为针对量子计算机的暴力搜索。
- en: '**21.6 A Numerical Example**'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.6 数值示例**'
- en: Below we illustrate how the global optimum can be found in practice, using a
    digital computer. A quantum computer would evaluate all trajectories at once,
    whereas the digital computer does this sequentially.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 以下我们说明如何在实践中找到全局最优解，使用数字计算机。量子计算机将同时评估所有轨迹，而数字计算机则是顺序进行。
- en: '**21.6.1 Random Matrices**'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.6.1 随机矩阵**'
- en: Snippet 21.4 returns a random matrix of Gaussian values with known rank, which
    is useful in many applications (see exercises). You may want to consider this
    code the next time you want to execute multivariate Monte Carlo experiments, or
    scenario analyses.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段21.4返回具有已知秩的高斯值随机矩阵，这在许多应用中很有用（见练习）。下次你想执行多变量蒙特卡罗实验或情景分析时，可以考虑使用这段代码。
- en: '**SNIPPET 21.4 PRODUCE A RANDOM MATRIX OF A GIVEN RANK**'
  id: totrans-392
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**代码片段21.4 生成给定秩的随机矩阵**'
- en: '![](Image00480.jpg)'
  id: totrans-393
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00480.jpg)'
- en: Snippet 21.5 generates *H* vectors of means, covariance matrices, and transaction
    cost factors, *C* , μ, *V.* These variables are stored in a `params` list.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段21.5生成*H*均值向量、协方差矩阵和交易成本因子*C*，μ，*V*。这些变量存储在`params`列表中。
- en: '**SNIPPET 21.5 GENERATE THE PROBLEM''S PARAMETERS**'
  id: totrans-395
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**代码片段21.5 生成问题的参数**'
- en: '![](Image00492.jpg)'
  id: totrans-396
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00492.jpg)'
- en: '**21.6.2 Static Solution**'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.6.2 静态解决方案**'
- en: Snippet 21.6 computes the performance of the trajectory that results from local
    (static) optima.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段21.6计算了由局部（静态）最优解产生的轨迹性能。
- en: '**SNIPPET 21.6 COMPUTE AND EVALUATE THE STATIC SOLUTION**'
  id: totrans-399
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**代码片段21.6 计算和评估静态解决方案**'
- en: '![](Image00507.jpg)'
  id: totrans-400
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00507.jpg)'
- en: '**21.6.3 Dynamic Solution**'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '**21.6.3 动态解决方案**'
- en: Snippet 21.7 computes the performance associated with the globally dynamic optimal
    trajectory, applying the functions explained throughout the chapter.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段21.7计算与全局动态最优轨迹相关的性能，应用本章中解释的函数。
- en: '**SNIPPET 21.7 COMPUTE AND EVALUATE THE DYNAMIC SOLUTION**'
  id: totrans-403
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**代码片段21.7 计算和评估动态解决方案**'
- en: '![](Image00378.jpg)'
  id: totrans-404
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![](Image00378.jpg)'
- en: '**Exercises**'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '**练习**'
- en: Using the pigeonhole argument, prove that ![](Image00546.jpg) *.*
  id: totrans-406
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用抽屉原则，证明！[](Image00546.jpg) *.*
- en: Use Snippet 21.4 to produce random matrices of size (1000, 10), `sigma = 1`
    and
  id: totrans-407
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用代码片段21.4生成大小为（1000, 10），`sigma = 1`的随机矩阵。
- en: '`rank = 1` . Plot the eigenvalues of the covariance matrix.'
  id: totrans-408
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rank = 1`。绘制协方差矩阵的特征值。'
- en: '`rank = 5` . Plot the eigenvalues of the covariance matrix.'
  id: totrans-409
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rank = 5`。绘制协方差矩阵的特征值。'
- en: '`rank = 10` . Plot the eigenvalues of the covariance matrix.'
  id: totrans-410
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`rank = 10`。绘制协方差矩阵的特征值。'
- en: What pattern do you observe? How would you connect it to Markowitz's curse (Chapter
    16)?
  id: totrans-411
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你观察到了什么模式？你如何将其与马科维茨的诅咒（第16章）联系起来？
- en: 'Run the numerical example in Section 21.6:'
  id: totrans-412
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在第21.6节运行数值示例：
- en: Use `size = 3` , and compute the running time with `timeit` . Repeat 10 batches
    of 100 executions. How long did it take?
  id: totrans-413
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `size = 3`，并使用 `timeit` 计算运行时间。重复10批次的100次执行。花费了多长时间？
- en: Use `size = 4` , and `timeit` . Repeat 10 batches of 100 executions. How long
    did it take?
  id: totrans-414
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `size = 4` 和 `timeit`。重复10批次的100次执行。花费了多长时间？
- en: Review all snippets in this chapter.
  id: totrans-415
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 审查本章中的所有代码片段。
- en: How many could be vectorized?
  id: totrans-416
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有多少可以向量化？
- en: How many could be parallelized, using the techniques from Chapter 20?
  id: totrans-417
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有多少可以使用第20章中的技术进行并行化？
- en: If you optimize the code, by how much do you think you could speed it up?
  id: totrans-418
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你优化代码，你认为你能加快多少速度？
- en: Using the optimized code, what is the problem dimensionality that could be solved
    within a year?
  id: totrans-419
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用优化代码，在一年内可以解决的问题维度是什么？
- en: Under what circumstances would the globally dynamic optimal trajectory match
    the sequence of local optima?
  id: totrans-420
  prefs:
  - PREF_OL
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在什么情况下，全局动态最优轨迹将与局部最优序列相匹配？
- en: Is that a realistic set of assumptions?
  id: totrans-421
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一组现实的假设吗？
- en: If not,
  id: totrans-422
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果不是，
- en: could that explain why naïve solutions beat Markowitz's (Chapter 16)?
  id: totrans-423
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是否可以解释为什么简单的解决方案优于马科维茨的（第16章）？
- en: why do you think so many firms spend so much effort in computing sequences of
    local optima?
  id: totrans-424
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你认为为什么这么多公司在计算局部最优序列上花费如此多的精力？
- en: '**References**'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**'
- en: 'Garleanu, N. and L. Pedersen (2012): “Dynamic trading with predictable returns
    and transaction costs.” *Journal of Finance* , Vol. 68, No. 6, pp. 2309–2340.'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Garleanu, N. 和 L. Pedersen (2012): “具有可预测回报和交易成本的动态交易。” *金融学期刊* ，第68卷，第6期，第2309–2340页。'
- en: 'Johansson, F. (2012): “Efficient implementation of the Hardy-Ramanujan-Rademacher
    formula,” *LMS Journal of Computation and Mathematics* , Vol. 15, pp. 341–359.'
  id: totrans-427
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Johansson, F. (2012): “哈迪-拉马努金-拉德默赫公式的高效实现，” *LMS计算与数学期刊* ，第15卷，第341–359页。'
- en: 'Rosenberg, G., P. Haghnegahdar, P. Goddard, P. Carr, K. Wu, and M. López de
    Prado (2016): “Solving the optimal trading trajectory problem using a quantum
    annealer.” *IEEE Journal of Selected Topics in Signal Processing* , Vol. 10, No.
    6 (September), pp. 1053–1060.'
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Rosenberg, G., P. Haghnegahdar, P. Goddard, P. Carr, K. Wu, 和 M. López de Prado
    (2016): “使用量子退火器解决最优交易轨迹问题。” *IEEE信号处理选刊* ，第10卷，第6期（9月），第1053–1060页。'
- en: 'Williams, C. (2010): *Explorations in Quantum Computing* , 2nd ed. Springer.'
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 威廉姆斯，C.（2010）：*量子计算探索*，第2版。施普林格。
- en: 'Woeginger, G. (2003): “Exact algorithms for NP-hard problems: A survey.” In
    Junger, M., G. Reinelt, and G. Rinaldi: *Combinatorial Optimization—Eureka, You
    Shrink!* Lecture notes in computer science, Vol. 2570, Springer, pp. 185–207.'
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 沃根格，G.（2003）： “NP-hard问题的精确算法：一项调查。” 见于于永，M.，G. 雷因特和G. 里纳尔迪：*组合优化—奇迹，你变小了！*
    计算机科学讲义，卷2570，施普林格，第185–207页。
- en: '**CHAPTER 22**'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '**第22章**'
- en: '**High-Performance Computational Intelligence and Forecasting Technologies**'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '**高性能计算智能与预测技术**'
- en: Kesheng Wu and Horst D. Simon
  id: totrans-433
  prefs:
  - PREF_BQ
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 吴克生和霍斯特·D·西蒙
- en: '**22.1 Motivation**'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.1 动机**'
- en: This chapter provides an introduction to the Computational Intelligence and
    Forecasting Technologies (CIFT) project at Lawrence Berkeley National Laboratory
    (LBNL). The main objective of CIFT is to promote the use of high-performance computing
    (HPC) tools and techniques for analysis of streaming data. After noticing the
    data volume being given as the explanation for the five-month delay for SEC and
    CFTC to issue their report on the 2010 Flash Crash, LBNL started the CIFT project
    to apply HPC technologies to manage and analyze financial data. Making timely
    decisions with streaming data is a requirement for many business applications,
    such as avoiding impending failure in the electric power grid or a liquidity crisis
    in financial markets. In all these cases, the HPC tools are well suited in handling
    the complex data dependencies and providing a timely solution. Over the years,
    CIFT has worked on a number of different forms of streaming data, including those
    from vehicle traffic, electric power grid, electricity usage, and so on. The following
    sections explain the key features of HPC systems, introduce a few special tools
    used on these systems, and provide examples of streaming data analyses using these
    HPC tools.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了劳伦斯伯克利国家实验室（LBNL）的计算智能与预测技术（CIFT）项目。CIFT的主要目标是促进高性能计算（HPC）工具和技术在流数据分析中的应用。在注意到数据量被作为美国证券交易委员会（SEC）和商品期货交易委员会（CFTC）发布2010年闪电崩盘报告延迟五个月的解释后，LBNL启动了CIFT项目，以应用HPC技术来管理和分析金融数据。及时处理流数据是许多商业应用的要求，例如避免电力网中的潜在故障或金融市场中的流动性危机。在所有这些情况下，HPC工具在处理复杂数据依赖关系和提供及时解决方案方面都非常适合。多年来，CIFT处理了多种形式的流数据，包括来自车辆交通、电力网、电力使用等的数据。以下部分将解释HPC系统的关键特性，介绍在这些系统上使用的一些特殊工具，并提供使用这些HPC工具进行流数据分析的示例。
- en: '**22.2 Regulatory Response to the Flash Crash of 2010**'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.2 对2010年闪电崩盘的监管响应**'
- en: On May 6, 2010, at about 2:45 p.m. (U.S. Eastern Daylight Time), the U.S. stock
    market experienced a nearly 10% drop in the Dow Jones Industrial Average, only
    to recover most of the loss a few minutes later. It took about five months for
    regulatory agencies to come up with an investigation report. In front of a congressional
    panel investigating the crash, the data volume (∼20 terabytes) was given as the
    primary reason for the long delay. Since HPC systems, such as those at National
    Energy Research Scientific Computing (NERSC) center, ^([1](text00004.html#filepos0001169156))
    routinely work with hundreds of terabytes in minutes, we should have no problem
    processing the data from financial markets. This led to the establishment of the
    CIFT project with the mission to apply the HPC techniques and tools for financial
    data analysis.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年5月6日下午约2:45（美国东部夏令时间），美国股市道琼斯工业平均指数经历了近10%的下跌，但在几分钟后几乎恢复了所有损失。监管机构花了大约五个月时间才提出调查报告。在国会小组面前调查崩盘时，数据量（约20TB）被认为是延迟的主要原因。由于高性能计算（HPC）系统，例如国家能源研究科学计算中心（NERSC），^([1](text00004.html#filepos0001169156))通常在几分钟内处理数百TB数据，我们应该能够轻松处理金融市场的数据。这促成了CIFT项目的建立，其使命是应用HPC技术和工具进行金融数据分析。
- en: A key aspect of financial big data is that it consists of mostly time series.
    Over the years, the CIFT team, along with numerous collaborators, has developed
    techniques to analyze many different forms of data streams and time series. This
    chapter provides a brief introduction to the HPC system including both hardware
    (Section 22.4) and software (Section 22.5), and recounts a few successful use
    cases (Section 22.6). We conclude with a summary of our vision and work so far
    and also provide contact information for interested readers.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 金融大数据的一个关键方面是它主要由时间序列组成。多年来，CIFT 团队及其众多合作者开发了分析多种形式的数据流和时间序列的技术。本章简要介绍了HPC系统，包括硬件（第
    22.4 节）和软件（第 22.5 节），并讲述了一些成功的案例（第 22.6 节）。我们最后总结了迄今为止的愿景和工作，并为感兴趣的读者提供了联系方式。
- en: '**22.3 Background**'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.3 背景**'
- en: Advances in computing technology have made it considerably easier to look for
    complex patterns. This pattern-finding capability is behind a number of recent
    scientific breakthroughs, such as the discovery of the Higgs particle (Aad et al.
    [2016]) and gravitational waves (Abbot et al. [2016]). This same capability is
    also at the core of many internet companies, for example, to match users with
    advertisers (Zeff and Aronson [1999], Yen et al. [2009]). However, the hardware
    and software used in science and in commerce are quite different. The HPC tools
    have some critical advantages that should be useful in a variety of business applications.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 计算技术的进步使得寻找复杂模式变得相当容易。这种模式发现能力是近期若干科学突破的基础，例如希格斯粒子的发现（Aad et al. [2016]）和引力波（Abbot
    et al. [2016]）。这种能力同样是许多互联网公司的核心，例如，用于将用户与广告商匹配（Zeff and Aronson [1999], Yen et
    al. [2009]）。然而，科学与商业中使用的硬件和软件有着明显的不同。HPC 工具在多种商业应用中具有一些重要优势。
- en: Tools for scientists are typically built around high-performance computing (HPC)
    platforms, while the tools for commercial applications are built around cloud
    computing platforms. For the purpose of sifting through large volumes of data
    to find useful patterns, the two approaches have been shown to work well. However,
    the marquee application for HPC systems is large-scale simulation, such as weather
    models used for forecasting regional storms in the next few days (Asanovic et al.
    [2006]). In contrast, the commercial cloud was initially motivated by the need
    to process a large number of independent data objects concurrently (data parallel
    tasks).
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 科学家的工具通常围绕高性能计算（HPC）平台构建，而商业应用的工具则围绕云计算平台构建。为了从大量数据中筛选出有用模式，这两种方法都被证明效果良好。然而，HPC系统的主要应用是大规模仿真，例如用于预测未来几天区域性风暴的天气模型（Asanovic
    et al. [2006]）。相比之下，商业云最初是出于同时处理大量独立数据对象（数据并行任务）的需求而产生的。
- en: For our work, we are primarily interested in analyses of streaming data. In
    particular, high-speed complex data streams, such as those from sensor networks
    monitoring our nation's electric power grid and highway systems. This streaming
    workload is not ideal for either HPC systems or cloud systems as we discuss below,
    but we believe that the HPC ecosystem has more to offer to address the streaming
    data analysis than the cloud ecosystem does.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的工作中，我们主要关注流数据的分析。特别是来自传感器网络的高速复杂数据流，这些网络监测着我国的电力网和公路系统。这种流工作负载对HPC系统或云系统都不是理想的，如我们下面所讨论的，但我们认为HPC生态系统在处理流数据分析方面比云生态系统有更多的优势。
- en: Cloud systems were originally designed for parallel data tasks, where a large
    number of independent data objects can be processed concurrently. The system is
    thus designed for high throughput, not for producing real-time responses. However,
    many business applications require real-time or near-real-time responses. For
    example, an instability event in an electric power grid could develop and grow
    into a disaster in minutes; finding the tell-tale signature quickly enough would
    avert the disaster. Similarly, signs of emerging illiquidity events have been
    identified in the financial research literature; quickly finding these signs during
    the active market trading hours could offer options to prevent shocks to the market
    and avoid flash crashes. The ability to prioritize quick turnaround time is essential
    in these cases.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 云系统最初是为并行数据任务设计的，在这些任务中，大量独立的数据对象可以同时处理。因此，该系统旨在实现高吞吐量，而不是产生实时响应。然而，许多商业应用需要实时或近实时的响应。例如，电力网中的不稳定事件可能在几分钟内发展并演变为灾难；快速找到明显的征兆可以避免灾难。同样，金融研究文献中也识别出了新出现的流动性不足事件的迹象；在活跃的市场交易时间内快速发现这些迹象可以提供防止市场冲击和避免闪崩的选项。在这些情况下，优先考虑快速周转时间的能力至关重要。
- en: A data stream is by definition available progressively; therefore, there may
    not be a large number of data objects to be processed in parallel. Typically,
    only a fixed amount of the most recent data records are available for analysis.
    In this case, an effective way to harness the computing power of many central
    processing units (CPUs) cores is to divide the analytical work on a single data
    object (or a single time-step) to many CPU cores. The HPC ecosystem has more advanced
    tools for this kind of work than the cloud ecosystem does.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 数据流按定义是逐步可用的；因此，可能没有大量的数据对象可以并行处理。通常，仅有固定数量的最新数据记录可用于分析。在这种情况下，有效利用许多中央处理单元（CPU）核心的计算能力的一种方式是将对单个数据对象（或单个时间步）的分析工作分配给多个CPU核心。HPC生态系统在这类工作方面拥有比云生态系统更先进的工具。
- en: These are the main points that motivated our work. For a more thorough comparison
    of HPC systems and cloud systems, we refer interested readers to Asanovic et al.
    [2006]. In particular, Fox et al. [2015] have created an extensive taxonomy for
    describing the similarities and differences for any application scenario.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是激励我们工作的主要点。关于HPC系统与云系统的更全面比较，我们建议感兴趣的读者参考Asanovic等人的[2006]文献。尤其是，Fox等人[2015]为描述任何应用场景的相似性和差异性创建了一个详尽的分类法。
- en: In short, we believe the HPC community has a lot to offer to advance the state-of-the-art
    for streaming analytics. The CIFT project was established with a mission to transfer
    LBNL's HPC expertise to streaming business applications. We are pursuing this
    mission via collaboration, demonstration, and tool development.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们认为HPC社区在推动流分析的最先进技术方面有很多可提供的帮助。CIFT项目的使命是将LBNL的HPC专业知识转移到流业务应用中。我们通过合作、演示和工具开发来追求这一使命。
- en: To evaluate the potential uses of HPC technology, we have spent time working
    with various applications. This process not only exposes our HPC experts to a
    variety of fields, but also makes it possible for us to gather financial support
    to establish a demonstration facility.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 为了评估HPC技术的潜在用途，我们花费时间与各种应用进行合作。这一过程不仅使我们的HPC专家接触到多个领域，还使我们能够获得资金支持，以建立一个演示设施。
- en: With the generous gifts from a number of early supporters of this effort, we
    established a substantial computing cluster dedicated to this work. This dedicated
    computer (named dirac1) allows users to utilize an HPC system and evaluate their
    applications for themselves.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 在众多早期支持者的慷慨捐赠下，我们建立了一个专门用于此工作的庞大计算集群。这个专用计算机（名为dirac1）允许用户利用HPC系统，自行评估他们的应用。
- en: We are also engaged in a tool development effort to make HPC systems more usable
    for streaming data analysis. In the following sections, we will describe the hardware
    and software of the dedicated CIFT machine, as well as some of the demonstration
    and tool development efforts. Highlights include improving the data handling speed
    by 21-fold, and increasing the speed of computing an early warning indicator by
    720-fold.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还参与了一项工具开发工作，以提高高性能计算（HPC）系统在流数据分析中的可用性。在接下来的部分中，我们将描述专用CIFT机器的硬件和软件，以及一些演示和工具开发的努力。亮点包括将数据处理速度提高21倍，以及将早期预警指标的计算速度提高720倍。
- en: '**22.4 HPC Hardware**'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.4 HPC硬件**'
- en: Legend has it that the first generation of big data systems was built with the
    spare computer components gleaned from a university campus. This is likely an
    urban legend, but it underscores an important point about the difference between
    HPC systems and cloud systems. Theoretically, a HPC system is built with custom
    high-cost components, while cloud systems are built with standard low-cost commodity
    components. In practice, since the worldwide investment in HPC systems is much
    smaller than that of personal computers, there is no way for manufacturers to
    produce custom components just for the HPC market. The truth is that HPC systems
    are largely assembled from commodity components just like cloud systems. However,
    due to their different target applications, there are some differences in their
    choices of the components.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 传说第一代大数据系统是用从大学校园收集的闲置计算组件构建的。这可能是一个都市传说，但它强调了HPC系统和云系统之间差异的重要一点。理论上，HPC系统是用定制的高成本组件构建的，而云系统则是用标准的低成本商品组件构建的。实际上，由于全球对HPC系统的投资远低于个人电脑，因此制造商不可能仅为HPC市场生产定制组件。事实是，HPC系统在很大程度上是由商品组件组装而成，就像云系统一样。然而，由于它们的目标应用不同，组件选择上存在一些差异。
- en: Let us describe the computing elements, storage system, and networking system
    in turn. [Figure 22.1](text00004.html#filepos0001110151) is a high-level schematic
    diagram representing the key components of the Magellan cluster around year 2010
    (Jackson et al. [2010]; Yelick et al. [2011]). The computer elements include both
    CPUs and graphics processing units (GPUs). These CPUs and GPUs are commercial
    products in almost all the cases. For example, the nodes on dirac1 use a 24-core
    2.2Ghz Intel processor, which is common to cloud computing systems. Currently,
    dirac1 does not contain GPUs.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们依次描述计算元素、存储系统和网络系统。[图 22.1](text00004.html#filepos0001110151)是一个高层次示意图，表示2010年左右的Magellan集群的关键组件（Jackson等人[2010]；Yelick等人[2011]）。计算元素包括CPU和图形处理单元（GPU）。这些CPU和GPU几乎都是商业产品。例如，dirac1上的节点使用的是一个24核2.2GHz的Intel处理器，这在云计算系统中很常见。目前，dirac1不包含GPU。
- en: '![](Image00518.jpg)'
  id: totrans-453
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00518.jpg)'
- en: '[**Figure 22.1**](text00004.html#filepos0001109467) Schematic of the Magellan
    cluster (circa 2010), an example of HPC computer cluster'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 22.1**](text00004.html#filepos0001109467) Magellan集群的示意图（约2010年），HPC计算集群的一个例子'
- en: 'The networking system consists of two parts: the InfiniBand network connecting
    the components within the cluster, and the switched network connection to the
    outside world. In this particular example, the outside connections are labeled
    “ESNet” and “ANI.” The InfiniBand network switches are also common in cloud computing
    systems.'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 网络系统由两部分组成：连接集群内组件的InfiniBand网络和与外界的交换网络连接。在这个特定的例子中，外部连接标记为“ESNet”和“ANI”。InfiniBand网络交换机在云计算系统中也很常见。
- en: The storage system in Figure 1 includes both rotating disks and flash storage.
    This combination is also common. What is different is that a HPC system typically
    has its storage system concentrated outside of the computer nodes, while a typical
    cloud computing system has its storage system distributed among the compute nodes.
    These two approaches have their own advantages and disadvantages. For example,
    the concentrated storage is typically exported as a global file system to all
    computer nodes, which makes it easier to deal with data stored in files. However,
    this requires a highly capable network connecting the CPUs and the disks. In contrast,
    the distributed approach could use lower-capacity network because there is some
    storage that is close to each CPU. Typically, a distributed file system, such
    as the Google file system (Ghemawat, Gobioff, and Leung [2003]), is layered on
    top of a cloud computing system to make the storage accessible to all CPUs.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 图1中的存储系统包括旋转硬盘和闪存存储。这种组合也很常见。不同之处在于，HPC系统的存储系统通常集中在计算节点外，而典型的云计算系统的存储系统则分布在计算节点之间。这两种方法各有优缺点。例如，集中存储通常作为全球文件系统导出给所有计算节点，这使得处理存储在文件中的数据变得更容易。然而，这需要一个高效能的网络来连接CPU和磁盘。相比之下，分布式方法可以使用较低容量的网络，因为有一些存储靠近每个CPU。通常，像谷歌文件系统（Ghemawat、Gobioff和Leung
    [2003]）这样的分布式文件系统会在云计算系统之上层叠，使存储对所有CPU可访问。
- en: In short, the current generation of HPC systems and cloud systems use pretty
    much the same commercial hardware components. Their differences are primarily
    in the arrangement of the storage systems and networking systems. Clearly, the
    difference in the storage system designs could affect the application performance.
    However, the virtualization layer of the cloud systems is likely the bigger cause
    of application performance difference. In the next section, we will discuss another
    factor that could have an even larger impact, namely software tools and libraries.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，当前一代HPC系统和云系统使用的几乎都是相同的商业硬件组件。它们的区别主要在于存储系统和网络系统的布局。显然，存储系统设计的差异可能会影响应用性能。然而，云系统的虚拟化层可能是应用性能差异的更大原因。在下一节中，我们将讨论另一个可能有更大影响的因素，即软件工具和库。
- en: Virtualization is generally used in the cloud computing environment to make
    the same hardware available to multiple users and to insulate one software environment
    from another. This is one of the more prominent features distinguishing the cloud
    computing environment from the HPC environment. In most cases, all three basic
    components of a computer system—CPU, storage, and networking—are all virtualized.
    This virtualization has many benefits. For example, an existing application can
    run on a CPU chip without recompiling; many users can share the same hardware;
    hardware faults could be corrected through the virtualization software; and applications
    on a failed compute node could be more easily migrated to another node. However,
    this virtualization layer also imposes some runtime overhead and could reduce
    application performance. For time-sensitive applications, this reduction in performance
    could become a critical issue.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化通常用于云计算环境，使同一硬件可供多个用户使用，并将一个软件环境与另一个环境隔离。这是区分云计算环境与HPC环境的更突出特点之一。在大多数情况下，计算机系统的三个基本组件——CPU、存储和网络——都是虚拟化的。这种虚拟化有很多好处。例如，现有应用可以在CPU芯片上运行而无需重新编译；许多用户可以共享相同的硬件；硬件故障可以通过虚拟化软件进行修复；失败计算节点上的应用可以更轻松地迁移到其他节点。然而，这一虚拟化层也会增加一些运行时开销，可能会降低应用性能。对于时间敏感的应用，这种性能降低可能成为一个关键问题。
- en: Tests show that the performance differences could be quite large. Next, we briefly
    describe a performance study reported by Jackson et al [2010]. [Figure 22.2](text00004.html#filepos0001114364)
    shows the performance slowdown using different computer systems. The names below
    the horizontal axis are different software packages commonly used at NERSC. The
    left bar corresponds to the Commercial Cloud, the middle bar to Magellan, and
    the (sometimes missing) right bar to the EC2-Beta-Opt system. The non-optimized
    commercial cloud instances run these software packages 2 to 10 times slower than
    on a NERSC supercomputer. Even on the more expensive high-performance instances,
    there are noticeable slowdowns.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 测试表明，性能差异可能相当大。接下来，我们简要描述了Jackson等人于[2010]报告的一项性能研究。[图22.2](text00004.html#filepos0001114364)显示了使用不同计算机系统时的性能下降。横轴下方的名称是NERSC常用的不同软件包。左侧条形代表商业云，中间条形代表Magellan，右侧（有时缺失）条形代表EC2-Beta-Opt系统。未优化的商业云实例运行这些软件包的速度比NERSC超级计算机慢2到10倍。即使在更昂贵的高性能实例上，也会有明显的减速。
- en: '![](Image00589.jpg)'
  id: totrans-460
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00589.jpg)'
- en: '[**Figure 22.2**](text00004.html#filepos0001113619) The cloud ran scientific
    applications considerably slower than on HPC systems (circa 2010)'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图22.2**](text00004.html#filepos0001113619) 云在运行科学应用时的速度明显慢于HPC系统（大约2010年）'
- en: '[Figure 22.3](text00004.html#filepos0001115509) shows a study of the main factor
    causing the slowdown with the software package PARATEC. In Figure 2, we see that
    PARATEC took 53 times longer to complete on the commercial cloud than on an HPC
    system. We observe from Figure 3 that, as the number of cores (horizontal axis)
    increases, the differences among the measured performances (measured in TFLOP/s)
    become larger. In particular, the line labeled “10G- TCPoEth Vm” barely increases
    as the number of cores grows. This is the case where the network instance is using
    virtualized networking (TCP over Ethernet). It clearly shows that the networking
    virtualization overhead is significant, to the point of rendering the cloud useless.'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 22.3](text00004.html#filepos0001115509) 显示了导致软件包 PARATEC 性能下降的主要因素的研究。在图
    2 中，我们看到 PARATEC 在商业云上的完成时间比在 HPC 系统上长 53 倍。从图 3 中我们观察到，随着核心数量（横轴）的增加，测量性能（以 TFLOP/s
    为单位）之间的差异变得更大。特别是，标记为 “10G-TCPoEth Vm” 的线在核心数量增加时几乎没有变化。这是网络实例使用虚拟化网络（TCP over
    Ethernet）的情况。它清楚地表明，网络虚拟化开销是显著的，以至于使云变得无用。'
- en: '![](Image00613.jpg)'
  id: totrans-463
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00613.jpg)'
- en: '[**Figure 22.3**](text00004.html#filepos0001114573) As the number of cores
    increases (horizontal axis), the virtualization overhead becomes much more significant
    (circa 2010)'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 22.3**](text00004.html#filepos0001114573) 随着核心数量的增加（横轴），虚拟化开销变得更加显著（约
    2010 年）。'
- en: The issue of virtualization overhead is widely recognized (Chen et al. [2015]).
    There has been considerable research aimed at addressing both the I/O virtualization
    overhead (Gordon et al. [2012]) as well as the networking virtualization overhead
    (Dong et al. [2012]). As these state-of-the-art techniques are gradually being
    moved into commercial products, we anticipate the overhead will decrease in the
    future, but some overhead will inevitably remain.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化开销问题被广泛认可（Chen et al. [2015]）。已经进行了大量研究，旨在解决 I/O 虚拟化开销（Gordon et al. [2012]）以及网络虚拟化开销（Dong
    et al. [2012]）。随着这些最先进的技术逐渐进入商业产品，我们预计未来开销将减少，但某些开销不可避免地会保留。
- en: To wrap up this section, we briefly touch on the economics of HPC versus cloud.
    Typically, HPC systems are run by nonprofit research organizations and universities,
    while cloud systems are provided by commercial companies. Profit, customer retention,
    and many other factors affect the cost of a cloud system (Armburst et al. [2010]).
    In 2011, the Magellan project report stated that “Cost analysis shows that DOE
    centers are cost competitive, typically 3–7 × less expensive, when compared to
    commercial cloud providers” (Yelick et al. [2010]).
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的总结中，我们简要讨论 HPC 与云计算的经济学。通常，HPC 系统由非营利研究组织和大学运行，而云系统由商业公司提供。利润、客户保留以及许多其他因素影响云系统的成本（Armburst
    et al. [2010]）。在 2011 年，Magellan 项目报告指出：“成本分析表明，与商业云提供商相比，DOE 中心的成本具有竞争力，通常便宜
    3–7 倍”（Yelick et al. [2010]）。
- en: A group of high-energy physicists thought their use case was well-suited for
    cloud computing and conducted a detailed study of a comparison study (Holzman
    et al. [2017]). Their cost comparisons still show the commercial cloud offerings
    as approximately 50% more expensive than dedicated HPC systems for comparable
    computing tasks; however, the authors worked with severe limitations on data ingress
    and egress to avoid potentially hefty charges on data movement. For complex workloads,
    such as the streaming data analyses discussed in this book, we anticipate that
    this HPC cost advantage will remain in the future. A 2016 National Academy of
    Sciences study came to the same conclusion that even a long-term lease from Amazon
    is likely 2 to 3 times more expensive than HPC systems to handle the expected
    science workload from NSF (Box 6.2 from National Academies of Sciences, [2016]).
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 一组高能物理学家认为他们的用例非常适合云计算，并进行了详细的比较研究（Holzman et al. [2017]）。他们的成本比较仍然表明，商业云服务在可比计算任务中大约比专用
    HPC 系统贵 50%；然而，作者在数据进出方面面临严重限制，以避免可能的高额数据移动费用。对于复杂的工作负载，例如本书讨论的流数据分析，我们预计这种 HPC
    成本优势在未来仍将存在。2016 年美国国家科学院的一项研究得出了同样的结论，即即使是亚马逊的长期租赁，其处理 NSF 预期科学工作负载的成本也可能是 HPC
    系统的 2 到 3 倍（见国家科学院的第 6.2 节，[2016]）。
- en: '**22.5 HPC Software**'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.5 HPC 软件**'
- en: Ironically, the real power of a supercomputer is in its specialized software.
    There are a wide variety of software packages available for both HPC systems and
    cloud systems. In most cases, the same software package is available on both platforms.
    Therefore, we chose to focus on software packages that are unique to HPC systems
    and have the potential to improve computational intelligence and forecasting technologies.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 具有讽刺意味的是，超级计算机的真正力量在于其专门的软件。无论是HPC系统还是云系统，都有多种软件包可供选择。在大多数情况下，相同的软件包在这两个平台上均可用。因此，我们选择专注于独特于HPC系统的软件包，并且有潜力改善计算智能和预测技术。
- en: One noticeable feature of the HPC software ecosystem is that much of the application
    software performs its own interprocessor communication through Message Passing
    Interface (MPI). In fact, the cornerstone of most scientific computing books is
    MPI (Kumar et al. [1994], Gropp, Lusk, and Skjellum [1999]). Accordingly, our
    discussion of HPC software tools will start with MPI. As this book relies on data
    processing algorithms, we will concentrate on data management tools (Shoshami
    and Rotem [2010]).
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: HPC软件生态系统的一个显著特征是，许多应用软件通过消息传递接口（MPI）执行自身的处理器间通信。事实上，大多数科学计算书籍的基石就是MPI（Kumar等
    [1994], Gropp, Lusk, 和 Skjellum [1999]）。因此，我们对HPC软件工具的讨论将从MPI开始。由于本书依赖于数据处理算法，我们将专注于数据管理工具（Shoshami
    和 Rotem [2010]）。
- en: '**22.5.1 Message Passing Interface**'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.5.1 消息传递接口**'
- en: Message Passing Interface is a communication protocol for parallel computing
    (Gropp, Lusk, and Skjellum [1999], Snir et al. [1988]). It defines a number of
    point-to-point data exchange operations as well as some collective communication
    operations. The MPI standard was established based on several early attempts to
    build portable communication libraries. The early implementation from Argonne
    National Lab, named MPICH, was high performance, scalable, and portable. This
    helped MPI to gain wide acceptance among scientific users.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 消息传递接口是一种用于并行计算的通信协议（Gropp, Lusk, 和 Skjellum [1999], Snir 等 [1988]）。它定义了一些点对点数据交换操作以及一些集体通信操作。MPI标准的建立是基于几次早期尝试建立可移植通信库的基础上。来自阿贡国家实验室的早期实现，名为MPICH，具有高性能、可扩展和可移植的特点。这帮助MPI在科学用户中获得了广泛的接受。
- en: The success of MPI is partly due to its separation of Language Independent Specifications
    (LIS) from its language bindings. This allows the same core function to be provided
    to many different programming languages, which also contributes to its acceptance.
    The first MPI standard specified ANSI C and Fortran-77 bindings together with
    the LIS. The draft specification was presented to the user community at the 1994
    Supercomputing Conference.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: MPI的成功部分归功于其将语言无关规范（LIS）与语言绑定的分离。这使得同一个核心功能可以为许多不同的编程语言提供，这也促进了其被广泛接受。第一个MPI标准同时指定了ANSI
    C和Fortran-77的绑定以及LIS。草案规范在1994年超级计算会议上向用户社区进行了展示。
- en: Another key factor contributing to MPI's success is the open-source license
    used by MPICH. This license allows the vendors to take the source code to produce
    their own custom versions, which allows the HPC system vendors to quickly produce
    their own MPI libraries. To this day, all HPC systems support the familiar MPI
    on their computers. This wide adoption also ensures that MPI will continue to
    be the favorite communication protocol among the users of HPC systems.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个促成MPI成功的关键因素是MPICH所使用的开源许可证。该许可证允许供应商获取源代码来生成他们自己的定制版本，这使得高性能计算（HPC）系统供应商能够快速生成自己的MPI库。直到今天，所有HPC系统都在其计算机上支持熟悉的MPI。这种广泛的采用也确保了MPI将继续成为HPC系统用户喜爱的通信协议。
- en: '**22.5.2 Hierarchical Data Format 5**'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.5.2 分层数据格式 5**'
- en: In describing the HPC hardware components, we noted that the storage systems
    in an HPC platform are typically different from those in a cloud platform. Correspondingly,
    the software libraries used by most users for accessing the storage systems are
    different as well. This difference can be traced to the difference in the conceptual
    models of data. Typically, HPC applications treat data as multi-dimensional arrays
    and, therefore, the most popular I/O libraries on HPC systems are designed to
    work with multi-dimensional arrays. Here, we describe the most widely used array
    format library, HDF5 (Folk et al. [2011]).
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 在描述HPC硬件组件时，我们注意到HPC平台中的存储系统通常与云平台中的存储系统不同。因此，大多数用户用于访问存储系统的软件库也不同。这种差异可以追溯到数据概念模型的不同。通常，HPC应用将数据视为多维数组，因此，HPC系统上最流行的I/O库被设计为与多维数组配合使用。在这里，我们描述最广泛使用的数组格式库HDF5（Folk等人
    [2011]）。
- en: HDF5 is the fifth iteration of the Hierarchical Data Format, produced by the
    HDF Group. ^([2](text00004.html#filepos0001169512)) The basic unit of data in
    HDF5 is an array plus its associated information such as attributes, dimensions,
    and data type. Together, they are known as a data set. Data sets can be grouped
    into large units called groups, and groups can be organized into high-level groups.
    This flexible hierarchical organization allows users to express complex relationships
    among the data sets.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: HDF5是由HDF集团推出的分层数据格式的第五个版本。^([2](text00004.html#filepos0001169512)) HDF5中的基本数据单位是数组及其相关信息，如属性、维度和数据类型。它们合在一起称为数据集。数据集可以被分组为称为组的大单元，组可以组织成高层次的组。这种灵活的层次组织使用户能够表达数据集之间复杂的关系。
- en: Beyond the basic library for organizing user data into files, the HDF Group
    also provides a suite of tools and specialization of HDF5 for different applications.
    For example, HDF5 includes a performance profiling tool. NASA has a specialization
    of HDF5, named HDF5-EOS, for data from their Earth-Observing System (EOS); and
    the next-generation DNA sequence community has produced a specialization named
    BioHDF for their bioinformatics data.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 除了将用户数据组织成文件的基本库外，HDF集团还提供了一套工具以及针对不同应用的HDF5专业化。例如，HDF5包括一个性能分析工具。NASA为其地球观测系统（EOS）数据提供了HDF5的专业化版本，名为HDF5-EOS；而下一代DNA序列社区则为其生物信息数据推出了一种名为BioHDF的专业化版本。
- en: HDF5 provides an efficient way for accessing the storage systems on HPC platform.
    In tests, we have demonstrated that using HDF5 to store stock markets data significantly
    speeds up the analysis operations. This is largely due to its efficient compression/decompression
    algorithms that minimize network traffic and I/O operations, which brings us to
    our next point.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: HDF5为高性能计算（HPC）平台上的存储系统提供了一种高效的访问方式。在测试中，我们已经证明，使用HDF5存储股市数据显著加快了分析操作。这在很大程度上归功于其高效的压缩/解压缩算法，这些算法最小化了网络流量和I/O操作，这也引出了我们的下一个要点。
- en: '**22.5.3** ***In Situ*** **Processing**'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.5.3** ***原位*** **处理**'
- en: Over the last few decades, CPU performance has roughly doubled every 18 months
    (Moore's law), while disk performance has been increasing less than 5% a year.
    This difference has caused it to take longer and longer to write out the content
    of the CPU memory. To address this issue, a number of research efforts have focused
    on *in situ* analysis capability (Ayachit et al. [2016]).
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去几十年里，CPU性能大约每18个月翻一番（摩尔定律），而磁盘性能每年增加不到5%。这种差异导致将CPU内存内容写出所需的时间越来越长。为了解决这个问题，一些研究工作集中于*原位*分析能力（Ayachit等人
    [2016]）。
- en: Among the current generation of processing systems, the Adaptable I/O System
    (ADIOS) is the most widely used (Liu et al. [2014]). It employs a number of data
    transport engines that allow users to tap into the I/O stream and perform analytical
    operations. This is useful because irrelevant data can be discarded in-flight,
    hence avoiding its slow and voluminous storage. This same *in situ* mechanism
    also allows it to complete write operations very quickly. In fact, it initially
    gained attention because of its write speed. Since then, the ADIOS developers
    have worked with a number of very large teams to improve their I/O pipelines and
    their analysis capability.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前一代处理系统中，适应性I/O系统（ADIOS）是使用最广泛的系统（Liu et al. [2014]）。它采用了多种数据传输引擎，使用户能够接入I/O流并执行分析操作。这是有用的，因为不相关的数据可以在传输过程中被丢弃，从而避免其缓慢且庞大的存储。同样的*就地*机制也使得它能够非常快速地完成写入操作。事实上，它最初引起关注是因为其写入速度。从那时起，ADIOS开发者与许多大型团队合作，改进了他们的I/O管道和分析能力。
- en: Because ADIOS supports streaming data accesses, it is also highly relevant to
    CIFT work. In a number of demonstrations, ADIOS with ICEE transport engine was
    able to complete distributed streaming data analysis in real-time (Choi et al.
    [2013]). We will describe one of the use cases involving blobs in fusion plasma
    in the next section.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 由于ADIOS支持流数据访问，因此它与CIFT的工作高度相关。在多个演示中，结合ICEE传输引擎的ADIOS能够实时完成分布式流数据分析（Choi et
    al. [2013]）。我们将在下一节描述一个涉及融合等离子体中斑点的用例。
- en: To summarize, *in situ* data processing capability is another very useful tool
    from the HPC ecosystem.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，*就地*数据处理能力是高性能计算（HPC）生态系统中的另一个非常有用的工具。
- en: '**22.5.4 Convergence**'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.5.4 趋同**'
- en: We mentioned earlier that the HPC hardware market is a tiny part of the overall
    computer hardware market. The HPC software market is even smaller compared to
    the overall software market. So far, the HPC software ecosystem is largely maintained
    by a number of small vendors along with some open-source contributors. Therefore,
    HPC system users are under tremendous pressure to migrate to the better supported
    cloud software systems. This is a significant driver for convergence between software
    for HPC and software for cloud (Fox et al. [2015]).
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前提到，HPC硬件市场是整体计算机硬件市场中的一小部分。与整体软件市场相比，HPC软件市场甚至更小。到目前为止，HPC软件生态系统主要由一些小型供应商和一些开源贡献者维护。因此，HPC系统用户面临着迁移到更好支持的云软件系统的巨大压力。这是HPC软件与云软件之间趋同的重要驱动因素（Fox
    et al. [2015]）。
- en: Even though convergence appears to be inevitable, we advocate for a convergence
    option that keeps the advantage of the software tools mentioned above. One of
    the motivations of the CIFT project is to seek a way to transfer the above tools
    to the computing environments of the future.
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管趋同似乎是不可避免的，但我们主张选择一种趋同方案，以保留上述软件工具的优势。CIFT项目的一个动机是寻求将上述工具转移到未来计算环境的方法。
- en: '**22.6 Use Cases**'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.6 用例**'
- en: Data processing is such an important part of modern scientific research that
    some researchers are calling it the fourth paradigm of science (Hey, Tansley,
    and Tolle [2009]). In economics, the same data-driven research activities have
    led to the wildly popular behavioral economics (Camerer and Loewenstein [2011]).
    Much of the recent advances in data-driven research are based on machine learning
    applications (Qiu et al. [2016], Rudin and Wagstaff [2014]). Their successes in
    a wide variety of fields, such as planetary science and bioinformatics, have generated
    considerable interest among researchers from diverse domains. In the rest of this
    section, we describe a few examples applying advanced data analysis techniques
    to various fields, where many of these use cases originated in the CIFT project.
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 数据处理在现代科学研究中是如此重要，以至于一些研究人员将其称为科学的第四范式（Hey, Tansley, and Tolle [2009]）。在经济学中，相同的数据驱动研究活动催生了广受欢迎的行为经济学（Camerer
    and Loewenstein [2011]）。最近的数据驱动研究的许多进展基于机器学习应用（Qiu et al. [2016], Rudin and Wagstaff
    [2014]）。它们在行星科学和生物信息学等广泛领域的成功引起了来自不同领域研究人员的极大兴趣。在本节的其余部分，我们将描述几个将先进数据分析技术应用于各个领域的示例，其中许多用例源自CIFT项目。
- en: '**22.6.1 Supernova Hunting**'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.6.1 超新星搜寻**'
- en: In astronomy, the determination of many important facts such as the expansion
    speed of the universe, is performed by measuring the light from exploding type
    Ia supernovae (Bloom et al. [2012]). The process of searching the night sky for
    exploding supernovae is called synoptic imaging survey. The Palomar Transient
    Factory (PTF) is an example of such a synoptic survey (Nicholas et al. [2009]).
    The PTF telescopes scan the night sky and produce a set of images every 45 minutes.
    The new image is compared against the previous observations of the same patch
    of sky to determine what has changed and to classify the changes. Such identification
    and classification tasks used to be performed by astronomers manually. However,
    the current number of incoming images from the PTF telescopes is too large for
    manual inspection. An automated workflow for these image processing tasks has
    been developed and deployed at a number of different computer centers.
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 在天文学中，通过测量爆炸的Ia型超新星的光来确定许多重要事实，例如宇宙的膨胀速度（Bloom et al. [2012]）。在夜空中寻找爆炸超新星的过程称为综合成像调查。帕洛马瞬态工厂（PTF）就是此类综合调查的一个例子（Nicholas
    et al. [2009]）。PTF望远镜每45分钟扫描一次夜空并生成一组图像。新的图像与之前对同一片天空的观察进行比较，以确定发生了什么变化并对这些变化进行分类。这类识别和分类任务过去是由天文学家手动完成的。然而，来自PTF望远镜的输入图像数量过于庞大，无法进行手动检查。为这些图像处理任务开发并部署了一种自动化工作流，在多个不同的计算中心运行。
- en: '[Figure 22.4](text00004.html#filepos0001128887) shows the supernova that was
    identified earliest in its explosion process. On August 23, 2011, a patch of the
    sky showed no sign of this star, but a faint light showed up on August 24\. This
    quick turnover allowed astronomers around the world to perform detailed follow-up
    observations, which are important for determining the parameters related to the
    expansion of the universe.'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 22.4](text00004.html#filepos0001128887) 显示了在爆炸过程中最早被识别的超新星。2011年8月23日，天空的一片区域没有显示出这颗星星的迹象，但在8月24日出现了一道微弱的光。这一快速的变化使世界各地的天文学家能够进行详细的后续观察，这对确定与宇宙膨胀相关的参数至关重要。'
- en: '![](Image00635.jpg)'
  id: totrans-493
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00635.jpg)'
- en: '[**Figure 22.4**](text00004.html#filepos0001128262) Supernova SN 2011fe was
    discovered 11 hours after first evidence of explosion, as a result of the extensive
    automation in classification of astronomical observations'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 22.4**](text00004.html#filepos0001128262) 超新星SN 2011fe是在首次发现爆炸证据后11小时被发现的，这得益于天文观测分类的广泛自动化。'
- en: The quick identification of this supernova is an important demonstration of
    the machine learning capability of the automated workflow. This workflow processes
    the incoming images to extract the objects that have changed since last observed.
    It then classifies the changed object to determine a preliminary type based on
    the previous training. Since follow-up resources for extracting novel science
    from fast-changing transients are precious, the classification not only needs
    to indicate the assumed type but also the likelihood and confidence of the classification.
    Using classification algorithms trained on PTF data, the mislabeling of transients
    and variable stars has a 3.8% overall error rate. Additional work is expected
    to achieve higher accuracy rates in upcoming surveys, such as for the Large Synoptic
    Survey Telescope.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 这颗超新星的快速识别是自动化工作流机器学习能力的重要证明。该工作流处理输入图像，以提取自上次观察以来发生变化的对象。然后，它对变化的对象进行分类，以根据先前的训练确定初步类型。由于提取快速变化的瞬态新科学的后续资源非常宝贵，因此分类不仅需要指示假定的类型，还需要表明分类的可能性和置信度。使用在PTF数据上训练的分类算法，瞬态和变星的错误标记率为3.8%。预计在即将进行的调查中，例如大视场巡天望远镜，将取得更高的准确率。
- en: '**22.6.2 Blobs in Fusion Plasma**'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.6.2 融合等离子体中的斑点**'
- en: Large-scale scientific exploration in domains such as physics and climatology
    are huge international collaborations involving thousands of scientists each.
    As these collaborations produce more and more data at progressively faster rates,
    the existing workflow management systems are hard-pressed to keep pace. A necessary
    solution is to process, analyze, summarize, and reduce the data before it reaches
    the relatively slow disk storage system, a process known as in-transit processing
    (or in-flight analysis). Working with the ADIOS developers, we have implemented
    the ICEE transport engine to dramatically increase the data-handling capability
    of collaborative workflow systems (Choi et al. [2013]). This new feature significantly
    improved the data flow management for distributed workflows. Tests showed that
    the ICEE engine allowed a number of large international collaborations to make
    near real-time collaborative decisions. Here, we briefly describe the fusion collaboration
    involving KSTAR.
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理学和气候学等领域的大规模科学探索中，涉及成千上万的科学家的国际合作项目。随着这些合作产生越来越多的数据，并且速度不断加快，现有的工作流程管理系统难以跟上。一个必要的解决方案是，在数据到达相对缓慢的磁盘存储系统之前，对其进行处理、分析、总结和缩减，这一过程称为在传输中处理（或飞行分析）。与ADIOS开发人员合作，我们实施了ICEE传输引擎，显著提升了协作工作流程系统的数据处理能力（Choi
    et al. [2013]）。这一新功能显著改善了分布式工作流程的数据流管理。测试表明，ICEE引擎使多个大型国际合作能够做出近实时的协作决策。这里，我们简要描述了涉及KSTAR的聚变合作。
- en: KSTAR is a nuclear fusion reactor with fully superconducting magnets. It is
    located in South Korea, but there are a number of associated research teams around
    the world. During a run of a fusion experiment, some researchers control the physics
    device at KSTAR, but others may want to participate by performing collaborative
    analysis of the preceding runs of the experiment to provide advice on how to configure
    the device for the next run. During the analysis of the experimental measurement
    data, scientists might run simulations or examine previous simulations to study
    parametric choices. Typically, there may be a lapse of 10 to 30 minutes between
    two successive runs, and all collaborative analyses need to complete during this
    time window in order to affect the next run.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: KSTAR是一个配备全超导磁体的核聚变反应堆。它位于韩国，但全球有许多相关研究团队。在聚变实验的运行期间，一些研究人员在KSTAR控制物理设备，而其他研究人员则可能希望通过对先前实验运行进行协作分析来参与，以提供如何配置设备以进行下一个运行的建议。在实验测量数据的分析过程中，科学家可能会运行模拟或检查之前的模拟以研究参数选择。通常，在两次连续运行之间可能会有10到30分钟的间隔，所有的协作分析需要在这个时间窗口内完成，以影响下一个运行。
- en: 'We have demonstrated the functionality of the ICEE workflow system with two
    different types of data: one from the Electron Cyclotron Emission Imaging (ECEI)
    data measured at KSTAR, and the other involving synthetic diagnostic data from
    the XGC modelling. The distributed workflow engine needs to collect data from
    these two sources, extract a feature known as blobs, track the movement of these
    blobs, predict the movement of the blobs in the experimental measurements, and
    then provide advices on actions to be performed. [Figure 22.5](text00004.html#filepos0001133138)
    shows how the ECEI data is processed. The workflow for the XGC simulation data
    is similar to what is shown in [Figure 22.5](text00004.html#filepos0001133138)
    , except that the XGC data is located at NERSC.'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 我们展示了ICEE工作流程系统在两种不同数据类型下的功能：一种来自KSTAR测量的电子回旋辐射成像（ECEI）数据，另一种涉及来自XGC建模的合成诊断数据。分布式工作流程引擎需要收集这两个来源的数据，提取称为“blob”的特征，跟踪这些blob的运动，预测实验测量中blob的移动，并提供行动建议。[图
    22.5](text00004.html#filepos0001133138)展示了ECEI数据的处理方式。XGC模拟数据的工作流程与[图 22.5](text00004.html#filepos0001133138)中显示的类似，只是XGC数据位于NERSC。
- en: '![](Image00651.jpg)'
  id: totrans-500
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00651.jpg)'
- en: '[**Figure 22.5**](text00004.html#filepos0001132658) A distributed workflow
    for studying fusion plasma dynamics'
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 22.5**](text00004.html#filepos0001132658) 研究聚变等离子体动态的分布式工作流程'
- en: To be able to complete the above analytical tasks in real-time, effective data
    management with ICEE transport engine of ADIOS is only part of the story. The
    second part is to detect blobs efficiently (Wu et al. [2016]). In this work, we
    need to reduce the amount of data transported across wide-area networks by selecting
    only the necessary chunks. We then identify all cells within the blobs and group
    these cells into connected regions in space, where each connected region forms
    a blob. The new algorithm we developed partitions the work into different CPU
    cores by taking full advantage of the MPI for communication between the nodes
    and the shared memory among the CPU cores on the same node. Additionally, we also
    updated the connected component label algorithm to correctly identify blobs at
    the edge, which were frequently missed by the earlier detection algorithms. Overall,
    our algorithm was able to identify blobs in a few milliseconds for each time step
    by taking full advantage of the parallelism available in the HPC system.
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够实时完成上述分析任务，使用ADIOS的ICEE传输引擎进行有效的数据管理只是部分解决方案。第二部分是高效检测数据块（Wu et al. [2016]）。在这项工作中，我们需要通过仅选择必要的数据块来减少跨广域网传输的数据量。然后，我们识别所有位于数据块内的单元，并将这些单元分组为空间中的连接区域，每个连接区域形成一个数据块。我们开发的新算法通过充分利用MPI在节点之间的通信和同一节点上CPU核心之间的共享内存，将工作分配到不同的CPU核心。此外，我们还更新了连接组件标签算法，以正确识别边缘的数据块，而这些数据块在早期检测算法中经常被遗漏。总体而言，我们的算法能够在每个时间步中识别数据块，时间仅为几毫秒，充分利用了HPC系统中的并行性。
- en: '**22.6.3 Intraday Peak Electricity Usage**'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.6.3 日内峰值电力使用**'
- en: Utility companies are deploying advanced metering infrastructure (AMI) to capture
    electricity consumption in unprecedented spatial and temporal detail. This vast
    and fast-growing stream of data provides an important testing ground for the predictive
    capability based on big data analytical platforms (Kim et al. [2015]). These cutting-edge
    data science techniques, together with behavioral theories, enable behavior analytics
    to gain novel insights into patterns of electricity consumption and their underlying
    drivers (Todd et al. [2014]).
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 公用事业公司正在部署先进的计量基础设施（AMI），以捕捉前所未有的电力消费时空细节。这一庞大且快速增长的数据流为基于大数据分析平台的预测能力提供了重要的测试场（Kim
    et al. [2015]）。这些尖端的数据科学技术结合行为理论，使得行为分析能够获得对电力消费模式及其潜在驱动因素的新见解（Todd et al. [2014]）。
- en: As electricity cannot be easily stored, its generation must match consumption.
    When the demand exceeds the generation capacity, a blackout will occur, typically
    during the time when consumers need electricity the most. Because increasing generation
    capacity is expensive and requires years of time, regulators and utility companies
    have devised a number of pricing schemes intended to discourage unnecessary consumption
    during peak demand periods.
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 由于电力无法轻易储存，其生成必须与消费相匹配。当需求超过发电能力时，就会发生停电，通常发生在消费者最需要电力的时候。由于增加发电能力成本高昂且需要数年时间，监管机构和公用事业公司制定了一系列定价方案，旨在抑制高峰需求期间的不必要消费。
- en: To measure the effectiveness of a pricing policy on peak demand, one can analyze
    the electricity usage data generated by AMI. Our work focuses on extracting baseline
    models of household electricity usage for a behavior analytics study. The baseline
    models would ideally capture the pattern of household electricity usage including
    all features except the new pricing schemes. There are numerous challenges in
    establishing such a model. For example, there are many features that could affect
    the usage of electricity but for which no information is recorded, such as the
    temperature set point of an air-conditioner or the purchase of a new appliance.
    Other features, such as outdoor temperature, are known, but their impact is difficult
    to capture in simple functions.
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 为了衡量定价政策对峰值需求的有效性，可以分析由AMI生成的电力使用数据。我们的工作专注于提取家庭电力使用的基线模型，以进行行为分析研究。基线模型理想上应捕捉家庭电力使用的模式，包括除新定价方案外的所有特征。建立这样的模型面临众多挑战。例如，有许多特征可能影响电力使用，但没有记录相关信息，如空调的设定温度或新设备的购买。其他特征，例如室外温度是已知的，但其影响很难用简单函数捕捉。
- en: Our work developed a number of new baseline models that could satisfy the above
    requirements. At present, the gold standard baseline is a well-designed randomized
    control group. We showed that our new data-driven baselines could accurately predict
    the average electricity usage of the control group. For this evaluation, we use
    a well-designed study from a region of the United States where the electricity
    usage is the highest in the afternoon and evening during the months of May through
    August. Though this work concentrates on demonstrating that the new baseline models
    are effective for groups, we believe that these new models are also useful for
    studying individual households in the future.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的工作开发了多种新的基线模型，以满足上述要求。目前，黄金标准基线是一个设计良好的随机对照组。我们展示了我们新的数据驱动基线能够准确预测对照组的平均电力使用量。为了进行此评估，我们使用了来自美国某地区的一个精心设计的研究，该地区在五月到八月的下午和晚上电力使用量最高。尽管这项工作集中于证明新的基线模型对群体的有效性，但我们相信这些新模型在未来研究个别家庭时也非常有用。
- en: We explored a number of standard black-box approaches. Among machine learning
    methods, we found gradient tree boosting (GTB) to be more effective than others.
    However, the most accurate GTB models require lagged variables as features (for
    example, the electricity usage a day before and a week before). In our work, we
    need to use the data from year T-1 to establish the baseline usage for year T
    and year T + 1\. The lagged variable for a day before and a week before would
    be incorporating recent information not in year T-1\. We attempted to modify the
    prediction procedure to use the recent predictions in place of the actual measured
    values a day before and a week before; however, our tests show that the prediction
    errors accumulate over time, leading to unrealistic predictions a month or so
    into the summer season. This type of accumulation of prediction errors is common
    to continuous prediction procedures for time series.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 我们探索了多种标准的黑盒方法。在机器学习方法中，我们发现梯度树提升（GTB）比其他方法更有效。然而，最准确的GTB模型需要滞后变量作为特征（例如，前一天和前一周的电力使用量）。在我们的工作中，我们需要使用T-1年的数据来建立T年和T+1年的基线使用量。前一天和前一周的滞后变量将包含在T-1年中没有的最近信息。我们尝试修改预测程序，用最近的预测值替代前一天和前一周的实际测量值；然而，我们的测试表明，预测误差随着时间的推移而累积，导致在夏季进入一个月左右后产生不切实际的预测。这种预测误差的累积在时间序列的连续预测过程中很常见。
- en: To address the above issue, we devised a number of white-box approaches, the
    most effective of which, known as LTAP, is reported here. LTAP is based on the
    fact that the aggregate variable electricity usage per day is accurately described
    by a piece-wise linear function of average daily temperature. This fact allows
    us to make predictions about the total daily electricity usage. By further assuming
    that the usage profile of each household remains the same during the study, we
    are able to assign the hourly usage values from the daily aggregate usage. This
    approach is shown to be self-consistent; that is, the prediction procedure exactly
    reproduces the electricity usage in year T–1, and the predictions for the control
    group in both year T and T + 1 are very close to the actual measured values. Both
    treatment groups have reduced electricity usages during the peak-demand hours,
    and the active group reduced the usage more than the passive group. This observation
    is in line with other studies.
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决上述问题，我们设计了多种白盒方法，其中最有效的方法称为LTAP，在此报告。LTAP基于这样一个事实：每日的总变量电力使用量可以用平均每日温度的分段线性函数准确描述。这个事实使我们能够对每日的总电力使用量进行预测。通过进一步假设每个家庭的使用模式在研究期间保持不变，我们能够从每日的总使用量中分配出每小时的使用值。该方法被证明是自我一致的；即预测过程完全重现了T-1年的电力使用量，并且T年和T+1年对照组的预测值与实际测量值非常接近。两个处理组在峰值需求小时的电力使用量都有所减少，主动组的减少幅度大于被动组。这一观察结果与其他研究一致。
- en: Though the new data-driven baseline model LTAP predicts the average usages of
    the control group accurately, there are some differences in predicted impact of
    the new time-of-use pricing intended to reduce the usage during the peak-demand
    hours (see [Figure 22.6](text00004.html#filepos0001140885) ). For example, with
    the control group as the baseline, the active group reduces its usage by 0.277 kWh
    (out of about 2 kWh) averaged over the peak-demand hours in the first year with
    the new price and 0.198 kWh in the second year. Using LTAP as the baseline, the
    average reductions are only 0.164 kWh for both years. Part of the difference may
    be due to the self-selection bias in treatment groups, especially the active group,
    where the households have to explicitly opt-in to participate in the trial. It
    is likely that the households that elected to join the active group are well-suited
    to take advantage of the proposed new pricing structure. We believe that the LTAP
    baseline is a way to address the self-selection bias and plan to conduct additional
    studies to further verify this.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管新的数据驱动基线模型LTAP准确预测了控制组的平均使用情况，但对于旨在减少高峰需求时段使用的新时段定价的预测影响存在一些差异（见[图22.6](text00004.html#filepos0001140885)）。例如，以控制组作为基线，活跃组在第一个年度新价格下的高峰需求时段平均减少使用量0.277
    kWh（约2 kWh），在第二年减少0.198 kWh。以LTAP作为基线，两年的平均减少量仅为0.164 kWh。部分差异可能由于处理组中的自我选择偏差，尤其是活跃组，其中家庭必须明确选择参加试验。选择加入活跃组的家庭很可能适合利用新定价结构。我们认为LTAP基线是解决自我选择偏差的一种方法，并计划进行额外研究以进一步验证这一点。
- en: '![](Image00666.jpg)'
  id: totrans-511
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00666.jpg)'
- en: '![](Image00677.jpg)'
  id: totrans-512
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00677.jpg)'
- en: '![](Image00692.jpg)'
  id: totrans-513
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00692.jpg)'
- en: '[**Figure 22.6**](text00004.html#filepos0001139615) Gradient tree boosting
    (GBT) appears to follow recent usage too closely and therefore not able to predict
    the baseline usage as well as the newly develop method named LTAP. (a) GTB on
    Control group. (b) LTAP on Control group. (c) GTB on Passive group. (d) LTAP on
    Passive group. (e) GTB on Active group. (f) LTAP on Active group'
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图22.6**](text00004.html#filepos0001139615) 梯度树提升（GBT）似乎过于紧密地跟随最近的使用情况，因此无法像新开发的名为LTAP的方法那样预测基线使用情况。(a)
    控制组的GTB。(b) 控制组的LTAP。(c) 被动组的GTB。(d) 被动组的LTAP。(e) 活跃组的GTB。(f) 活跃组的LTAP。'
- en: '**22.6.4 The Flash Crash of 2010**'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.6.4 2010年闪电崩盘**'
- en: The extended time it took for the SEC and CFTC to investigate the Flash Crash
    of 2010 was the original motivation for CIFT's work. Federal investigators needed
    to sift through tens of terabytes of data to look for the root cause of the crash.
    Since CFTC publicly blamed the volume of data to be the source of the long delay,
    we started our work by looking for HPC tools that could easily handle tens of
    terabytes. Since HDF5 is the most commonly used I/O library, we started our work
    by applying HDF5 to organize a large set of stock trading data (Bethel et al.
    [2011]).
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 美国证券交易委员会（SEC）和商品期货交易委员会（CFTC）调查2010年闪电崩盘所需的延长时间是CIFT工作的最初动机。联邦调查人员需要筛选数十TB的数据以寻找崩盘的根本原因。由于CFTC公开指责数据量是导致延误的原因，我们开始寻找能够轻松处理数十TB数据的高性能计算（HPC）工具。鉴于HDF5是最常用的I/O库，我们的工作始于将HDF5应用于组织大量的股票交易数据（Bethel
    et al. [2011]）。
- en: Let us quickly review what happened during the 2010 Flash Crash. On May 6, at
    about 2:45 p.m. (U.S. Eastern Daylight Time), the Dow Jones Industrial Average
    dropped almost 10%, and many stocks traded at one cent per share, the minimum
    price for any possible trade. [Figure 22.7](text00004.html#filepos0001142959)
    shows an example of another extreme case, where shares of Apple (symbol AAPL)
    traded at $100,000 per share, the maximum possible price allowed by the exchange.
    Clearly, these were unusual events, which undermined investors’ faith and confidence
    in our financial markets. Investors demanded to know what caused these events.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速回顾一下2010年闪电崩盘期间发生的事件。5月6日，大约在下午2:45（美国东部夏令时），道琼斯工业平均指数下跌近10%，许多股票以每股一美分交易，这是任何可能交易的最低价格。[图22.7](text00004.html#filepos0001142959)展示了另一个极端案例，苹果公司（股票代码AAPL）的股票以每股$100,000的价格交易，这是交易所允许的最高价格。显然，这些都是不寻常的事件，削弱了投资者对我们金融市场的信心。投资者要求知道造成这些事件的原因。
- en: '![](Image00709.jpg)'
  id: totrans-518
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00709.jpg)'
- en: '[**Figure 22.7**](text00004.html#filepos0001142401) Apple Stock price on May
    6, 2010, along with HHI and VPIN values computed every 5 minutes during the market
    hours'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图22.7**](text00004.html#filepos0001142401) 2010年5月6日苹果股票价格，以及在市场交易时段每5分钟计算的HHI和VPIN值。'
- en: To make our work relevant to the financial industry, we sought to experiment
    with the HDF5 software, and apply it to the concrete task of computing earlier
    warning indicators. Based on recommendations from a group of institutional investors,
    regulators, and academics, we implemented two sets of indicators that have been
    shown to have “early warning” properties preceding the Flash Crash. They are the
    Volume Synchronized Probability of Informed Trading (VPIN) (Easley, Lopez de Prado,
    and O'Hara [2011]) and a variant of the Herfindahl-Hirschman Index (HHI) (Hirschman
    [1980]) of market fragmentation. We implemented these two algorithms in the C++
    language, while using MPI for inter-processor communication, to take full advantage
    of the HPC systems. The reasoning behind this choice is that if any of these earlier
    warning indicators is shown to be successful, the high-performance implementation
    would allow us to extract the warning signals as early as possible so there might
    be time to take corrective actions. Our effort was one of the first steps to demonstrate
    that it is possible to compute the earlier warning signals fast enough.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的工作与金融行业相关，我们寻求使用HDF5软件进行实验，并将其应用于计算早期预警指标的具体任务。基于一组机构投资者、监管机构和学术界的推荐，我们实现了两组指标，这些指标已被证明具有在闪电崩盘前的“早期预警”特性。它们分别是信息交易的量同步概率（VPIN）（Easley,
    Lopez de Prado, 和 O'Hara [2011]）以及市场碎片化的赫芬达尔-赫希曼指数（HHI）的一个变体（Hirschman [1980]）。我们在C++语言中实现了这两个算法，同时使用MPI进行进程间通信，以充分利用高性能计算（HPC）系统。这一选择的理由是，如果这些早期预警指标中的任何一个被证明是成功的，高性能实现将使我们能够尽早提取警告信号，从而有时间采取纠正措施。我们的努力是展示能够快速计算早期警告信号的第一步之一。
- en: 'For our work, we implemented two versions of the programs: one uses data organized
    in HDF5 files, and another reads the data from the commonly used ASCII text files.
    [Figure 22.8](text00004.html#filepos0001145415) shows the time required to process
    the trading records of all S&P 500 stocks over a 10-year timespan. Since the size
    of the 10-year trading data is still relatively small, we replicated the data
    10 times as well. On a single CPU core (labeled “Serial” in [Figure 22.8](text00004.html#filepos0001145415)
    ), it took about 3.5 hours with ASCII data, but only 603.98 seconds with HDF5
    files. When 512 CPU cores are used, this time reduces to 2.58 seconds using HDF5
    files, resulting in a speedup of 234 times.'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的工作，我们实现了两个版本的程序：一个使用组织在HDF5文件中的数据，另一个从常用的ASCII文本文件中读取数据。[图22.8](text00004.html#filepos0001145415)显示了处理所有标准普尔500只股票在10年期间的交易记录所需的时间。由于10年交易数据的大小仍然相对较小，我们还将数据复制了10倍。在单个CPU核心上（在[图22.8](text00004.html#filepos0001145415)中标记为“串行”），使用ASCII数据大约需要3.5小时，但使用HDF5文件仅需603.98秒。当使用512个CPU核心时，这一时间使用HDF5文件减少到2.58秒，速度提升达到234倍。
- en: '![](Image00468.jpg)'
  id: totrans-522
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00468.jpg)'
- en: '[**Figure 22.8**](text00004.html#filepos0001144627) Time to process 10-year
    worth of SP500 quotes data stored in HDF5 files, which takes 21 times longer when
    the same data is in ASCII files (603.98 seconds versus approximately 3.5 hours)'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图22.8**](text00004.html#filepos0001144627) 处理存储在HDF5文件中的10年期SP500报价数据所需的时间，当相同数据存储在ASCII文件中时，所需时间要长21倍（603.98秒与大约3.5小时相比）。'
- en: On the larger (replicated) dataset, the advantage of HPC code for computing
    these indices is even more pronounced. With 10 times as much data, it took only
    about 2.3 times longer for the computer to complete the tasks, a below-linear
    latency increase. Using more CPU makes HPC even more scalable.
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 在更大的（复制的）数据集中，计算这些指标的HPC代码的优势更加明显。数据量增加10倍时，计算机完成任务所需的时间仅增加了约2.3倍，延迟增幅低于线性。使用更多CPU使得HPC更具可扩展性。
- en: '[Figure 22.8](text00004.html#filepos0001145415) also shows that with a large
    data set, we can further take advantage of the indexing techniques available in
    HDF5 to reduce the data access time (which in turn reduces the overall computation
    time). When 512 CPU cores are used, the total runtime is reduced from 16.95 seconds
    to 4.59 seconds, a speedup of 3.7 due to this HPC technique of indexing.'
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: '[图22.8](text00004.html#filepos0001145415)还显示，利用大量数据集，我们可以进一步利用HDF5中可用的索引技术来减少数据访问时间（这反过来又减少了整体计算时间）。当使用512个CPU核心时，总运行时间从16.95秒减少到4.59秒，得益于这一HPC索引技术，速度提升为3.7倍。'
- en: '**22.6.5 Volume-synchronized Probability of Informed Trading Calibration**'
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.6.5 量同步信息交易概率校准**'
- en: Understanding the volatility of the financial market requires the processing
    of a vast amount of data. We apply techniques from data-intensive scientific applications
    for this task, and demonstrate their effectiveness by computing an early warning
    indicator called Volume Synchronized Probability of Informed Trading (VPIN) on
    a massive set of futures contracts. The test data contains 67 months of trades
    for the hundred most frequently traded futures contracts. On average, processing
    one contract over 67 months takes around 1.5 seconds. Before we had this HPC implementation,
    it took about 18 minutes to complete the same task. Our HPC implementation achieves
    a speedup of 720 times.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 理解金融市场的波动性需要处理大量数据。我们应用数据密集型科学应用中的技术来完成这一任务，并通过在大量期货合约上计算称为成交量同步知情交易概率（VPIN）的早期预警指标来证明其有效性。测试数据包含了最常交易的百种期货合约的67个月交易记录。平均而言，处理一个合约的67个月数据大约需要1.5秒。在我们有这个HPC实现之前，完成同样的任务大约需要18分钟。我们的HPC实现实现了720倍的加速。
- en: Note that the above speedup was obtained solely based on the algorithmic improvement,
    without the benefit of parallelization. The HPC code can run on parallel machines
    using MPI, and thus is able to further reduce the computation time.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，上述加速仅基于算法改进，未利用并行化的优势。HPC代码可以在使用MPI的并行机器上运行，从而进一步减少计算时间。
- en: The software techniques employed in our work include the faster I/O access through
    HDF5 described above, as well as a more streamlined data structure for storing
    the bars and buckets used for the computation of VPIN. More detailed information
    is available in Wu et al. [2013].
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 我们工作中采用的软件技术包括上述通过HDF5实现的更快I/O访问，以及用于存储计算VPIN所需的柱状图和桶的更简化数据结构。更多详细信息可见于Wu等人[2013]。
- en: 'With a faster program to compute VPIN, we were also able to explore the parametric
    choices more closely. For example, we were able to identify the parameter values
    that reduce VPIN''s false positive rate over one hundred contracts from 20% to
    only 7%, see [Figure 22.9](text00004.html#filepos0001149194) . The parameter choices
    to achieve this performance are: (1) pricing the volume bar with the median prices
    of the trades (not the closing price typically used in analyses), (2) 200 buckets
    per day, (3) 30 bars per bucket, (4) support window for computing VPIN = 1 day,
    event duration = 0.1 day, (5) bulk volume classification with Student t-distribution
    with ν = 0.1, and (6) threshold for CDF of VPIN = 0.99\. Again, these parameters
    provide a low false positive rate on the totality of futures contracts, and are
    not the result of individual fitting.'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 借助更快的VPIN计算程序，我们也能更深入地探索参数选择。例如，我们能够识别出将VPIN的假阳性率从100多种合约的20%降低到仅7%的参数值，见[图22.9](text00004.html#filepos0001149194)。实现这一性能的参数选择为：(1)
    用交易的中位价格为成交量柱定价（而非通常分析中使用的收盘价），(2) 每天200个桶，(3) 每个桶30个柱，(4) 计算VPIN的支持窗口=1天，事件持续时间=0.1天，(5)
    使用ν=0.1的学生t分布进行大宗成交量分类，(6) VPIN的CDF阈值=0.99。再次强调，这些参数在所有期货合约上提供了低假阳性率，而不是个别拟合的结果。
- en: '![](Image00742.jpg)'
  id: totrans-531
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00742.jpg)'
- en: '[**Figure 22.9**](text00004.html#filepos0001148409) The average false positive
    rates (α) of different classes of futures contracts ordered according to their
    average.'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图22.9**](text00004.html#filepos0001148409)不同类别的期货合约的平均假阳性率（α），按照其平均值排序。'
- en: On different classes of futures contracts, it is possible to choose different
    parameters to achieve even lower false positive rates. In some cases, the false
    positive rates can fall significantly below 1%. Based on [Figure 22.9](text00004.html#filepos0001149194)
    , interest rate and index futures contracts typically have lower false positive
    rates. The futures contracts on commodities, such as energy and metal, generally
    have higher false positive rates.
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 在不同类别的期货合约中，可以选择不同的参数以实现更低的假阳性率。在某些情况下，假阳性率甚至可以显著低于1%。基于[图22.9](text00004.html#filepos0001149194)，利率和指数期货合约的假阳性率通常较低。商品期货合约，如能源和金属，通常假阳性率较高。
- en: Additionally, a faster program for computing VPIN allows us to validate that
    the events identified by VPIN are “intrinsic,” in the sense that varying parameters
    such as the threshold on VPIN CDF only slightly change the number of events detected.
    Had the events been random, changing this threshold from 0.9 to 0.99 would have
    reduced the number of events by a factor of 10\. In short, a faster VPIN program
    also allows us to confirm the real-time effectiveness of VPIN.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，更快的VPIN计算程序使我们能够验证VPIN识别的事件是“内在的”，因为诸如VPIN CDF阈值等参数的变化只会稍微改变检测到的事件数量。如果这些事件是随机的，将阈值从0.9更改为0.99将会使事件数量减少十倍。简而言之，更快的VPIN程序还使我们能够确认VPIN的实时有效性。
- en: '**22.6.6 Revealing High Frequency Events with Non-uniform Fast Fourier Transform**'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.6.6 使用非均匀快速傅里叶变换揭示高频事件**'
- en: High Frequency Trading is pervasive across all electronic financial markets.
    As algorithms replace tasks previously performed by humans, cascading effects
    similar to the 2010 Flash Crash may become more likely. In our work (Song et al.
    [2014]), we brought together a number of high performance signal-processing tools
    to improve our understanding of these trading activities. As an illustration,
    we summarize the Fourier analysis of the trading prices of natural gas futures.
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 高频交易在所有电子金融市场中普遍存在。随着算法取代人类以前执行的任务，类似于2010年闪电崩盘的级联效应可能变得更加可能。在我们的研究中（宋等人 [2014]），我们汇集了一些高性能信号处理工具，以提高对这些交易活动的理解。作为一个例证，我们总结了天然气期货交易价格的傅里叶分析。
- en: Normally, Fourier analysis is applied on uniformly spaced data. Since market
    activity comes in bursts, we may want to sample financial time series according
    to an index of trading activity. For example, VPIN samples financial series as
    a function of volume traded. However, a Fourier analysis of financial series in
    chronological time may still be instructive. To this purpose, we use a non-uniform
    Fast Fourier Transform (FFT) procedure.
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，傅里叶分析应用于均匀间隔的数据。由于市场活动呈现爆发式，因此我们可能希望根据交易活动的指数来抽样金融时间序列。例如，VPIN根据成交量对金融系列进行抽样。然而，对金融系列进行按时间顺序的傅里叶分析仍然可能是有启发的。为此，我们使用非均匀快速傅里叶变换（FFT）程序。
- en: From the Fourier analysis of the natural gas futures market, we see strong evidences
    of High Frequency Trading in the market. The Fourier components corresponding
    to high frequencies are (1) becoming more prominent in the recent years and (2)
    are much stronger than could be expected from the structure of the market. Additionally,
    a significant amount of trading activity occurs in the first second of every minute,
    which is a tell-tale sign of trading triggered by algorithms that target a Time-Weighted
    Average Price (TWAP).
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 从天然气期货市场的傅里叶分析中，我们看到市场中存在强烈的高频交易证据。对应于高频的傅里叶成分在近年来（1）变得更加突出，且（2）远远强于市场结构所能预期的。此外，每分钟的第一秒发生了大量交易活动，这显然是由旨在达到时间加权平均价格（TWAP）的算法触发的交易迹象。
- en: Fourier analysis on trading data shows that activities at the once-per-minute
    frequency are considerably higher than at neighboring frequencies (see [Figure
    22.10](text00004.html#filepos0001153202) ). Note that the vertical axis is in
    logarithmic scale. The strength of activities at once-per-minute frequency is
    more than ten times stronger than the neighboring frequencies. Additionally, the
    activity is very precisely defined at once-per-minute, which indicates that these
    trades are triggered by intentionally constructed automated events. We take this
    to be strong evidence that TWAP algorithms have a significant presence in this
    market.
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 对交易数据的傅里叶分析表明，每分钟频率的活动明显高于邻近频率（见 [图 22.10](text00004.html#filepos0001153202)）。请注意，纵轴为对数刻度。每分钟频率的活动强度比邻近频率强十倍以上。此外，活动在每分钟的定义非常精确，这表明这些交易是由故意构建的自动事件触发的。我们将此视为TWAP算法在该市场中具有显著存在的强烈证据。
- en: '![](Image00759.jpg)'
  id: totrans-540
  prefs: []
  type: TYPE_IMG
  zh: '![](Image00759.jpg)'
- en: '[**Figure 22.10**](text00004.html#filepos0001152531) Fourier spectrum of trading
    prices of natural gas futures contracts in 2012\. Non-uniform FFT identifies strong
    presence of activities happening once per day (frequency = 366), twice per day
    (frequency = 732), and once per minute (frequency = 527040 = 366*24*60).'
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: '[**图 22.10**](text00004.html#filepos0001152531) 显示了2012年天然气期货合约交易价格的傅里叶频谱。非均匀快速傅里叶变换（FFT）识别出每日发生一次（频率=
    366）、每日发生两次（频率= 732）和每分钟发生一次（频率= 527040 = 366*24*60）活动的强烈存在。'
- en: We expected the frequency analysis to show strong daily cycles. In [Figure 22.10](text00004.html#filepos0001153202)
    , we expect amplitude for frequency 365 to be large. However, we see the highest
    amplitude was for the frequency of 366\. This can be explained because 2012 was
    a leap year. This is a validation that the non-uniform FFT is capturing the expected
    signals. The second- and third-highest amplitudes have the frequencies of 732
    and 52, which are twice-a-day and once-a-week. These are also unsurprising.
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 我们预期频率分析会显示出强烈的日常周期。在[图22.10](text00004.html#filepos0001153202)中，我们预计频率365的振幅会很大。然而，我们看到最高的振幅是频率366。这可以解释为2012年是闰年。这验证了非均匀FFT捕捉到了预期信号。第二和第三高的振幅分别对应于频率732和52，分别是一天两次和一周一次，这也并不令人意外。
- en: We additionally applied the non-uniform FFT on the trading volumes and found
    further evidence of algorithmic trading. Moreover, the signals pointed to a stronger
    presence of algorithmic trading in recent years. Clearly, the non-uniform FFT
    algorithm is useful for analyzing highly irregular time series.
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还对交易量应用了非均匀FFT，发现了更多算法交易的证据。此外，信号指向近年来算法交易的强劲存在。显然，非均匀FFT算法对于分析高度不规则的时间序列非常有用。
- en: '**22.7 Summary and Call for Participation**'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.7 摘要与参与呼吁**'
- en: 'Currently, there are two primary ways to construct large-scale computing platforms:
    the HPC approach and the cloud approach. Most of the scientific computing efforts
    use the HPC approach, while most of the business computing needs are satisfied
    through the cloud approach. The conventional wisdom is that the HPC approach occupies
    a small niche of little consequence. This is not true. HPC systems are essential
    to the progress of scientific research. They played important roles in exciting
    new scientific discoveries including the Higgs particle and gravitational waves.
    They have spurred the development of new subjects of study, such as behavioral
    economics, and new ways of conducting commerce through the Internet. The usefulness
    of extremely large HPC systems has led to the 2015 National Strategic Computing
    Initiative. ^([3](text00004.html#filepos0001169777))'
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，构建大规模计算平台有两种主要方式：HPC方法和云方法。大多数科学计算工作使用HPC方法，而大多数商业计算需求则通过云方法满足。传统观点认为，HPC方法只占据了一个小的、无关紧要的市场。这并不正确。HPC系统对科学研究的进展至关重要。它们在一些激动人心的新科学发现中发挥了重要作用，包括希格斯粒子和引力波。它们还促进了新研究领域的开发，如行为经济学，以及通过互联网进行商业的新方式。极大规模HPC系统的实用性促成了2015年国家战略计算倡议。
- en: There are efforts to make HPC tools even more useful by accelerating their adoption
    in business applications. The HPC4Manufacturing ^([4](text00004.html#filepos0001170487))
    effort is pioneering this knowledge transfer to the U.S. manufacturing industry,
    and has attracted considerable attention. Now is the time to make a more concerted
    push for HPC to meet other critical business needs.
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些努力使HPC工具变得更加有用，以加速它们在商业应用中的采用。HPC4Manufacturing ^([4](text00004.html#filepos0001170487))项目正在将这一知识转移到美国制造业，并引起了相当大的关注。现在是推动HPC以满足其他关键商业需求的更集中时刻。
- en: In recent years, we have developed CIFT as a broad class of business applications
    that could benefit from the HPC tools and techniques. In decisions such as how
    to respond to a voltage fluctuation in a power transformer and an early warning
    signal of impending market volatility event, HPC software tools could help determine
    the signals early enough for decision makers, provide sufficient confidence about
    the prediction, and anticipate the consequence before the catastrophic event arrives.
    These applications have complex computational requirements and often have a stringent
    demand on response time as well. HPC tools are better suited to meet these requirements
    than cloud-based tools.
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 最近几年，我们开发了CIFT作为一类广泛的商业应用，这些应用可以从HPC工具和技术中受益。在如何应对电力变压器的电压波动和即将发生的市场波动事件的早期预警信号等决策中，HPC软件工具可以帮助决策者提前识别信号，为预测提供足够的信心，并在灾难性事件发生之前预测后果。这些应用具有复杂的计算需求，且通常对响应时间有严格要求。HPC工具更适合满足这些需求，而不是基于云的工具。
- en: In our work, we have demonstrated that the HPC I/O library HDF5 can be used
    to accelerate the data access speed by 21-fold, and HPC techniques can accelerate
    the computation of the Flash Crash early-warning indicator VPIN by 720-fold. We
    have developed additional algorithms that enable us to predict the daily peak
    electricity usage years into the future. We anticipate that applying HPC tools
    and techniques to other applications could achieve similarly significant results.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的工作中，我们已经证明 HPC I/O 库 HDF5 可以将数据访问速度加速 21 倍，而 HPC 技术可以将 Flash Crash 预警指标
    VPIN 的计算加速 720 倍。我们开发了额外的算法，使我们能够预测未来数年的日峰电力使用情况。我们预计将 HPC 工具和技术应用于其他领域也能取得同样显著的成果。
- en: In addition to the performance advantages mentioned above, a number of published
    studies (Yelick et al. [2011], Holzman et al. [2017]) show HPC systems to have
    a significant price advantage as well. Depending on the workload's requirement
    on CPU, storage, and networking, using a cloud system might cost 50% more than
    using a HPC system, and, in some cases, as much as seven times more. For the complex
    analytical tasks described in this book, with their constant need to ingest data
    for analysis, we anticipate the cost advantage will continue to be large.
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 除了上述提到的性能优势外，若干已发布的研究（Yelick 等 [2011]，Holzman 等 [2017]）还显示 HPC 系统在价格上也具有显著优势。根据工作负载对
    CPU、存储和网络的需求，使用云系统的成本可能比使用 HPC 系统高 50%，在某些情况下甚至高达七倍。对于本书中描述的复杂分析任务，由于其对数据摄取的持续需求，我们预计成本优势将继续很大。
- en: CIFT is expanding the effort to transfer HPC technology to private companies,
    so that they can also benefit from the price and performance advantages enjoyed
    by large-scale research facilities. Our earlier collaborators have provided the
    funds to start a dedicated HPC system for our work. This resource should make
    it considerably easier for interested parties to try out their applications on
    an HPC system. We are open to different forms of collaborations. For further information
    regarding CIFT, please visit CIFT's web page at [http://crd.lbl.gov/cift/](http://crd.lbl.gov/cift/)
    .
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: CIFT 正在扩大将 HPC 技术转移到私营公司的努力，以便他们也能享受到大型研究设施所享有的价格和性能优势。我们之前的合作伙伴提供了资金，以启动一个专用的
    HPC 系统供我们使用。这个资源应该能让感兴趣的各方更容易地在 HPC 系统上尝试他们的应用程序。我们欢迎不同形式的合作。如需有关 CIFT 的更多信息，请访问
    CIFT 的网页 [http://crd.lbl.gov/cift/](http://crd.lbl.gov/cift/)。
- en: '**22.8 Acknowledgments**'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: '**22.8 致谢**'
- en: The CIFT project is the brainchild of Dr. David Leinweber. Dr. Horst Simon brought
    it to LBNL in 2010\. Drs. E. W. Bethel and D. Bailey led the project for four
    years.
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: CIFT 项目是大卫·莱因维伯博士的构想。霍斯特·西蒙博士于 2010 年将其引入 LBNL。E. W. 贝瑟尔博士和 D. 贝利博士领导了该项目四年。
- en: The CIFT project has received generous gifts from a number of donors. This work
    is supported in part by the Office of Advanced Scientific Computing Research,
    Office of Science, of the U.S. Department of Energy under Contract No. DE-AC02-05CH11231\.
    This research also uses resources of the National Energy Research Scientific Computing
    Center supported under the same contract.
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: CIFT 项目得到了多位捐赠者的慷慨支持。这项工作部分得到了美国能源部科学办公室高级科学计算研究办公室的支持，合同号为 DE-AC02-05CH11231。此项研究还使用了在同一合同下支持的国家能源研究科学计算中心的资源。
- en: '**References**'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '**参考文献**'
- en: 'Aad, G., et al. (2016): “Measurements of the Higgs boson production and decay
    rates and coupling strengths using *pp* collision data at ![](Image00782.jpg)
    and 8 TeV in the ATLAS experiment.” *The European Physical Journal C* , Vol. 76,
    No. 1, p. 6.'
  id: totrans-555
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Aad, G. 等 (2016)： “在 ATLAS 实验中使用 *pp* 碰撞数据测量希格斯玻色子的产生和衰变率及耦合强度。” *欧洲物理杂志 C*，第
    76 卷，第 1 期，第 6 页。
- en: 'Abbott, B.P. et al. (2016): “Observation of gravitational waves from a binary
    black hole merger.” *Physical Review Letters* , Vol. 116, No. 6, p. 061102.'
  id: totrans-556
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Abbott, B.P. 等 (2016)： “观察到来自双黑洞合并的引力波。” *物理评论快报*，第 116 卷，第 6 期，第 061102 页。
- en: 'Armbrust, M., et al. (2010): “A view of cloud computing.” *Communications of
    the ACM* , Vol. 53, No. 4, pp. 50–58.'
  id: totrans-557
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Armbrust, M. 等 (2010)： “云计算的视角。” *ACM 通讯*，第 53 卷，第 4 期，第 50–58 页。
- en: 'Asanovic, K. et al. (2006): “The landscape of parallel computing research:
    A view from Berkeley.” *Technical Report UCB/EECS-2006-183* , EECS Department,
    University of California, Berkeley.'
  id: totrans-558
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Asanovic, K. 等 (2006)： “并行计算研究的全景：来自伯克利的视角。” *技术报告 UCB/EECS-2006-183*，加州大学伯克利分校
    EECS 系。
- en: Ayachit, U. et al. “Performance analysis, design considerations, and applications
    of extreme-scale in situ infrastructures.” Proceedings of the International Conference
    for High Performance Computing, Networking, Storage and Analysis. IEEE Press.
  id: totrans-559
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ayachit, U. 等：“极大规模在线基础设施的性能分析、设计考虑和应用。”《国际高性能计算、网络、存储与分析会议论文集》。IEEE 出版社。
- en: 'Bethel, E. W. et al. (2011): “Federal market information technology in the
    post Flash Crash era: Roles for supercomputing.” Proceedings of WHPCF''2011\.
    ACM. pp. 23–30.'
  id: totrans-560
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bethel, E. W. 等（2011）：“闪电崩盘后时代的联邦市场信息技术：超级计算的角色。”《WHPCF'2011 会议论文集》。ACM。23–30
    页。
- en: 'Bloom, J. S. et al. (2012): “Automating discovery and classification of transients
    and variable stars in the synoptic survey era.” *Publications of the Astronomical
    Society of the Pacific* , Vol. 124, No. 921, p. 1175.'
  id: totrans-561
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Bloom, J. S. 等（2012）：“在综述调查时代自动发现和分类瞬态与变星。” *太平洋天文学会出版物* ，第 124 卷，第 921 期，1175
    页。
- en: 'Camerer, C.F. and G. Loewenstein (2011): “Behavioral economics: Past, present,
    future.” In *Advances in Behavioral Economics* , pp. 1–52.'
  id: totrans-562
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Camerer, C.F. 和 G. Loewenstein（2011）：“行为经济学：过去、现在、未来。”载于 *行为经济学进展* ，1–52 页。
- en: 'Chen, L. et al. (2015): “Profiling and understanding virtualization overhead
    in cloud.” *Parallel Processing (ICPP)* , 2015 44th International Conference.
    IEEE.'
  id: totrans-563
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Chen, L. 等（2015）：“云计算中虚拟化开销的剖析与理解。” *并行处理（ICPP）* ，2015年第44届国际会议。IEEE。
- en: 'Choi, J.Y. et al. (2013): ICEE: “Wide-area in transit data processing framework
    for near real-time scientific applications.” 4th SC Workshop on Petascale (Big)
    Data Analytics: Challenges and Opportunities in Conjunction with SC13.'
  id: totrans-564
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Choi, J.Y. 等（2013）：ICEE：“针对近实时科学应用的广域在线数据处理框架。”第 4 届 SC 大型（大）数据分析研讨会：与 SC13
    相关的挑战与机遇。
- en: 'Dong, Y. et al. (2012): “High performance network virtualization with SR-IOV.”
    *Journal of Parallel and Distributed Computing* , Vol. 72, No. 11, pp. 1471–1480.'
  id: totrans-565
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Dong, Y. 等（2012）：“基于 SR-IOV 的高性能网络虚拟化。” *并行与分布计算杂志* ，第 72 卷，第 11 期，1471–1480
    页。
- en: 'Easley, D., M. Lopez de Prado, and M. O''Hara (2011): “The microstructure of
    the ‘Flash Crash’: Flow toxicity, liquidity crashes and the probability of informed
    trading.” *Journal of Portfolio Management* , Vol. 37, No. 2, pp. 118–128.'
  id: totrans-566
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Easley, D.，M. Lopez de Prado 和 M. O'Hara（2011）：“‘闪电崩盘’的微观结构：流动性毒性、流动性崩溃和知情交易的概率。”
    *投资组合管理杂志* ，第 37 卷，第 2 期，118–128 页。
- en: 'Folk, M. et al. (2011): “An overview of the HDF5 technology suite and its applications.”
    Proceedings of the EDBT/ICDT 2011 Workshop on Array Databases. ACM.'
  id: totrans-567
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Folk, M. 等（2011）：“HDF5 技术套件及其应用概述。”《EDBT/ICDT 2011 数组数据库研讨会论文集》。ACM。
- en: 'Fox, G. et al. (2015): “Big Data, simulations and HPC convergence, iBig Data
    benchmarking”: 6th International Workshop, WBDB 2015, Toronto, ON, Canada, June
    16–17, 2015; and 7th International Workshop, WBDB 2015, New Delhi, India, December
    14–15, 2015, Revised Selected Papers, T. Rabl, et al., eds. 2016, Springer International
    Publishing: Cham. pp. 3–17\. DOI: 10.1007/978-3-319-49748-8_1.'
  id: totrans-568
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Fox, G. 等（2015）：“大数据、模拟与 HPC 融合，iBig Data 基准测试”：第 6 届国际研讨会，WBDB 2015，2015年6月16–17日，加拿大多伦多；第
    7 届国际研讨会，WBDB 2015，2015年12月14–15日，印度新德里，修订精选论文，由 T. Rabl 等编辑。2016，Springer 国际出版：Cham。3–17
    页。DOI: 10.1007/978-3-319-49748-8_1。'
- en: 'Ghemawat, S., H. Gobioff, and S.-T. Leung (2003): “The Google file system,”
    *SOSP ''03: Proceedings of the nineteenth ACM symposium on operating systems principles*
    . ACM. pp. 29–43.'
  id: totrans-569
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ghemawat, S.，H. Gobioff 和 S.-T. Leung（2003）：“谷歌文件系统，” *SOSP '03：第十九届 ACM 操作系统原理研讨会论文集*
    。ACM。29–43 页。
- en: 'Gordon, A. et al. (2012): “ELI: Bare-metal performance for I/O virtualization.”
    *SIGARCH Comput. Archit. News* , Vol. 40, No. 1, pp. 411–422.'
  id: totrans-570
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Gordon, A. 等（2012）：“ELI：为 I/O 虚拟化提供裸金属性能。” *SIGARCH 计算机架构新闻* ，第 40 卷，第 1 期，411–422
    页。
- en: 'Gropp, W., E. Lusk, and A. Skjellum (1999): *Using MPI: Portable Parallel Programming
    with the Message-Passing Interface* . MIT Press.'
  id: totrans-571
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Gropp, W.，E. Lusk 和 A. Skjellum（1999）：*使用 MPI：基于消息传递接口的可移植并行编程* 。MIT 出版社。
- en: 'Hey, T., S. Tansley, and K.M. Tolle (2009): *The Fourth Paradigm: Data-Intensive
    Scientific Discovery* . Vol. 1\. Microsoft research Redmond, WA.'
  id: totrans-572
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Hey, T.，S. Tansley 和 K.M. Tolle（2009）：*第四范式：数据密集型科学发现* 。第 1 卷。微软研究，华盛顿州雷德蒙德。
- en: 'Hirschman, A. O. (1980): *National Power and the Structure of Foreign Trade*
    . Vol. 105\. University of California Press.'
  id: totrans-573
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Hirschman, A. O.（1980）：*国家力量与国际贸易结构* 。第 105 卷。加州大学出版社。
- en: 'Holzman, B. et al. (2017): “HEPCloud, a new paradigm for HEP facilities: CMS
    Amazon Web Services investigation. *Computing and Software for Big Science* ,
    Vol. 1, No. 1, p. 1.'
  id: totrans-574
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Holzman, B. 等（2017）：“HEPCloud，HEP设施的新范式：CMS亚马逊网络服务调查。” *大科学的计算与软件*，第1卷，第1期，第1页。
- en: 'Jackson, K. R., et al. (2010): “Performance analysis of high performance computing
    applications on the Amazon Web Services Cloud. *Cloud Computing Technology and
    Science (CloudCom)* . 2010 Second International Conference. IEEE.'
  id: totrans-575
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Jackson, K. R. 等（2010）：“在亚马逊网络服务云上高性能计算应用的性能分析。” *云计算技术与科学（CloudCom）*。2010年第二届国际会议。IEEE。
- en: 'Kim, T. et al. (2015): “Extracting baseline electricity usage using gradient
    tree boosting.” IEEE International Conference on Smart City/SocialCom/SustainCom
    (SmartCity). IEEE.'
  id: totrans-576
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kim, T. 等（2015）：“使用梯度树提升提取基线电力使用情况。” IEEE智能城市/社会计算/可持续计算国际会议（SmartCity）。IEEE。
- en: 'Kumar, V. et al. (1994): *Introduction to Parallel Computing: Design and Analysis
    of Algorithms* . Benjamin/Cummings Publishing Company.'
  id: totrans-577
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kumar, V. 等（1994）：*并行计算导论：算法的设计与分析*。本杰明/卡明斯出版社。
- en: 'Liu, Q. et al., (2014): “Hello ADIOS: The challenges and lessons of developing
    leadership class I/O frameworks.” *Concurrency and Computation: Practice and Experience*
    , Volume 26, No. 7, pp. 1453–1473.'
  id: totrans-578
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Liu, Q. 等（2014）：“你好，ADIOS：开发领导级I/O框架的挑战和经验。” *并发与计算：实践与经验*，第26卷，第7期，第1453–1473页。
- en: 'National Academies of Sciences, Engineering and Medicine (2016): *Future Directions
    for NSF Advanced Computing Infrastructure to Support U.S. Science and Engineering
    in 2017–2020* . National Academies Press.'
  id: totrans-579
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 国家科学院、工程院和医学研究院（2016）：*2017–2020年支持美国科学和工程的国家科学基金会先进计算基础设施的未来方向*。国家科学院出版社。
- en: 'Nicholas, M. L. et al. (2009): “The Palomar transient factory: System overview,
    performance, and first results.” *Publications of the Astronomical Society of
    the Pacific* , Vol. 121, No. 886, p. 1395.'
  id: totrans-580
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Nicholas, M. L. 等（2009）：“Palomar瞬态工厂：系统概述、性能与初步结果。” *太平洋天文学会出版物*，第121卷，第886期，第1395页。
- en: 'Qiu, J. et al. (2016): “A survey of machine learning for big data processing.”
    *EURASIP Journal on Advances in Signal Processing* , Vol. 2016, No. 1, p. 67\.
    DOI: 10.1186/s13634-016-0355-x'
  id: totrans-581
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Qiu, J. 等（2016）：“大数据处理的机器学习调查。” *EURASIP信号处理进展杂志*，第2016卷，第1期，第67页。DOI: 10.1186/s13634-016-0355-x'
- en: Rudin, C. and K. L. Wagstaff (2014) “Machine learning for science and society.”
    *Machine Learning* , Vol. 95, No. 1, pp. 1–9.
  id: totrans-582
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Rudin, C. 和 K. L. Wagstaff（2014）“科学与社会的机器学习。” *机器学习*，第95卷，第1期，第1–9页。
- en: 'Shoshani, A. and D. Rotem (2010): “Scientific data management: Challenges,
    technology, and deployment.” *Chapman & Hall/CRC Computational Science Series*
    . CRC Press.'
  id: totrans-583
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Shoshani, A. 和 D. Rotem（2010）：“科学数据管理：挑战、技术与部署。” *Chapman & Hall/CRC计算科学系列*。CRC出版社。
- en: 'Snir, M. et al. (1998): *MPI: The Complete Reference. Volume 1, The MPI-1 Core*
    . MIT Press.'
  id: totrans-584
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Snir, M. 等（1998）：*MPI：完整参考。第1卷，MPI-1核心*。麻省理工学院出版社。
- en: 'Song, J. H. et al. (2014): “Exploring irregular time series through non-uniform
    fast Fourier transform.” Proceedings of the 7th Workshop on High Performance Computational
    Finance, IEEE Press.'
  id: totrans-585
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Song, J. H. 等（2014）：“通过非均匀快速傅里叶变换探索不规则时间序列。”第7届高性能计算金融研讨会论文集，IEEE出版社。
- en: 'Todd, A. et al. (2014): “Insights from Smart Meters: The potential for peak
    hour savings from behavior-based programs.” Lawrence Berkeley National Laboratory.
    Available at [https://www4.eere.energy.gov/seeaction/system/files/documents/smart_meters.pdf](https://www4.eere.energy.gov/seeaction/system/files/documents/smart_meters.pdf)
    .'
  id: totrans-586
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Todd, A. 等（2014）：“智能电表的见解：基于行为的项目在高峰时段节省潜力。”劳伦斯·伯克利国家实验室。可在[https://www4.eere.energy.gov/seeaction/system/files/documents/smart_meters.pdf](https://www4.eere.energy.gov/seeaction/system/files/documents/smart_meters.pdf)获取。
- en: 'Wu, K. et al. (2013): “A big data approach to analyzing market volatility.”
    *Algorithmic Finance* . Vol. 2, No. 3, pp. 241–267.'
  id: totrans-587
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wu, K. 等（2013）：“分析市场波动的大数据方法。” *算法金融*。第2卷，第3期，第241–267页。
- en: 'Wu, L. et al. (2016): “Towards real-time detection and tracking of spatio-temporal
    features: Blob-filaments in fusion plasma. *IEEE Transactions on Big Data* , Vol.
    2, No. 3, pp. 262–275.'
  id: totrans-588
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Wu, L. 等（2016）：“朝着实时检测和追踪时空特征：融合等离子体中的斑块-细丝。” *IEEE大数据学报*，第2卷，第3期，第262–275页。
- en: 'Yan, J. et al. (2009): “How much can behavioral targeting help online advertising?”
    Proceedings of the 18th international conference on world wide web. ACM. pp. 261–270.'
  id: totrans-589
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Yan, J. 等（2009）：“行为定向在在线广告中能提供多少帮助？”第18届国际万维网会议论文集。ACM。第261–270页。
- en: 'Yelick, K., et al. (2011): “The Magellan report on cloud computing for science.”
    U.S. Department of Energy, Office of Science.'
  id: totrans-590
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Yelick, K., 等 (2011): “关于科学的云计算的马格兰报告。” 美国能源部，科学办公室。'
- en: 'Zeff, R.L. and B. Aronson (1999): *Advertising on the Internet* . John Wiley
    & Sons.'
  id: totrans-591
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Zeff, R.L. 和 B. Aronson (1999): *互联网广告* 。约翰·威利与儿子公司。'
- en: '**Notes**'
  id: totrans-592
  prefs: []
  type: TYPE_NORMAL
  zh: '**笔记**'
- en: ^([1](text00004.html#filepos0001101859))    NERSC is a National User Facility
    funded by U.S. Department of Energy, located at LBNL. More information about NERSC
    can be found at [http://nersc.gov/](http://nersc.gov/) .
  id: totrans-593
  prefs: []
  type: TYPE_NORMAL
  zh: ^([1](text00004.html#filepos0001101859))    NERSC 是一个由美国能源部资助的国家用户设施，位于 LBNL。关于
    NERSC 的更多信息可在 [http://nersc.gov/](http://nersc.gov/) 找到。
- en: ^([2](text00004.html#filepos0001121679))    The HDF Group web site is [https://www.hdfgroup.org/](https://www.hdfgroup.org/)
    .
  id: totrans-594
  prefs: []
  type: TYPE_NORMAL
  zh: ^([2](text00004.html#filepos0001121679))    HDF Group 网站是 [https://www.hdfgroup.org/](https://www.hdfgroup.org/)
    。
- en: ^([3](text00004.html#filepos0001155611))    The National Strategic Computing
    Initiative plan is available online at [https://www.whitehouse.gov/ sites/whitehouse.gov/files/images/NSCI%20Strategic%20Plan.pdf](https://www.whitehouse.gov/sites/whitehouse.gov/files/images/NSCI%20Strategic%20Plan.pdf)
    . The Wikipedia page on this topic ( [https://en.wikipedia.org/wiki/National_Strategic_Computing_Initiative](https://en.wikipedia.org/wiki/National_Strategic_Computing_Initiative)
    ) also has some useful links to additional information.
  id: totrans-595
  prefs: []
  type: TYPE_NORMAL
  zh: ^([3](text00004.html#filepos0001155611))    国家战略计算计划可在线查看，网址为 [https://www.whitehouse.gov/
    sites/whitehouse.gov/files/images/NSCI%20Strategic%20Plan.pdf](https://www.whitehouse.gov/sites/whitehouse.gov/files/images/NSCI%20Strategic%20Plan.pdf)
    。该主题的维基百科页面 ([https://en.wikipedia.org/wiki/National_Strategic_Computing_Initiative](https://en.wikipedia.org/wiki/National_Strategic_Computing_Initiative)
    ) 也有一些有用的额外信息链接。
- en: ^([4](text00004.html#filepos0001155909))    Information about HPC4Manufacturing
    is available online at [https://hpc4mfg.llnl.gov/](https://hpc4mfg.llnl.gov/)
    .
  id: totrans-596
  prefs: []
  type: TYPE_NORMAL
  zh: ^([4](text00004.html#filepos0001155909))    关于 HPC4Manufacturing 的信息可在线查看，网址为
    [https://hpc4mfg.llnl.gov/](https://hpc4mfg.llnl.gov/) 。
- en: '# 读累了记得休息一会哦~'
  id: totrans-597
  prefs: []
  type: TYPE_NORMAL
  zh: '# 读累了记得休息一会哦~'
- en: '**公众号：古德猫宁李**'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: '**公众号：古德猫宁李**'
- en: 电子书搜索下载
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子书搜索下载
- en: 书单分享
  id: totrans-600
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书单分享
- en: 书友学习交流
  id: totrans-601
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书友学习交流
- en: '**网站：**[沉金书屋 https://www.chenjin5.com](https://www.chenjin5.com)'
  id: totrans-602
  prefs: []
  type: TYPE_NORMAL
  zh: '**网站：**[沉金书屋 https://www.chenjin5.com](https://www.chenjin5.com)'
- en: 电子书搜索下载
  id: totrans-603
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子书搜索下载
- en: 电子书打包资源分享
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子书打包资源分享
- en: 学习资源分享
  id: totrans-605
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习资源分享
