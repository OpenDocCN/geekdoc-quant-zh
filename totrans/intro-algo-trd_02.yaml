- en: Chapter 2 - Algo Trading Basics
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章 - 算法交易基础
- en: “I believe rules are meant to be broken.” – Film producer Robert Evans (likely
    NOT a successful trader)
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “我相信规则是为了被打破的。”——电影制片人罗伯特·埃文斯（可能并不是成功的交易者）
- en: Anytime you trade, whether you are a beginner, intermediate or expert, you are
    using rules to trade.  You might not realize the rules, the rules may change from
    day to day, or hour to hour, but there are rules.  The rule is your decision making
    process – how you decide whether to enter or exit any particular trade.  It might
    be chaotic and disjointed, but there is a rule somewhere in there.  Maybe your
    rule is “rules are made to be broken!”
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 每次交易，无论你是初学者、中级还是专家，你都在使用规则来交易。你可能没有意识到这些规则，规则可能会每天或每小时变化，但确实存在规则。规则是你的决策过程——你如何决定是否进入或退出特定交易。它可能是混乱和支离破碎的，但那里一定有一个规则。也许你的规则是“规则是用来打破的！”
- en: So when the goofy talking head on CNBC screams “buy this stock!” and you follow
    his recommendation?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，当CNBC上那个古怪的评论员大喊“买这只股票！”你会跟随他的建议吗？
- en: 'RULE: Blowhard says buy, you buy.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 规则：某人说买，你就买。
- en: Your cousin calling you with the hot tip?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你表哥给你打电话告诉你内幕消息？
- en: 'RULE: Crazy cousin says he has “inside” info, you buy only if his last tip
    was profitable.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 规则：疯狂的表哥说他有“内部”信息，你只在他上次的建议获利时才买入。
- en: Using technical indicators?
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用技术指标吗？
- en: 'RULE: If the price is above 20 period average, and the RSI value is below 20,
    Sell short.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 规则：如果价格高于20期平均值，并且RSI值低于20，则做空。
- en: The list is never ending – there are an infinite number of rules to buy and
    sell.  But when they are written down, followed exactly, and not subject to judgment
    or discretion, then those rules can be transformed into an algorithm.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 列表是无止境的——买卖规则是无限的。但当它们被写下来、严格遵循且不受判断或自由裁量的影响时，这些规则就可以转化为算法。
- en: What Is In A Typical “Algo?”
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “算法”中包含什么？
- en: Let’s take a look at the components of a typical trading algorithm.  I’ll also
    give some simple examples, in plain English and in Tradestation Easy Language.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看典型交易算法的组成部分。我还将用简单的英语和Tradestation Easy Language给出一些例子。
- en: Long Entry
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 多头进场
- en: This is an absolute requirement – how are you going to enter the market on the
    long (buy) side?  You have to have criteria, or a set of criteria, to enter the
    market.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是绝对必要的——你打算如何在多头（买入）方面进入市场？你必须有标准，或一组标准，来进入市场。
- en: 'An example of this could be a simple momentum type entry:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子可能是一个简单的动量类型进场：
- en: 'Pseudo Code: Enter long on the open of the next bar if current closing price
    is greater than the closing price 5 bars ago.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：如果当前收盘价大于5根K线前的收盘价，则在下一根K线开盘时做多。
- en: 'Tradestation Easy Language Code: if close>close[5] then buy next bar at market;'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation Easy Language代码：如果close>close[5]，则在下一根K线以市场价买入；
- en: Short Entry
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 短头进场
- en: If you are trading stocks, you may not want to be short the market ([https://www.investopedia.com/terms/s/shortselling.asp](https://www.investopedia.com/terms/s/shortselling.asp)). 
    But for futures and forex, you almost certainly will want to be able to go short
    – to benefit from a price decline.  In that case, you will want a short entry
    rule.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在交易股票，你可能不想在市场上做空（[https://www.investopedia.com/terms/s/shortselling.asp](https://www.investopedia.com/terms/s/shortselling.asp)）。但对于期货和外汇，你几乎肯定希望能够做空，以从价格下跌中获利。在这种情况下，你需要一个做空进场规则。
- en: Now, this rule could be the exact opposite of the long entry rule, or it could
    be something completely different.  That is the neat thing about creating your
    own algorithm – you can set it up however you wish.  This ability to customize
    algos to your preferences has a hidden benefit – I have found it much easier to
    adhere to the rules of a strategy I created, compared to a strategy where someone
    else dictated the rules.  And remember, good algorithmic trading is all about
    following the rules.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这个规则可能与多头进场规则正好相反，或者可能完全不同。这就是创建自己算法的有趣之处——你可以按自己想要的方式设置。定制算法以符合个人偏好的能力还有一个隐藏的好处——我发现比起遵循别人设定的规则，遵循我自己创建的策略规则要容易得多。请记住，良好的算法交易就是遵循规则。
- en: 'An example of a short entry could be a simple moving average crossover:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一个短线进场的例子可能是简单的移动平均线交叉：
- en: 'Pseudo Code: Enter short on the next bar if the closing prices crosses below
    the 7 period moving average.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：如果收盘价跌破7期移动平均线，则在下一根K线做空。
- en: 'Tradestation Easy Language Code: if close crosses below average(close,7) then
    sell short next bar at market;'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation Easy Language代码：如果收盘价跌破平均值（close,7），则在下一根K线以市场价做空；
- en: Long Exit
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 多头出场
- en: Obviously, if you have a long entry rule, you also need a long exit rule.  This
    exit could be based on the current position’s profit or loss (see “stop loss”
    and “profit target” on the next few pages), or it could be based on a technical
    indicator, chart pattern, etc.  It is just some trigger to tell you to exit the
    long position.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，如果你有一个多头进场规则，你也需要一个多头退出规则。这个退出可以基于当前头寸的利润或损失（见下一几页的“止损”和“利润目标”），也可以基于技术指标、图表模式等。它只是一个触发器，用来告诉你退出多头头寸。
- en: 'An example of a long exit could be a chart pattern – exit after 2 consecutive
    down closes:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 多头退出的一个例子可以是图表模式——在连续两个下跌收盘后退出：
- en: 'Pseudo Code: Exit long position if close of this bar is less than close of
    previous bar, and close of previous bar is less than close of 2 bars ago.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：如果此柱的收盘价低于前一柱的收盘价，并且前一柱的收盘价低于两根柱前的收盘价，则退出多头头寸。
- en: 'Tradestation Easy Language Code: if close<close[1] and close[1]<close[2] then
    sell next bar at market;'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：如果 close<close[1] 且 close[1]<close[2]，则在下一个柱以市价卖出；
- en: Short Exit
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 空头退出
- en: If you have a short entry, you will likely want a short exit.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一个空头进场，你可能也会想要一个空头退出。
- en: 'An example of a short exit could to close every Thursday:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 空头退出的一个例子可以是在每个星期四平仓：
- en: 'Pseudo Code: Exit short if today is Thursday.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：如果今天是星期四，则退出空头。
- en: 'Tradestation Easy Language Code: if dayofweek(Date)=4 then buytocover next
    bar at market;'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：如果 dayofweek(Date)=4，则在下一个柱以市价买回；
- en: Stop And Reverse
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 停止并反转
- en: For the long and short exits above, the current position would be closed, leaving
    the trader flat.  But what if you wanted to reverse the position?  Let’s say you
    were long, and if certain criteria is met, you want to exit your long AND go short
    at the same time?
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 对于上述多头和空头退出，当前头寸将被平仓，使交易者保持平仓状态。但是如果你想反转头寸呢？假设你是多头，如果满足某些条件，你希望同时退出多头并做空？
- en: 'An example would be to reverse long and go short if a new low was hit:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是如果出现新低，则反向做多并做空：
- en: 'Pseudo Code: Exit long, and go short, if the current bar low is the lowest
    low of last 12 bars.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：如果当前柱的低点是过去12根柱的最低低点，则退出多头并做空。
- en: 'Tradestation Easy Language Code: if low=lowest(low,12) then sellshort next
    bar at market;'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：如果 low=lowest(low,12)，则在下一个柱以市价卖空；
- en: Stop Loss
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 止损
- en: Most algo traders want to protect themselves in case of an adverse price move. 
    The thinking is that at some point it makes sense to exit the market, regardless
    of what the technical indicators, chart pattern or whatever entry signal used
    indicates.  That can be achieved by a simple stop loss.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数算法交易者希望保护自己，以防价格逆转。考虑到某个时刻退出市场是合理的，无论技术指标、图表模式或任何使用的进场信号显示什么。这可以通过简单的止损实现。
- en: 'Pseudo Code: Exit position if the loss of the current position hits -$500.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：如果当前头寸的损失达到-$500，则退出头寸。
- en: 'Tradestation Easy Language Code: SetStopLoss(500);'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：SetStopLoss(500);
- en: Profit Target
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 利润目标
- en: As with the stop loss, most algo traders want to exit if price goes in their
    favor.  When a certain profit level is hit, they want to exit.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 与止损一样，大多数算法交易者希望在价格朝有利方向移动时退出。当达到某个利润水平时，他们希望退出。
- en: 'Pseudo Code: Exit position if the profit of the current position hits +$2500.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：如果当前头寸的利润达到+$2500，则退出头寸。
- en: 'Tradestation Easy Language Code: SetProfitTarget(2500);'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：SetProfitTarget(2500);
- en: Position Sizing
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 头寸规模
- en: As an optional feature, you may want the algorithm to determine how many shares
    or contracts to buy/sell.  This includes the concept of position sizing, which
    is a whole topic onto itself!  Some common position sizing techniques include
    fixed fractional and fixed ratio, along with the simple “trade x contracts per
    $y of equity.”
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个可选功能，你可能希望算法决定买入/卖出多少股或合约。这包括头寸规模的概念，这是一个独立的话题！一些常见的头寸规模技术包括固定分数和固定比率，以及简单的“每$y的股本交易x合约”。
- en: 'Pseudo Code: Trade 1 contract for every $10,000 in current equity (starting
    equity plus profits to date)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 伪代码：每$10,000的当前股本交易1个合约（起始股本加上到目前为止的利润）
- en: 'Tradestation Easy Language Code: ncons = int((startingequity+NetProfit)/10000);
    buy ncons contracts next bar at market;'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：ncons = int((startingequity+NetProfit)/10000); 在下一个柱以市价买入
    ncons 合约；
- en: Order Types
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 订单类型
- en: The types of orders that can be placed by your algorithm depend in part on the
    trading platform.  The three most common types are market orders, stop orders
    and limit orders.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你的算法可以下的订单类型部分取决于交易平台。最常见的三种类型是市价单、止损单和限价单。
- en: 'Tradestation Easy Language Code:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：
- en: //Market order
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: //市场订单
- en: Buy Next Bar At Market;
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在市场上以市价买入下一根柱子；
- en: //Stop Order
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: //止损单
- en: Sell Next Bar at XXXX stop;  //where XXXX=price you want to exit at, below the
    current market price
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在 XXXX 停止时在下一根柱子卖出； //其中 XXXX=您希望在当前市场价格以下退出的价格
- en: //Limit Order
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: //限价单
- en: Sell Next Bar at XXXX limit;  //where XXXX=price you want to exit at, above
    the current market price
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 XXXX 限价时在下一根柱子卖出； //其中 XXXX=您希望在当前市场价格以上退出的价格
- en: Big Order Fill Algos
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 大订单成交算法
- en: All of the algo components I have just mentioned can all be used by retail traders. 
    Large professional traders have their own algos, which you may have heard about. 
    These include various types of “fill” algos – schemes to trade large quantities
    of an instrument.  When you are trading 1000 contracts of something like the mini
    S&P futures, you can’t just submit a market order for 1,000 contracts – it will
    disrupt the market, and give you a poor average fill price.  The order needs to
    be “worked,” that is broken down into small chunks, and fill over a specific time
    or around a specific price.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚提到的所有算法组件都可以被零售交易者使用。大型专业交易者有自己的算法，您可能听说过。这些包括各种类型的“成交”算法——用于大规模交易某种工具的方案。当您交易类似迷你
    S&P 期货的 1000 合约时，您不能仅仅提交一个 1000 合约的市场订单——这会扰乱市场，并给您一个糟糕的平均成交价格。该订单需要“处理”，也就是说，需要分解成小块，在特定时间或特定价格附近完成成交。
- en: You likely will never need these types of algos, but you should be aware that
    they exist.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能永远不需要这些类型的算法，但您应该知道它们的存在。
- en: Higher Level Algos
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 更高级的算法
- en: In the example components just given, it was assumed that the trader was trading
    a single algorithm.  But what happens when the trader has 10, 20 or more algorithms? 
    How do things work then?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在刚才给出的示例组件中，假设交易者只交易一个算法。但当交易者有 10 个、20 个或更多算法时，会发生什么呢？那时候事情是如何运作的？
- en: The answer is that once one codes a single algorithm, these algos can stand
    alone, or they can “talk” to each other.  Perhaps you will want to limit the number
    of open positions arising from different algos, or maybe base your position sizing
    on profits to date from all algorithms.  The possibilities can be mind boggling,
    and go beyond the scope of this introductory book.  But it is worthwhile to understand
    these “add ons” to a simple one market algorithm exist.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是，一旦编码了一个单一算法，这些算法可以独立存在，或者它们可以“相互交流”。也许您会想限制不同算法产生的未平仓头寸数量，或者可能基于所有算法的当前利润来决定头寸大小。可能性令人瞠目结舌，超出了本书的范围。但理解这些“附加功能”对于一个简单的市场算法是存在的，还是很有价值的。
- en: For many traders, to keep things simple, they treat each algo as if it is in
    its own little world.  Then, they use outside analysis (perhaps in Excel) to put
    the algos in a portfolio, to determine proper risk exposure, proper position sizing,
    etc.  It is an exercise a beginning algo trader will not have to worry about just
    yet, but should at least be aware of.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多交易者来说，为了简单起见，他们将每个算法视为独立的小世界。然后，他们使用外部分析（可能在 Excel 中）将算法组合成一个投资组合，以确定适当的风险敞口、适当的头寸大小等。这是初学者算法交易者尚不需要担心的事情，但至少应该知道。
- en: Putting It All Together
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 综合应用
- en: Here is a simple example of an algo that goes long and short, has a stop loss
    and profit target, can stop and reverse and also can go flat.  It includes a simple
    position sizing approach, too.  I do not recommend it (since you personally have
    not tested and verified this algo is a money maker), but you could put this in
    your trading platform and start trading.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个简单的算法示例，它既能做多又能做空，具有止损和利润目标，可以停止和反转，并且也可以平仓。它还包含一种简单的头寸大小方法。我不推荐它（因为您个人尚未测试并验证该算法是盈利的），但您可以将其放入您的交易平台并开始交易。
- en: 'Tradestation Easy Language Code:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Tradestation 易语言代码：
- en: 'Input: StartingCapital (10000);'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：初始资本（10000）；
- en: 'Var: Ncons(1);'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 变量：Ncons(1)；
- en: //position sizing calculation
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: //头寸大小计算
- en: Ncons=Round(((StartingCapital+NetProfit)/10000),0);
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Ncons=四舍五入(((初始资本+净利润)/10000),0);
- en: //long and short entries, will stop and reverse
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: //多头和空头入场，将停止并反转
- en: If close>close[5] then buy Ncons contracts next bar at market;
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 close>close[5] 则在下一根柱子以市价买入 Ncons 合约；
- en: If close<close[5] then sellshort Ncons contracts next bar at market;
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 close<close[5] 则在下一根柱子以市价卖空 Ncons 合约；
- en: //long and short technical type exits
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: //多头和空头的技术性退出
- en: If close=lowest(close,3) then sell next bar at market;
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 close=最低(close,3) 则在下一根柱子以市价卖出；
- en: If close=highest(close,3) then buytocover next bar at market;
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 close=最高(close,3) 则在下一根柱子以市价买回；
- en: //standard dollar based stop loss and profit target
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: //标准美元止损和利润目标
- en: Setstopcontract;
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 设置止损合约；
- en: SetStopLoss(500);
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 设置止损(500)；
- en: SetProfitTarget(2000);
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: SetProfitTarget(2000);
