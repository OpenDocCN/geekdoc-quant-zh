["```pypython\n\ndef forex_trading_strategy(data, threshold):\n\nif data['FX_rate'] > threshold:\n\nreturn \"Buy\"\n\nelse:\n\nreturn \"Sell\"\n\n```", "```pypython\n\nimport pandas as pd\n\ndef calculate_sma(data, window):\n\nreturn data.rolling(window).mean()\n\ndata = pd.read_csv('stock_data.csv')\n\nSMA = calculate_sma(data['Close'], 20)\n\n```", "```pypython\n\nimport numpy as np\n\ndef calculate_volatility(price_array):\n\nlog_returns = np.log(price_array[1:] / price_array[:-1])\n\nvolatility = np.sqrt(np.mean(log_returns2))\n\nreturn volatility\n\n```", "```pypython\n\nimport pandas as pd\n\n# Reading data from a CSV file\n\ndata = pd.read_csv('stock_data.csv')\n\n```", "```pypython\n\n# Writing data to a CSV file\n\ndata.to_csv('processed_data.csv', index=False)\n\n```", "```pypython\n\n# Appending data to a CSV file\n\ndata.to_csv('historical_data.csv', mode='a', header=False)\n\n```", "```pypython\n\nimport os\n\n# Listing all files in a directory\n\nfile_list = os.listdir('/data')\n\n# Renaming a file\n\nos.rename('old_filename.csv', 'new_filename.csv')\n\n```", "```pypython\n\ntry:\n\ndata = pd.read_csv('non_existent_file.csv')\n\nexcept FileNotFoundError:\n\nprint(\"Specified file does not exist. Please check the file path.\")\n\n```", "```pypython\n\nimport numpy as np\n\n# Create a one-dimensional NumPy array\n\none_d_array = np.array([4, 5, 6])\n\nprint(one_d_array)\n\n# Perform some basic statistical operations\n\nprint(\"Mean: \", np.mean(one_d_array))\n\nprint(\"Standard Deviation: \", np.std(one_d_array))\n\n```", "```pypython\n\nimport pandas as pd\n\n# Create a DataFrame\n\ndf = pd.DataFrame({\n\n'A': ['foo', 'bar', 'foo', 'bar', 'foo', 'bar', 'foo', 'foo'],\n\n'B': ['one', 'one', 'two', 'three', 'two', 'two', 'one', 'three'],\n\n'C': np.random.randn(8),\n\n'D': np.random.randn(8)\n\n})\n\n# Group by, pivot tables, and so much more!\n\ngrouped = df.groupby(['A', 'B'])\n\n```", "```pypython\n\nimport matplotlib.pyplot as plt\n\nimport seaborn as sns\n\n# Simple line chart with Matplotlib\n\nplt.plot([1, 2, 3, 4])\n\nplt.ylabel('some numbers')\n\nplt.show()\n\n# Histogram with Seaborn\n\nx = np.random.normal(size=100)\n\nsns.distplot(x, bins=20, kde=True)\n\n```", "```pypython\n\nfrom sklearn import datasets, svm\n\n# Load digits dataset\n\ndigits = datasets.load_digits()\n\n# Create a classifier: a support vector classifier\n\nclassifier = svm.SVC(gamma=0.001)\n\n# We learn the digits on the first half of the digits\n\nclassifier.fit(digits.data[:digits.target.shape[0]//2],\n\ndigits.target[:digits.target.shape[0]//2])\n\n```"]